{"version":3,"file":"static/js/951.f51598e8.chunk.js","mappings":"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","sources":["utils/dom-optimizer.ts","components/CustomInput.tsx","views/ForgotPassword.tsx"],"sourcesContent":["/**\r\n * 防抖函数\r\n * @param func 要执行的函数\r\n * @param wait 等待时间（毫秒）\r\n * @returns 防抖处理后的函数\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number = 300\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout | null = null;\r\n\r\n  return function(this: any, ...args: Parameters<T>): void {\r\n    const context = this;\r\n    \r\n    if (timeout) {\r\n      clearTimeout(timeout);\r\n    }\r\n    \r\n    timeout = setTimeout(() => {\r\n      func.apply(context, args);\r\n    }, wait);\r\n  };\r\n}\r\n\r\n/**\r\n * 节流函数\r\n * @param func 要执行的函数\r\n * @param limit 限制时间（毫秒）\r\n * @returns 节流处理后的函数\r\n */\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number = 300\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean = false;\r\n  \r\n  return function(this: any, ...args: Parameters<T>): void {\r\n    const context = this;\r\n    \r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => {\r\n        inThrottle = false;\r\n      }, limit);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 延迟执行函数\r\n * @param ms 延迟时间（毫秒）\r\n * @returns Promise对象\r\n */\r\nexport function delay(ms: number): Promise<void> {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\n/**\r\n * 平滑滚动到指定元素\r\n * @param elementId 元素ID\r\n * @param offset 偏移量（像素）\r\n */\r\nexport function scrollToElement(elementId: string, offset: number = 0): void {\r\n  const element = document.getElementById(elementId);\r\n  if (element) {\r\n    const elementPosition = element.getBoundingClientRect().top;\r\n    const offsetPosition = elementPosition + window.pageYOffset - offset;\r\n    \r\n    window.scrollTo({\r\n      top: offsetPosition,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * 检测设备类型\r\n * @returns 设备类型描述\r\n */\r\nexport function getDeviceType(): string {\r\n  const ua = navigator.userAgent;\r\n  if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\r\n    return 'tablet';\r\n  }\r\n  if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(ua)) {\r\n    return 'mobile';\r\n  }\r\n  return 'desktop';\r\n} ","import React, { useState, forwardRef } from 'react';\r\nimport { \r\n  TextField, \r\n  InputAdornment, \r\n  IconButton, \r\n  TextFieldProps,\r\n  styled\r\n} from '@mui/material';\r\nimport { \r\n  Visibility, \r\n  VisibilityOff, \r\n  Person, \r\n  Lock, \r\n  Email, \r\n  Phone,\r\n  Search\r\n} from '@mui/icons-material';\r\n\r\n// 样式化的TextField组件\r\nconst StyledTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-root': {\r\n    borderRadius: '12px',\r\n    transition: 'all 0.3s',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: '0 0 0 2px rgba(0, 113, 227, 0.2)',\r\n    },\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  '& .MuiOutlinedInput-input': {\r\n    padding: '14px 16px',\r\n  },\r\n  '& .MuiInputLabel-outlined': {\r\n    transform: 'translate(16px, 15px) scale(1)',\r\n  },\r\n  '& .MuiInputLabel-outlined.MuiInputLabel-shrink': {\r\n    transform: 'translate(16px, -6px) scale(0.75)',\r\n  },\r\n}));\r\n\r\n// 图标映射\r\nconst iconMap: { [key: string]: React.ReactElement } = {\r\n  'person': <Person />,\r\n  'lock': <Lock />,\r\n  'email': <Email />,\r\n  'phone': <Phone />,\r\n  'search': <Search />\r\n};\r\n\r\n// 自定义输入组件属性\r\ninterface CustomInputProps extends Omit<TextFieldProps, 'variant'> {\r\n  prefixIcon?: string;\r\n  showPassword?: boolean;\r\n  onEnter?: () => void;\r\n}\r\n\r\n// 自定义输入组件\r\nconst CustomInput = forwardRef<HTMLDivElement, CustomInputProps>(\r\n  ({ prefixIcon, showPassword, onEnter, onChange, ...props }, ref) => {\r\n    const [showPasswordValue, setShowPasswordValue] = useState(false);\r\n\r\n    // 处理回车键按下事件\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (e.key === 'Enter' && onEnter) {\r\n        onEnter();\r\n      }\r\n      // 确保原始的onKeyDown事件也被调用\r\n      if (props.onKeyDown) {\r\n        props.onKeyDown(e as any);\r\n      }\r\n    };\r\n\r\n    // 处理密码可见性切换\r\n    const handleClickShowPassword = () => {\r\n      setShowPasswordValue(!showPasswordValue);\r\n    };\r\n\r\n    // 获取密码输入类型\r\n    const getType = () => {\r\n      if (props.type === 'password') {\r\n        return showPasswordValue ? 'text' : 'password';\r\n      }\r\n      return props.type;\r\n    };\r\n\r\n    // 获取前缀图标\r\n    const getPrefixIcon = () => {\r\n      if (!prefixIcon) return null;\r\n      return iconMap[prefixIcon] || null;\r\n    };\r\n\r\n    // 确保onChange事件被正确处理\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (onChange) {\r\n        onChange(e as any);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <StyledTextField\r\n        ref={ref}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        {...props}\r\n        type={getType()}\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleChange}\r\n        InputProps={{\r\n          ...props.InputProps,\r\n          startAdornment: prefixIcon ? (\r\n            <InputAdornment position=\"start\">\r\n              {getPrefixIcon()}\r\n            </InputAdornment>\r\n          ) : props.InputProps?.startAdornment,\r\n          endAdornment: props.type === 'password' && showPassword ? (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                edge=\"end\"\r\n                size=\"large\"\r\n              >\r\n                {showPasswordValue ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ) : props.InputProps?.endAdornment,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomInput; ","import React, { useState, FormEvent, useEffect, useRef } from 'react';\r\n// import { useNavigate, Link } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport axiosInstance from '../api/axios';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Button, \r\n  Paper,\r\n  Alert,\r\n  styled,\r\n  Stack,\r\n  IconButton,\r\n  GlobalStyles\r\n} from '@mui/material';\r\nimport CustomInput from '../components/CustomInput';\r\n// import { forgotPassword, sendVerificationCode, resetPasswordWithCode } from '../api/auth';\r\nimport { resetPasswordWithCode, verifyUsernameEmail } from '../api/auth';\r\nimport { debounce } from '../utils/dom-optimizer';\r\n\r\n// 全局样式定义\r\nconst GlobalStylesCustom = () => (\r\n  <GlobalStyles styles={{\r\n    '@keyframes fadeIn': {\r\n      '0%': {\r\n        opacity: 0,\r\n        transform: 'translateY(-10px)'\r\n      },\r\n      '100%': {\r\n        opacity: 1,\r\n        transform: 'translateY(0)'\r\n      }\r\n    },\r\n    '@keyframes slideIn': {\r\n      '0%': {\r\n        opacity: 0,\r\n        transform: 'translateX(-10px)'\r\n      },\r\n      '100%': {\r\n        opacity: 1,\r\n        transform: 'translateX(0)'\r\n      }\r\n    },\r\n    '@keyframes pulse': {\r\n      '0%': {\r\n        boxShadow: '0 0 0 0 rgba(76, 175, 80, 0.4)'\r\n      },\r\n      '70%': {\r\n        boxShadow: '0 0 0 10px rgba(76, 175, 80, 0)'\r\n      },\r\n      '100%': {\r\n        boxShadow: '0 0 0 0 rgba(76, 175, 80, 0)'\r\n      }\r\n    },\r\n    '@keyframes bounce': {\r\n      '0%, 20%, 50%, 80%, 100%': {\r\n        transform: 'translateY(0)'\r\n      },\r\n      '40%': {\r\n        transform: 'translateY(-10px)'\r\n      },\r\n      '60%': {\r\n        transform: 'translateY(-5px)'\r\n      }\r\n    }\r\n  }} />\r\n);\r\n\r\n// 自定义Alert样式\r\nconst StyledAlert = styled(Alert)(({ theme, severity }) => ({\r\n  borderRadius: '8px',\r\n  padding: '10px 16px',\r\n  fontSize: '14px',\r\n  fontWeight: 500,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  boxShadow: '0 2px 10px rgba(0, 0, 0, 0.08)',\r\n  border: '1px solid',\r\n  borderColor: severity === 'success' \r\n    ? theme.palette.success.light \r\n    : severity === 'error' \r\n    ? theme.palette.error.light\r\n    : theme.palette.warning.light,\r\n  '& .MuiAlert-icon': {\r\n    fontSize: '20px',\r\n    opacity: 0.9,\r\n    marginRight: '12px'\r\n  },\r\n  '& .MuiAlert-message': {\r\n    padding: '4px 0'\r\n  }\r\n}));\r\n\r\n// 成功提示框样式\r\nconst SuccessAlert = styled(StyledAlert)(({ theme }) => ({\r\n  backgroundColor: 'rgba(237, 247, 237, 0.9)',\r\n  borderColor: theme.palette.success.main,\r\n  boxShadow: '0 4px 12px rgba(76, 175, 80, 0.15)',\r\n  padding: '16px',\r\n  '& .MuiAlert-icon': {\r\n    fontSize: '24px',\r\n    color: theme.palette.success.main\r\n  },\r\n  '& .MuiAlert-message': {\r\n    fontSize: '15px',\r\n    fontWeight: 600\r\n  }\r\n}));\r\n\r\n// 样式化组件\r\nconst ForgotContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  minHeight: '100vh',\r\n  width: '100%',\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  padding: '40px 0',\r\n  boxSizing: 'border-box',\r\n}));\r\n\r\nconst ForgotContent = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  maxWidth: '460px',\r\n  zIndex: 1,\r\n}));\r\n\r\nconst ForgotBox = styled(Paper)(({ theme }) => ({\r\n  width: '100%',\r\n  padding: '40px',\r\n  borderRadius: '20px',\r\n  boxShadow: '0 10px 30px rgba(0, 0, 0, 0.1)',\r\n  overflow: 'hidden',\r\n  border: '1px solid rgba(255, 255, 255, 0.5)',\r\n  margin: '20px 0',\r\n}));\r\n\r\nconst LogoContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  marginBottom: '20px',\r\n}));\r\n\r\nconst LogoImgContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  width: '80px',\r\n  height: '80px',\r\n  borderRadius: '50%',\r\n  background: 'white',\r\n  boxShadow: '0 8px 16px rgba(0, 113, 227, 0.3)',\r\n  marginBottom: '15px',\r\n  overflow: 'hidden',\r\n}));\r\n\r\nconst FormActions = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '15px',\r\n  marginTop: '30px',\r\n  width: '100%',\r\n}));\r\n\r\nconst LoginLink = styled(Link)(({ theme }) => ({\r\n  color: theme.palette.primary.main,\r\n  textDecoration: 'none',\r\n  fontSize: '14px',\r\n  transition: 'color 0.3s',\r\n  textAlign: 'center',\r\n  display: 'block',\r\n  marginTop: theme.spacing(2),\r\n  '&:hover': {\r\n    color: theme.palette.primary.light,\r\n    textDecoration: 'underline',\r\n  },\r\n}));\r\n\r\nconst ForgotFooter = styled(Box)(({ theme }) => ({\r\n  marginTop: '20px',\r\n  color: '#5d6280',\r\n  textAlign: 'center',\r\n  fontSize: '14px',\r\n  fontWeight: 600,\r\n  textShadow: '0 1px 1px rgba(255, 255, 255, 0.5)',\r\n}));\r\n\r\n// 忘记密码组件\r\nconst ForgotPassword: React.FC = () => {\r\n  // const navigate = useNavigate();\r\n  const navigateRef = useRef(false);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    code: '',\r\n    newPassword: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState<'error' | 'success'>('error');\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [codeSending, setCodeSending] = useState(false);\r\n  const [countdown, setCountdown] = useState(0);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  const [resetSuccess, setResetSuccess] = useState(false);\r\n  const [redirectCountdown, setRedirectCountdown] = useState(3);\r\n\r\n  // 阻止所有导航\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event: BeforeUnloadEvent) => {\r\n      if (!navigateRef.current) {\r\n        event.preventDefault();\r\n        event.returnValue = '';\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []);\r\n\r\n  // 处理输入变化\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // 当用户名或邮箱变化时，重置验证状态\r\n    if (name === 'username' || name === 'email') {\r\n      setEmailVerified(false);\r\n    }\r\n  };\r\n  \r\n  // 发送验证码 - 使用axios直接请求而非axiosInstance\r\n  const sendVerificationCodeDirectly = async (email: string) => {\r\n    try {\r\n      console.log('发送验证码请求...');\r\n      // 使用直接请求，确保请求发送到正确的路径\r\n      const baseURL = process.env.REACT_APP_API_URL || 'http://124.70.74.246:8081';\r\n      const response = await axios.post(`${baseURL}/api/auth/send-verification-code`, { email });\r\n      console.log('验证码发送成功响应:', response);\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      console.error(\"发送验证码失败:\", error);\r\n      return { success: false, error };\r\n    }\r\n  };\r\n\r\n  // 验证用户名和邮箱是否匹配\r\n  const verifyUsernameAndEmail = async () => {\r\n    if (!formData.username.trim() || !formData.email.trim()) {\r\n      return false;\r\n    }\r\n    \r\n    try {\r\n      const result = await verifyUsernameEmail({\r\n        username: formData.username,\r\n        email: formData.email\r\n      });\r\n      \r\n      if (result.success) {\r\n        setEmailVerified(true);\r\n        return true;\r\n      } else {\r\n        setEmailVerified(false);\r\n        setMessageType('error');\r\n        setMessage('用户名与邮箱不匹配，请检查输入');\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error('验证用户名和邮箱出错:', error);\r\n      setEmailVerified(false);\r\n      setMessageType('error');\r\n      setMessage('验证用户名和邮箱时出现错误');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // 处理发送验证码\r\n  const handleSendVerificationCode = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    // 阻止默认行为\r\n    if (event && event.preventDefault) event.preventDefault();\r\n    if (event && event.stopPropagation) event.stopPropagation();\r\n    \r\n    // 检查按钮状态\r\n    if (codeSending || countdown > 0) {\r\n      console.log('按钮已禁用或倒计时中');\r\n      return false;\r\n    }\r\n    \r\n    // 验证邮箱\r\n    if (!formData.username?.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入用户名');\r\n      return false;\r\n    }\r\n    \r\n    if (!formData.email?.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入邮箱');\r\n      return false;\r\n    }\r\n    \r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      setMessageType('error');\r\n      setMessage('请输入有效的邮箱地址');\r\n      return false;\r\n    }\r\n    \r\n    // 验证用户名和邮箱是否匹配\r\n    const isVerified = await verifyUsernameAndEmail();\r\n    if (!isVerified) {\r\n      return false;\r\n    }\r\n    \r\n    // 设置状态\r\n    setCodeSending(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      // 使用直接的fetch方法发送请求\r\n      console.log('开始发送验证码...');\r\n      const result = await sendVerificationCodeDirectly(formData.email);\r\n      \r\n      if (result.success) {\r\n        console.log('验证码发送成功');\r\n        setMessageType('success');\r\n        setMessage('验证码已发送到您的邮箱，请查收');\r\n        \r\n        // 设置倒计时\r\n        setCountdown(60);\r\n        const intervalId = setInterval(() => {\r\n          setCountdown((prev) => {\r\n            if (prev <= 1) {\r\n              clearInterval(intervalId);\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        console.log('验证码发送失败', result.error);\r\n        setMessageType('error');\r\n        setMessage('发送验证码失败，请稍后重试');\r\n      }\r\n    } catch (error) {\r\n      console.error('发送验证码过程中出错:', error);\r\n      setMessageType('error');\r\n      setMessage('发送验证码过程中出现错误，请稍后重试');\r\n    } finally {\r\n      setCodeSending(false);\r\n    }\r\n    \r\n    return false;\r\n  };\r\n\r\n  // 创建防抖版本的重置密码处理函数\r\n  const debouncedResetHandler = debounce(async (data) => {\r\n    if (isProcessing) return; // 防止重复处理\r\n    \r\n    setIsProcessing(true);\r\n    setLoading(true);\r\n    setMessage('');\r\n    \r\n    try {\r\n      console.log('准备发送重置密码请求:', { \r\n        username: data.username, \r\n        email: data.email, \r\n        code: data.code, \r\n        newPassword: '***' \r\n      });\r\n      \r\n      const response = await resetPasswordWithCode({\r\n        username: data.username,\r\n        email: data.email,\r\n        code: data.code,\r\n        newPassword: data.newPassword\r\n      });\r\n      \r\n      console.log('重置密码请求成功:', response);\r\n      \r\n      // 成功重置密码\r\n      setMessageType('success');\r\n      setMessage('密码重置成功，请使用新密码登录');\r\n      setResetSuccess(true);\r\n      \r\n      // 清空表单数据\r\n      setFormData({\r\n        username: '',\r\n        email: '',\r\n        code: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      });\r\n      \r\n      // 滚动到顶部以确保用户看到成功消息\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      \r\n      // 设置倒计时\r\n      setRedirectCountdown(3);\r\n      const intervalId = setInterval(() => {\r\n        setRedirectCountdown((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(intervalId);\r\n            // 跳转到登录页面\r\n            navigateRef.current = true;\r\n            window.location.href = '/login';\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    } catch (error: any) {\r\n      console.error('重置密码请求失败:', error);\r\n      setMessageType('error');\r\n      setResetSuccess(false);\r\n      \r\n      if (error.response) {\r\n        console.error('错误响应数据:', error.response.data);\r\n        console.error('错误状态码:', error.response.status);\r\n        setMessage((error.response.data && error.response.data.message) || '重置密码失败');\r\n      } else if (error.request) {\r\n        console.error('请求已发送但未收到响应');\r\n        setMessage('无法连接到服务器，请检查网络');\r\n      } else {\r\n        console.error('请求设置时出错:', error.message);\r\n        setMessage('重置密码过程中出现错误: ' + error.message);\r\n      }\r\n      \r\n      // 滚动到顶部以确保用户看到错误消息\r\n      window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    } finally {\r\n      setLoading(false);\r\n      // 延迟重置处理状态，防止快速多次点击\r\n      setTimeout(() => {\r\n        setIsProcessing(false);\r\n      }, 1000);\r\n    }\r\n  }, 0);\r\n\r\n  // 处理表单提交，阻止默认行为\r\n  const handleFormSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    return false;\r\n  };\r\n\r\n  // 处理重置密码\r\n  const handleResetPassword = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    // 阻止默认行为和事件冒泡\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    // 防止重复点击\r\n    if (loading || isProcessing) {\r\n      return;\r\n    }\r\n    \r\n    // 表单验证\r\n    if (!formData.username.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入用户名');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.email.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入邮箱');\r\n      return;\r\n    }\r\n    \r\n    // 简单的邮箱格式验证\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      setMessageType('error');\r\n      setMessage('请输入有效的邮箱地址');\r\n      return;\r\n    }\r\n    \r\n    // 验证用户名和邮箱是否匹配\r\n    if (!emailVerified) {\r\n      const isVerified = await verifyUsernameAndEmail();\r\n      if (!isVerified) {\r\n        return;\r\n      }\r\n    }\r\n    \r\n    if (!formData.code.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入验证码');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.newPassword.trim()) {\r\n      setMessageType('error');\r\n      setMessage('请输入新密码');\r\n      return;\r\n    }\r\n    \r\n    if (formData.newPassword.length < 6) {\r\n      setMessageType('error');\r\n      setMessage('密码长度不能少于6个字符');\r\n      return;\r\n    }\r\n    \r\n    if (formData.newPassword !== formData.confirmPassword) {\r\n      setMessageType('error');\r\n      setMessage('两次输入的密码不一致');\r\n      return;\r\n    }\r\n    \r\n    // 使用防抖处理重置密码请求\r\n    debouncedResetHandler(formData);\r\n    \r\n    // 阻止可能的导航\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <ForgotContainer>\r\n      <GlobalStylesCustom />\r\n      <ForgotContent>\r\n        <ForgotBox>\r\n          <Box sx={{ textAlign: 'center', marginBottom: '30px' }}>\r\n            <LogoContainer>\r\n              <LogoImgContainer>\r\n                <img \r\n                  src=\"https://img.icons8.com/color/96/000000/school.png\" \r\n                  alt=\"学校Logo\" \r\n                  style={{ width: '90%', height: '90%', objectFit: 'contain' }} \r\n                />\r\n              </LogoImgContainer>\r\n            </LogoContainer>\r\n            <Typography variant=\"h4\" sx={{ margin: '0 0 10px 0', fontWeight: 600, letterSpacing: '-0.5px' }}>\r\n              重置密码\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" sx={{ margin: '0 0 20px 0' }}>\r\n              请填写以下信息重置您的密码\r\n            </Typography>\r\n          </Box>\r\n          \r\n          {message && (\r\n            <Box sx={{ \r\n              marginBottom: '20px', \r\n              animation: resetSuccess ? 'fadeIn 0.8s ease-in-out' : 'fadeIn 0.5s ease-in-out',\r\n              transition: 'all 0.3s ease'\r\n            }}>\r\n              {resetSuccess ? (\r\n                <SuccessAlert \r\n                  severity=\"success\"\r\n                  sx={{\r\n                    animation: 'slideIn 0.5s ease-in-out forwards, pulse 2s infinite ease-in-out',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    {message}\r\n                    <Typography \r\n                      variant=\"body2\" \r\n                      sx={{ \r\n                        marginTop: '8px', \r\n                        fontWeight: 500,\r\n                        animation: 'bounce 1s infinite'\r\n                      }}\r\n                    >\r\n                      {redirectCountdown}秒后自动跳转到登录页面...\r\n                    </Typography>\r\n                  </Box>\r\n                </SuccessAlert>\r\n              ) : (\r\n                <StyledAlert \r\n                  severity={messageType}\r\n                  sx={{\r\n                    animation: 'slideIn 0.3s ease-in-out forwards',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  {message}\r\n                </StyledAlert>\r\n              )}\r\n            </Box>\r\n          )}\r\n          \r\n          {!resetSuccess && (\r\n            <Box \r\n              component=\"form\" \r\n              sx={{ width: '100%' }} \r\n              onSubmit={handleFormSubmit} \r\n              noValidate\r\n            >\r\n              <Box sx={{ marginBottom: '16px' }}>\r\n                <CustomInput \r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"用户名\" \r\n                  prefixIcon=\"person\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ marginBottom: '16px' }}>\r\n                <CustomInput \r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"邮箱\" \r\n                  prefixIcon=\"email\"\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ marginBottom: '16px' }}>\r\n                <Stack direction=\"row\" spacing={1}>\r\n                  <Box sx={{ flex: '1 1 65%' }}>\r\n                    <CustomInput \r\n                      name=\"code\"\r\n                      value={formData.code}\r\n                      onChange={handleInputChange}\r\n                      placeholder=\"验证码\" \r\n                      prefixIcon=\"key\"\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </Box>\r\n                  <Box sx={{ flex: '1 1 35%' }}>\r\n                    <Button \r\n                      variant=\"contained\" \r\n                      color=\"primary\" \r\n                      onClick={handleSendVerificationCode} \r\n                      type=\"button\"\r\n                      disabled={codeSending || countdown > 0}\r\n                      sx={{ \r\n                        height: '50px',\r\n                        borderRadius: '12px',\r\n                        width: '100%',\r\n                        boxShadow: 'none',\r\n                        fontSize: '14px',\r\n                        fontWeight: 500,\r\n                        whiteSpace: 'nowrap',\r\n                        padding: '0 8px',\r\n                        minWidth: '100px',\r\n                        '&:hover': {\r\n                          boxShadow: '0 3px 5px rgba(0, 113, 227, 0.3)',\r\n                        },\r\n                        '&.Mui-disabled': {\r\n                          backgroundColor: 'rgba(0, 113, 227, 0.12)',\r\n                          color: 'rgba(0, 113, 227, 0.5)',\r\n                        }\r\n                      }}\r\n                    >\r\n                      {countdown > 0 ? `${countdown}秒` : '获取验证码'}\r\n                    </Button>\r\n                  </Box>\r\n                </Stack>\r\n              </Box>\r\n              \r\n              <Box sx={{ marginBottom: '16px' }}>\r\n                <CustomInput \r\n                  name=\"newPassword\"\r\n                  value={formData.newPassword}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"新密码\" \r\n                  prefixIcon=\"lock\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Box>\r\n              \r\n              <Box sx={{ marginBottom: '16px' }}>\r\n                <CustomInput \r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"确认新密码\" \r\n                  prefixIcon=\"lock\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  required\r\n                />\r\n              </Box>\r\n              \r\n              <FormActions>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  onClick={handleResetPassword} \r\n                  type=\"button\"\r\n                  disabled={loading}\r\n                  sx={{ \r\n                    height: '50px',\r\n                    borderRadius: '12px',\r\n                    fontSize: '16px',\r\n                    fontWeight: 500\r\n                  }}\r\n                >\r\n                  {loading ? '重置中...' : '重置密码'}\r\n                </Button>\r\n                \r\n                <LoginLink to=\"/login\">\r\n                  返回登录\r\n                </LoginLink>\r\n              </FormActions>\r\n            </Box>\r\n          )}\r\n          \r\n          {resetSuccess && (\r\n            <Box sx={{ textAlign: 'center', marginTop: '20px' }}>\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\" \r\n                component={Link} \r\n                to=\"/login\"\r\n                sx={{ \r\n                  height: '50px',\r\n                  borderRadius: '12px',\r\n                  fontSize: '16px',\r\n                  fontWeight: 500,\r\n                  width: '100%',\r\n                  marginTop: '20px'\r\n                }}\r\n              >\r\n                立即返回登录\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </ForgotBox>\r\n        \r\n        <ForgotFooter>\r\n          <Typography variant=\"body2\">\r\n            © 2025 班主任管理系统 - 高效的教育管理平台\r\n          </Typography>\r\n        </ForgotFooter>\r\n      </ForgotContent>\r\n    </ForgotContainer>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword; "],"names":["debounce","func","wait","arguments","length","undefined","timeout","_len","args","Array","_key","context","this","clearTimeout","setTimeout","apply","StyledTextField","styled","TextField","_ref","theme","borderRadius","transition","backgroundColor","boxShadow","borderColor","padding","transform","iconMap","_jsx","Person","Lock","Email","Phone","Search","forwardRef","_ref2","ref","_props$InputProps","_props$InputProps2","prefixIcon","showPassword","onEnter","onChange","props","_objectWithoutProperties","_excluded","showPasswordValue","setShowPasswordValue","useState","_objectSpread","variant","fullWidth","type","onKeyDown","e","key","InputProps","startAdornment","InputAdornment","position","children","endAdornment","IconButton","onClick","handleClickShowPassword","edge","size","VisibilityOff","Visibility","GlobalStylesCustom","GlobalStyles","styles","opacity","StyledAlert","Alert","severity","fontSize","fontWeight","display","alignItems","border","palette","success","light","error","warning","marginRight","SuccessAlert","main","color","ForgotContainer","Box","_ref3","justifyContent","minHeight","width","overflow","boxSizing","ForgotContent","_ref4","flexDirection","maxWidth","zIndex","ForgotBox","Paper","_ref5","margin","LogoContainer","_ref6","marginBottom","LogoImgContainer","_ref7","height","background","FormActions","_ref8","gap","marginTop","LoginLink","Link","_ref9","primary","textDecoration","textAlign","spacing","ForgotFooter","_ref0","textShadow","ForgotPassword","navigateRef","useRef","formData","setFormData","username","email","code","newPassword","confirmPassword","loading","setLoading","message","setMessage","messageType","setMessageType","isProcessing","setIsProcessing","codeSending","setCodeSending","countdown","setCountdown","emailVerified","setEmailVerified","resetSuccess","setResetSuccess","redirectCountdown","setRedirectCountdown","useEffect","handleBeforeUnload","event","current","preventDefault","returnValue","window","addEventListener","removeEventListener","handleInputChange","name","value","target","prev","verifyUsernameAndEmail","async","trim","verifyUsernameEmail","console","debouncedResetHandler","log","data","response","resetPasswordWithCode","scrollTo","top","behavior","intervalId","setInterval","clearInterval","location","href","status","request","_jsxs","sx","src","alt","style","objectFit","Typography","letterSpacing","animation","component","onSubmit","noValidate","CustomInput","placeholder","required","Stack","direction","flex","Button","_formData$username","_formData$email","stopPropagation","test","result","baseURL","process","REACT_APP_API_URL","axios","post","concat","sendVerificationCodeDirectly","disabled","whiteSpace","minWidth","to"],"sourceRoot":""}