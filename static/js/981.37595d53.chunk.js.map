{"version":3,"file":"static/js/981.37595d53.chunk.js","mappings":"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","sources":["components/SearchBox.tsx","components/AddButton.tsx","components/CustomSelect.tsx","views/ExamManagement.tsx","api/class.ts","api/axios.ts","api/subjectAPI.ts","components/CustomInput.tsx","api/scoreAPI.ts","api/examAPI.ts"],"sourcesContent":["import React from 'react';\r\nimport { TextField, IconButton, InputAdornment } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\ninterface SearchBoxProps {\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onSearch: () => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst SearchBox: React.FC<SearchBoxProps> = ({ value, onChange, onSearch, placeholder }) => {\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter') {\r\n      onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      placeholder={placeholder || 'Search...'}\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      onKeyPress={handleKeyPress}\r\n      InputProps={{\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={onSearch} edge=\"end\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n      sx={{\r\n        minWidth: '200px',\r\n        '& .MuiOutlinedInput-root': {\r\n          borderRadius: '8px', \r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox; ","import React from 'react';\r\nimport { Button, ButtonProps } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\ninterface AddButtonProps extends ButtonProps {\r\n  // 可以在这里添加额外的 props\r\n}\r\n\r\nconst AddButton: React.FC<AddButtonProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      startIcon={<AddIcon />}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default AddButton; ","import React from 'react';\r\nimport { TextField, MenuItem, TextFieldProps } from '@mui/material';\r\n\r\ninterface OptionType {\r\n  value: string | number;\r\n  label: string;\r\n}\r\n\r\ninterface CustomSelectProps extends Omit<TextFieldProps, 'onChange'> {\r\n  options: OptionType[];\r\n  value: string | number;\r\n  onChange: (value: string | number) => void;\r\n  placeholder?: string;\r\n  prefixIcon?: React.ReactNode; // 对应 Vue 的 prefix-icon\r\n}\r\n\r\nconst CustomSelect: React.FC<CustomSelectProps> = ({\r\n  options,\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n  prefixIcon,\r\n  label,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <TextField\r\n      select\r\n      label={label}\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      InputProps={{\r\n        startAdornment: prefixIcon ? (\r\n          <span style={{ marginRight: 8, display: 'flex', alignItems: 'center' }}>\r\n            {prefixIcon}\r\n          </span>\r\n        ) : null,\r\n      }}\r\n      sx={{\r\n        minWidth: 160,\r\n        '& .MuiOutlinedInput-root': {\r\n          borderRadius: '12px', // 对应 apple-search 的圆角\r\n        },\r\n      }}\r\n      {...props} // 传递其他 TextFieldProps，例如 helperText, error\r\n    >\r\n      {placeholder && (\r\n        <MenuItem value=\"\" disabled>\r\n          <em>{placeholder}</em>\r\n        </MenuItem>\r\n      )}\r\n      {options.map((option) => (\r\n        <MenuItem key={option.value} value={option.value}>\r\n          {option.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default CustomSelect; ","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n  Box, Typography, Card, CardHeader, CardContent, Select, MenuItem, TextField, Button, \r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Chip, CircularProgress, \r\n  TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, TextareaAutosize, Stack,\r\n  FormControl, InputLabel, Alert, Snackbar\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Edit, Delete, PlayArrow, Stop, Grading, Add, Close, Search } from '@mui/icons-material';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { zhCN } from 'date-fns/locale'; \r\n\r\nimport * as examAPI from '../api/examAPI';\r\nimport * as classAPI from '../api/class'; // 假设班级API文件名为 class.ts\r\nimport * as subjectAPI from '../api/subjectAPI';\r\nimport * as scoreAPI from '../api/scoreAPI';\r\n\r\nimport SearchBox from '../components/SearchBox';\r\nimport AddButton from '../components/AddButton';\r\nimport CustomInput from '../components/CustomInput'; // 假设你已经有了或者后续会创建\r\nimport CustomSelect from '../components/CustomSelect'; // 假设你已经有了或者后续会创建\r\n\r\n// 类型定义 (基于Vue文件的结构)\r\ninterface Class {\r\n  id: string | number;\r\n  name: string;\r\n}\r\n\r\ninterface Subject {\r\n  id: string | number;\r\n  name: string;\r\n  score: number;\r\n  passScore?: number;\r\n  description?: string;\r\n  subjectName?: string; // 兼容旧数据\r\n  fullScore?: number; // 兼容旧数据\r\n}\r\n\r\ninterface ExamSubject {\r\n  id?: number;\r\n  subjectId?: number;\r\n  name?: string;\r\n  score?: number;\r\n  subject?: { id: number };\r\n  subjectName?: string;\r\n  fullScore?: number;\r\n}\r\n\r\ninterface Exam {\r\n  id: number;\r\n  name: string;\r\n  examName?: string;\r\n  examDate: string;\r\n  className?: string;\r\n  classInfo?: {\r\n    id: number;\r\n    className: string;\r\n  };\r\n  status: 'PENDING' | 'IN_PROGRESS' | 'FINISHED' | 'GRADED';\r\n  totalScore?: number;\r\n  examSubjects: ExamSubject[];\r\n  description?: string;\r\n}\r\n\r\ninterface ExamFormData {\r\n  id?: number | null;\r\n  name: string;\r\n  examDate: Date | string | null;\r\n  classId: string;\r\n  description: string;\r\n  subjects: ExamSubject[];\r\n}\r\n\r\ninterface Score {\r\n  id: number;\r\n  examId: number;\r\n  examSubjectId: number;\r\n  studentId: number;\r\n  studentNumber: string;\r\n  studentName: string;\r\n  scoreValue: number;\r\n  rank?: number;\r\n  subjectName: string;\r\n  comment?: string;\r\n  createdAt?: string;\r\n  className?: string;\r\n  totalScore?: number;\r\n  scores?: Record<number, number>;\r\n}\r\n\r\nconst ExamManagement: React.FC = () => {\r\n  const [exams, setExams] = useState<Exam[]>([]);\r\n  const [classes, setClasses] = useState<Class[]>([]);\r\n  const [subjects, setSubjects] = useState<Subject[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [selectedClass, setSelectedClass] = useState('');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [totalExams, setTotalExams] = useState(0);\r\n  const [examPage, setExamPage] = useState(0);\r\n  const [examRowsPerPage, setExamRowsPerPage] = useState(10);\r\n\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [examForm, setExamForm] = useState<ExamFormData>({\r\n    id: null,\r\n    name: '',\r\n    examDate: new Date(),\r\n    classId: '',\r\n    description: '',\r\n    subjects: [],\r\n  });\r\n\r\n  const [subjectDialogVisible, setSubjectDialogVisible] = useState(false);\r\n  const [subjectSearchQuery, setSubjectSearchQuery] = useState('');\r\n  const [filteredSubjects, setFilteredSubjects] = useState<Subject[]>([]);\r\n  const [selectedSubjectForTable, setSelectedSubjectForTable] = useState<Subject | null>(null);\r\n\r\n  const [scoresDialogVisible, setScoresDialogVisible] = useState(false);\r\n  const [scoresLoading, setScoresLoading] = useState(false);\r\n  const [currentExamForScores, setCurrentExamForScores] = useState<Exam | null>(null);\r\n  const [examScores, setExamScores] = useState<Score[]>([]);\r\n  const [scoresTotal, setScoresTotal] = useState(0);\r\n  const [scoresPageSize, setScoresPageSize] = useState(10);\r\n  const [scoresCurrentPage, setScoresCurrentPage] = useState(1);\r\n  \r\n  const [formErrors, setFormErrors] = useState<Partial<Record<keyof ExamFormData, string>>>({});\r\n\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success' as 'success' | 'info' | 'warning' | 'error'\r\n  });\r\n\r\n  // 添加确认对话框状态\r\n  const [confirmDialog, setConfirmDialog] = useState({\r\n    open: false,\r\n    title: '',\r\n    content: '',\r\n    onConfirm: () => {}\r\n  });\r\n\r\n  const routerPush = (path: string) => {\r\n    // 在React中，通常使用 react-router-dom 的 useNavigate\r\n    // 这里仅作示意，实际项目中需要正确集成路由\r\n    console.log(`Navigating to ${path}`);\r\n    if (path === '/home/subjects') {\r\n        showSnackbar(\"请在实际项目中实现跳转到科目管理页面\", 'info');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string | Date | null) => {\r\n    if (!dateString) return '';\r\n    try {\r\n      // 如果日期已经是格式化的字符串，检查格式是否符合要求\r\n      if (typeof dateString === 'string' && dateString.includes('-')) {\r\n        // 尝试解析并重新格式化，确保格式一致\r\n        const date = new Date(dateString);\r\n        if (!isNaN(date.getTime())) {\r\n          return formatDateToYYYYMMDD(date);\r\n        }\r\n        return dateString;\r\n      }\r\n      // 否则尝试转换为Date对象并格式化为yyyy-MM-dd\r\n      const date = new Date(dateString);\r\n      return formatDateToYYYYMMDD(date);\r\n    } catch (e) {\r\n      return '日期无效';\r\n    }\r\n  };\r\n\r\n  // 将日期格式化为 yyyy-MM-dd\r\n  const formatDateToYYYYMMDD = (date: Date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  const getTodayDate = () => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n  \r\n  const getStatusType = (status: Exam['status']) => {\r\n    switch (status) {\r\n      case 'PENDING': return 'info';\r\n      case 'IN_PROGRESS': return 'warning';\r\n      case 'FINISHED':\r\n      case 'GRADED': return 'success';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (status: Exam['status']) => {\r\n    switch (status) {\r\n      case 'PENDING': return '未开始';\r\n      case 'IN_PROGRESS': return '进行中';\r\n      case 'FINISHED': return '已结束';\r\n      case 'GRADED': return '已评分';\r\n      default: return '未知';\r\n    }\r\n  };\r\n\r\n  const fetchExams = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response;\r\n      // Vue版本中这里的筛选逻辑比较复杂，React中需要简化或后端支持更灵活的查询\r\n      // 此处暂时简化为仅支持单个筛选条件或无筛选\r\n      if (selectedClass) {\r\n        response = await examAPI.getExamsByClass(selectedClass);\r\n      } else if (selectedStatus) {\r\n        response = await examAPI.getExamsByStatus(selectedStatus);\r\n      } else {\r\n        response = await examAPI.getAllExams();\r\n      }\r\n      \r\n      const processedExams = response.data.map((exam: any) => ({\r\n        ...exam,\r\n        id: exam.id,\r\n        name: exam.examName || exam.name,\r\n        className: exam.classInfo?.name || exam.className || 'N/A',\r\n        examSubjects: exam.examSubjects || [],\r\n        description: exam.description || '',\r\n        totalScore: exam.totalScore || 0,\r\n      }));\r\n      \r\n      // 本地搜索过滤 (Vue版是重新请求，这里先做本地过滤，后续可优化)\r\n      let filtered = processedExams;\r\n      if(searchQuery){\r\n        filtered = filtered.filter((exam: Exam) => \r\n            exam.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n        );\r\n      }\r\n      // Vue版本中，如果同时有班级和状态筛选，会再次本地过滤，这里也实现\r\n      if (selectedClass && selectedStatus) {\r\n        filtered = filtered.filter((exam: Exam) => exam.status === selectedStatus);\r\n      }\r\n\r\n      setExams(filtered);\r\n      setTotalExams(filtered.length); // 注意：分页应该基于后端返回的总数，这里暂时用过滤后的长度\r\n\r\n    } catch (error) {\r\n      console.error('获取考试列表失败:', error);\r\n      showSnackbar('获取考试列表失败', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [selectedClass, selectedStatus, searchQuery]);\r\n\r\n  const fetchClasses = useCallback(async () => {\r\n    try {\r\n      const response = await classAPI.getAllClasses();\r\n      setClasses(response.data || []);\r\n    } catch (error) {\r\n      console.error('获取班级列表失败:', error);\r\n      showSnackbar('获取班级列表失败', 'error');\r\n    }\r\n  }, []);\r\n\r\n  const fetchSubjects = useCallback(async () => {\r\n    try {\r\n      const response = await subjectAPI.getAllSubjects();\r\n      const processedSubjects = (response.data || []).map((subject: any) => ({\r\n        id: subject.id,\r\n        name: subject.name || subject.subjectName || '未命名科目',\r\n        score: subject.score || subject.fullScore || 100,\r\n        passScore: subject.passScore || Math.floor((subject.score || 100) * 0.6),\r\n        description: subject.description || '',\r\n      }));\r\n      setSubjects(processedSubjects);\r\n      if (!processedSubjects.length) {\r\n        showSnackbar('没有找到任何科目，请先在科目管理中添加科目', 'warning');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取科目列表失败:', error);\r\n      showSnackbar('获取科目列表失败', 'error');\r\n      setSubjects([]);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchExams();\r\n  }, [fetchExams, examPage, examRowsPerPage]); // 依赖项改变时重新获取\r\n\r\n  useEffect(() => {\r\n    fetchClasses();\r\n    fetchSubjects();\r\n  }, [fetchClasses, fetchSubjects]);\r\n\r\n  // 筛选变更处理\r\n  const handleStatusChange = (event: any) => {\r\n    setSelectedStatus(event.target.value as string);\r\n    setExamPage(0); // 重置分页\r\n  };\r\n\r\n  const handleClassChange = (event: any) => {\r\n    setSelectedClass(event.target.value as string);\r\n    setExamPage(0);\r\n  };\r\n  \r\n  const handleSearch = () => {\r\n    setExamPage(0);\r\n    fetchExams(); // 触发搜索\r\n  };\r\n\r\n  // 分页处理\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setExamPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setExamRowsPerPage(parseInt(event.target.value, 10));\r\n    setExamPage(0);\r\n  };\r\n  \r\n  const resetForm = () => {\r\n    setExamForm({\r\n      id: null,\r\n      name: '',\r\n      examDate: getTodayDate(), // 使用 YYYY-MM-DD 格式\r\n      classId: '',\r\n      description: '',\r\n      subjects: [],\r\n    });\r\n    setFormErrors({});\r\n  };\r\n\r\n  const handleAddExam = () => {\r\n    resetForm();\r\n    setIsEdit(false);\r\n    setDialogVisible(true);\r\n  };\r\n  \r\n  const handleEdit = (exam: Exam) => {\r\n    setIsEdit(true);\r\n    setExamForm({\r\n      id: exam.id,\r\n      name: exam.name || exam.examName || '',\r\n      examDate: exam.examDate ? new Date(exam.examDate) : null,\r\n      classId: exam.classInfo?.id.toString() || '',\r\n      description: exam.description || '',\r\n      subjects: exam.examSubjects.map(subject => ({\r\n        id: subject.id || (subject.subject?.id ? Number(subject.subject.id) : undefined),\r\n        subjectId: subject.subject?.id ? Number(subject.subject.id) : undefined,\r\n        name: subject.name || subject.subjectName || '',\r\n        score: subject.score || subject.fullScore || 100,\r\n        subject: subject.subject ? { id: Number(subject.subject.id) } : undefined,\r\n        subjectName: subject.subjectName,\r\n        fullScore: subject.fullScore\r\n      }))\r\n    });\r\n    setDialogVisible(true);\r\n  };\r\n\r\n  // 打开确认对话框\r\n  const openConfirmDialog = (title: string, content: string, onConfirm: () => void) => {\r\n    setConfirmDialog({\r\n      open: true,\r\n      title,\r\n      content,\r\n      onConfirm\r\n    });\r\n  };\r\n  \r\n  // 关闭确认对话框\r\n  const closeConfirmDialog = () => {\r\n    setConfirmDialog(prev => ({\r\n      ...prev,\r\n      open: false\r\n    }));\r\n  };\r\n\r\n  const handleDelete = async (exam: Exam) => {\r\n    if (exam.status !== 'PENDING') { \r\n      showSnackbar('只能删除未开始的考试', 'warning');\r\n      return;\r\n    }\r\n    \r\n    openConfirmDialog(\r\n      '删除考试',\r\n      `确定要删除考试 ${exam.name} 吗？`,\r\n      async () => {\r\n        try {\r\n          await examAPI.deleteExam(exam.id);\r\n          showSnackbar('删除成功', 'success');\r\n          fetchExams();\r\n        } catch (error: any) {\r\n          showSnackbar(error.response?.data?.message || '删除失败', 'error');\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleUpdateStatus = async (exam: Exam, newStatus: Exam['status']) => {\r\n    const statusText = getStatusLabel(newStatus);\r\n    \r\n    openConfirmDialog(\r\n      '更新考试状态',\r\n      `确定要将考试 ${exam.name} 状态更改为 ${statusText} 吗？`,\r\n      async () => {\r\n        try {\r\n          await examAPI.updateExamStatus(exam.id, newStatus);\r\n          showSnackbar('状态更新成功', 'success');\r\n          fetchExams();\r\n        } catch (error: any) {\r\n          showSnackbar(error.response?.data?.message || '状态更新失败', 'error');\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  // 表单提交\r\n  const validateForm = () => {\r\n    const errors: Partial<Record<keyof ExamFormData, string>> = {};\r\n    if (!examForm.name.trim()) errors.name = '请输入考试名称';\r\n    if (examForm.name.trim().length < 2 || examForm.name.trim().length > 50) errors.name = '长度在 2 到 50 个字符';\r\n    if (!examForm.examDate) errors.examDate = '请选择考试日期';\r\n    if (!examForm.classId) errors.classId = '请选择班级';\r\n    if (!examForm.subjects || examForm.subjects.length === 0) errors.subjects = '请至少添加一个考试科目';\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  \r\n  const handleSubmitForm = async () => {\r\n    if (!validateForm()) return;\r\n    setSubmitLoading(true);\r\n\r\n    const examDateString = typeof examForm.examDate === 'string' \r\n      ? examForm.examDate \r\n      : examForm.examDate?.toISOString().split('T')[0] || '';\r\n\r\n    const selectedClass = classes.find(c => String(c.id) === examForm.classId);\r\n    if (!selectedClass) {\r\n      showSnackbar('请选择有效的班级', 'error');\r\n      setSubmitLoading(false);\r\n      return;\r\n    }\r\n\r\n    const formDataToSubmit: Partial<Exam> = {\r\n      id: examForm.id ? Number(examForm.id) : undefined,\r\n      examName: examForm.name,\r\n      examDate: examDateString,\r\n      description: examForm.description || '',\r\n      classInfo: {\r\n        id: Number(examForm.classId),\r\n        className: selectedClass.name\r\n      },\r\n      examSubjects: examForm.subjects.map(subject => ({\r\n        subject: { id: Number(subject.subjectId || subject.id) },\r\n        subjectName: subject.name,\r\n        fullScore: Number(subject.score)\r\n      }))\r\n    };\r\n\r\n    try {\r\n      if (isEdit) {\r\n        await examAPI.updateExam(examForm.id!, formDataToSubmit);\r\n        showSnackbar('更新成功', 'success');\r\n      } else {\r\n        await examAPI.createExam(formDataToSubmit);\r\n        showSnackbar('创建成功', 'success');\r\n      }\r\n      setDialogVisible(false);\r\n      fetchExams();\r\n    } catch (error: any) {\r\n      console.error('提交失败:', error);\r\n      showSnackbar(error.response?.data?.message || (isEdit ? '更新失败' : '创建失败'), 'error');\r\n    } finally {\r\n      setSubmitLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleFormInputChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = event.target;\r\n    setExamForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setExamForm((prev: ExamFormData) => ({ \r\n      ...prev, \r\n      examDate: date \r\n    }));\r\n  };\r\n\r\n  const handleClassIdChangeInForm = (value: string | number) => {\r\n    setExamForm(prev => ({ ...prev, classId: String(value) }));\r\n  };\r\n\r\n  // 科目选择对话框逻辑\r\n  const handleAddSubject = () => {\r\n    setSelectedSubjectForTable(null);\r\n    setSubjectDialogVisible(true);\r\n    if (subjects.length === 0) {\r\n      fetchSubjects();\r\n    }\r\n    setSubjectSearchQuery('');\r\n    filterSubjectOptions();\r\n  };\r\n  \r\n  const filterSubjectOptions = useCallback(() => {\r\n    if (!subjectSearchQuery) {\r\n      setFilteredSubjects(subjects);\r\n    } else {\r\n      const query = subjectSearchQuery.toLowerCase();\r\n      setFilteredSubjects(\r\n        subjects.filter(s => s.name.toLowerCase().includes(query))\r\n      );\r\n    }\r\n  }, [subjectSearchQuery, subjects]);\r\n\r\n  useEffect(() => {\r\n    filterSubjectOptions();\r\n  }, [filterSubjectOptions]);\r\n\r\n  const handleSelectAndConfirmSubject = (subject: Subject) => {\r\n    const existingSubject = examForm.subjects.find(\r\n      s => (s.subjectId || s.id) === subject.id\r\n    );\r\n    if (existingSubject) {\r\n      showSnackbar(`科目 \"${subject.name}\" 已添加到考试中`, 'warning');\r\n      return;\r\n    }\r\n    const newSubjectEntry: ExamSubject = {\r\n      subjectId: typeof subject.id === 'string' ? Number(subject.id) : subject.id, // 类型转换\r\n      id: typeof subject.id === 'string' ? Number(subject.id) : subject.id,\r\n      name: subject.name,\r\n      score: subject.score || 100,\r\n      subject: { id: typeof subject.id === 'string' ? Number(subject.id) : subject.id },\r\n      subjectName: subject.name,\r\n      fullScore: subject.score\r\n    };\r\n    setExamForm(prev => ({ ...prev, subjects: [...prev.subjects, newSubjectEntry] }));\r\n    showSnackbar(`已添加科目: ${subject.name}`, 'success');\r\n    setSubjectDialogVisible(false);\r\n    setSelectedSubjectForTable(null);\r\n  };\r\n\r\n  const handleRemoveSubjectFromForm = (index: number) => {\r\n    setExamForm(prev => ({\r\n      ...prev,\r\n      subjects: prev.subjects.filter((_, i) => i !== index),\r\n    }));\r\n  };\r\n  \r\n  // 成绩管理对话框\r\n  const handleManageScores = (exam: Exam) => {\r\n    setCurrentExamForScores(exam);\r\n    setScoresCurrentPage(1);\r\n    setScoresPageSize(10);\r\n    fetchExamScores(exam.id, 0, 10); // page是0-indexed\r\n    setScoresDialogVisible(true);\r\n  };\r\n  \r\n  const fetchExamScores = useCallback(async (examId: number, page: number, size: number) => {\r\n    if (!currentExamForScores && !examId) return;\r\n    const idToFetch = examId || currentExamForScores?.id;\r\n    if (!idToFetch) return;\r\n\r\n    setScoresLoading(true);\r\n    try {\r\n      const response = await scoreAPI.getScoresByExamId(idToFetch, page, size);\r\n      const scores = response.data.content || [];\r\n      // 确保所有必需的字段都存在\r\n      const processedScores: Score[] = scores.map((score: any) => ({\r\n        ...score,\r\n        subjectName: score.subjectName || '',\r\n        scoreValue: score.scoreValue || 0,\r\n        studentNumber: score.studentNumber || '',\r\n        studentName: score.studentName || '',\r\n        id: score.id || 0,\r\n        examId: score.examId || 0,\r\n        examSubjectId: score.examSubjectId || 0,\r\n        studentId: score.studentId || 0,\r\n        className: score.className || '-',\r\n        totalScore: score.totalScore || 0,\r\n        rank: score.rank || 0,\r\n        comment: score.comment || '-',\r\n        createdAt: score.createdAt || null,\r\n        scores: score.scores || {}\r\n      }));\r\n      setExamScores(processedScores);\r\n      setScoresTotal(response.data.totalElements || 0);\r\n    } catch (error) {\r\n      console.error(`获取考试 ${currentExamForScores?.name || idToFetch} 成绩失败:`, error);\r\n      showSnackbar('获取成绩列表失败', 'error');\r\n      setExamScores([]);\r\n      setScoresTotal(0);\r\n    } finally {\r\n      setScoresLoading(false);\r\n    }\r\n  }, [currentExamForScores, classes]);\r\n  \r\n  const handleScoresDialogClose = () => {\r\n    setScoresDialogVisible(false);\r\n    setCurrentExamForScores(null);\r\n    setExamScores([]);\r\n    setScoresTotal(0);\r\n  };\r\n\r\n  const handleScoresSizeChange = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const newSize = parseInt(event.target.value, 10);\r\n    setScoresPageSize(newSize);\r\n    setScoresCurrentPage(1); // API page is 0-indexed, mui is 1-indexed\r\n    if(currentExamForScores) fetchExamScores(currentExamForScores.id, 0, newSize);\r\n  };\r\n\r\n  const handleScoresCurrentPageChange = (event: unknown, newPage: number) => {\r\n    setScoresCurrentPage(newPage + 1); // mui is 0-indexed for event, state is 1-indexed\r\n    if(currentExamForScores) fetchExamScores(currentExamForScores.id, newPage, scoresPageSize);\r\n  };\r\n\r\n  // 渲染主要考试表格数据\r\n  const paginatedExams = exams.slice(examPage * examRowsPerPage, examPage * examRowsPerPage + examRowsPerPage);\r\n\r\n  // 显示提示信息\r\n  const showSnackbar = (message: string, severity: 'success' | 'info' | 'warning' | 'error' = 'success') => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n\r\n  // 关闭提示信息\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(prev => ({\r\n      ...prev,\r\n      open: false\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={zhCN}>\r\n      <Box sx={{ p: 3 }} className=\"exam-container page-container\">\r\n        <Card className=\"exam-card apple-card\" elevation={3}>\r\n          <CardHeader\r\n            title=\"考试列表\"\r\n            action={\r\n              <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems=\"center\">\r\n                <FormControl size=\"small\" sx={{ minWidth: 160 }}>\r\n                  <InputLabel>考试状态</InputLabel>\r\n                  <Select\r\n                    value={selectedStatus}\r\n                    label=\"考试状态\"\r\n                    onChange={handleStatusChange}\r\n                    // className=\"status-select apple-search\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>全部状态</em></MenuItem>\r\n                    <MenuItem value=\"PENDING\">未开始</MenuItem>\r\n                    <MenuItem value=\"IN_PROGRESS\">进行中</MenuItem>\r\n                    <MenuItem value=\"FINISHED\">已结束</MenuItem>\r\n                    <MenuItem value=\"GRADED\">已评分</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl size=\"small\" sx={{ minWidth: 160 }}>\r\n                  <InputLabel>班级筛选</InputLabel>\r\n                  <Select\r\n                    value={selectedClass}\r\n                    label=\"班级筛选\"\r\n                    onChange={handleClassChange}\r\n                    // className=\"class-select apple-search\"\r\n                  >\r\n                    <MenuItem value=\"\"><em>全部班级</em></MenuItem>\r\n                    {classes.map((cls) => (\r\n                      <MenuItem key={cls.id} value={String(cls.id)}>{cls.name}</MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                <SearchBox \r\n                  value={searchQuery}\r\n                  onChange={setSearchQuery}\r\n                  onSearch={handleSearch}\r\n                  placeholder=\"搜索考试名称\"\r\n                />\r\n                <AddButton onClick={handleAddExam}>创建考试</AddButton>\r\n              </Stack>\r\n            }\r\n            sx={{ '& .MuiCardHeader-action': { mt: {xs: 2, sm: 0}, ml: {sm: 'auto'}} }}\r\n          />\r\n          <CardContent>\r\n            {loading && <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}><CircularProgress /></Box>}\r\n            {!loading && exams.length === 0 && (\r\n                <Typography sx={{ textAlign: 'center', my: 3 }}>暂无考试数据</Typography>\r\n            )}\r\n            {!loading && exams.length > 0 && (\r\n              <TableContainer component={Paper} elevation={0} sx={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                <Table stickyHeader className=\"exam-table apple-table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>考试名称</TableCell>\r\n                      <TableCell>考试日期</TableCell>\r\n                      <TableCell>班级</TableCell>\r\n                      <TableCell>状态</TableCell>\r\n                      <TableCell>总分</TableCell>\r\n                      <TableCell>考试科目</TableCell>\r\n                      <TableCell>描述</TableCell>\r\n                      <TableCell sx={{minWidth: 350}}>操作</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {paginatedExams.map((exam) => (\r\n                      <TableRow key={exam.id}>\r\n                        <TableCell>{exam.name}</TableCell>\r\n                        <TableCell>{formatDate(exam.examDate)}</TableCell>\r\n                        <TableCell>{exam.className}</TableCell>\r\n                        <TableCell>\r\n                          <Chip label={getStatusLabel(exam.status)} color={getStatusType(exam.status)} size=\"small\" />\r\n                        </TableCell>\r\n                        <TableCell>{exam.totalScore || 0}</TableCell>\r\n                        <TableCell>\r\n                          <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\r\n                            {(exam.examSubjects && exam.examSubjects.length > 0) ? (\r\n                              exam.examSubjects.map((sub, idx) => (\r\n                                <Chip \r\n                                  key={sub.id || sub.subject?.id || idx} \r\n                                  label={`${sub.name || sub.subjectName} (${sub.score || sub.fullScore || 0}分)`} \r\n                                  size=\"small\" \r\n                                  // className=\"subject-tag\"\r\n                                />\r\n                              ))\r\n                            ) : (\r\n                              <Typography variant=\"caption\" className=\"no-subjects\">暂无科目</Typography>\r\n                            )}\r\n                          </Stack>\r\n                        </TableCell>\r\n                        <TableCell>{exam.description}</TableCell>\r\n                        <TableCell>\r\n                          <Stack direction=\"row\" spacing={1} flexWrap=\"wrap\">\r\n                            <Button variant=\"contained\" size=\"small\" startIcon={<Edit />} onClick={() => handleEdit(exam)}>编辑</Button>\r\n                            {exam.status === 'PENDING' && (\r\n                              <Button variant=\"contained\" color=\"success\" size=\"small\" startIcon={<PlayArrow />} onClick={() => handleUpdateStatus(exam, 'IN_PROGRESS')}>开始考试</Button>\r\n                            )}\r\n                            {exam.status === 'IN_PROGRESS' && (\r\n                              <Button variant=\"contained\" color=\"warning\" size=\"small\" startIcon={<Stop />} onClick={() => handleUpdateStatus(exam, 'FINISHED')}>结束考试</Button>\r\n                            )}\r\n                            <Button variant=\"contained\" color=\"info\" size=\"small\" startIcon={<Grading />} onClick={() => handleManageScores(exam)}>成绩管理</Button>\r\n                            {exam.status === 'PENDING' && (\r\n                              <Button variant=\"contained\" color=\"error\" size=\"small\" startIcon={<Delete />} onClick={() => handleDelete(exam)}>删除</Button>\r\n                            )}\r\n                          </Stack>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n            <TablePagination\r\n              component=\"div\"\r\n              count={totalExams}\r\n              page={examPage}\r\n              onPageChange={handleChangePage}\r\n              rowsPerPage={examRowsPerPage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              labelRowsPerPage=\"每页行数\"\r\n              labelDisplayedRows={({ from, to, count }) => `${from}-${to} 共 ${count}`}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* 添加/编辑考试对话框 */}\r\n        <Dialog \r\n          open={dialogVisible} \r\n          onClose={() => setDialogVisible(false)} \r\n          maxWidth=\"md\" \r\n          fullWidth\r\n        >\r\n          <DialogTitle sx={{ textAlign: 'center', fontSize: '1.5rem', fontWeight: 600 }}>\r\n            {isEdit ? '编辑考试' : '创建考试'}\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={() => setDialogVisible(false)}\r\n                sx={{\r\n                    position: 'absolute',\r\n                    right: 8,\r\n                    top: 8,\r\n                    color: (theme) => theme.palette.grey[500],\r\n                }}\r\n                >\r\n                <Close />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Box component=\"form\" noValidate autoComplete=\"off\" sx={{p:2}}>\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', margin: -1.5 }}>\r\n                <Box sx={{ width: '100%', p: 1.5 }}>\r\n                  <CustomInput\r\n                    label=\"考试名称\"\r\n                    name=\"name\"\r\n                    value={examForm.name}\r\n                    onChange={handleFormInputChange}\r\n                    placeholder=\"考试名称\"\r\n                    required\r\n                    fullWidth\r\n                    error={!!formErrors.name}\r\n                    helperText={formErrors.name}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ width: { xs: '100%', sm: '50%' }, p: 1.5 }}>\r\n                  <DatePicker\r\n                    label=\"考试日期\"\r\n                    value={examForm.examDate ? new Date(examForm.examDate) : null}\r\n                    onChange={handleDateChange}\r\n                    minDate={new Date(getTodayDate())}\r\n                    enableAccessibleFieldDOMStructure={false}\r\n                    slots={{ textField: (params) => \r\n                        <TextField \r\n                            {...params} \r\n                            fullWidth \r\n                            required \r\n                            name=\"examDate\" \r\n                            error={!!formErrors.examDate} \r\n                            helperText={formErrors.examDate}\r\n                        /> \r\n                    }}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ width: { xs: '100%', sm: '50%' }, p: 1.5 }}>\r\n                  <CustomSelect\r\n                    label=\"选择班级\"\r\n                    value={examForm.classId}\r\n                    onChange={(val) => handleClassIdChangeInForm(val)}\r\n                    options={classes.map(c => ({ label: c.name, value: String(c.id) }))}\r\n                    placeholder=\"选择班级\"\r\n                    fullWidth\r\n                    required\r\n                    error={!!formErrors.classId}\r\n                    helperText={formErrors.classId}\r\n                  />\r\n                </Box>\r\n                <Box sx={{ width: '100%', p: 1.5 }}>\r\n                  <TextField\r\n                    label=\"考试描述（选填）\"\r\n                    name=\"description\"\r\n                    value={examForm.description}\r\n                    onChange={handleFormInputChange}\r\n                    placeholder=\"考试描述（选填）\"\r\n                    multiline\r\n                    rows={3}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    sx={{ '& .MuiOutlinedInput-root': { borderRadius: '12px' }}}\r\n                  />\r\n                </Box>\r\n                \r\n                <Box sx={{ width: '100%', p: 1.5 }}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2, mb:1, textAlign: 'center', color: 'primary.main' }}>\r\n                        考试科目\r\n                    </Typography>\r\n                    <Box className=\"subjects-divider\" sx={{ display: 'flex', alignItems: 'center', mb:2}}>\r\n                        <Box sx={{flex:1, height: '1px', background: 'rgba(0,0,0,0.1)'}} />\r\n                        <Box sx={{flex:1, height: '1px', background: 'rgba(0,0,0,0.1)'}} />\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Box sx={{ width: '100%', p: 1.5 }}>\r\n                  {examForm.subjects.length === 0 ? (\r\n                    <Paper elevation={0} sx={{ p: 2, textAlign: 'center', border: '1px dashed grey', backgroundColor: '#f9f9f9'}}>\r\n                      <Typography>还没有添加科目，请点击下方按钮添加科目</Typography>\r\n                    </Paper>\r\n                  ) : (\r\n                    <Stack spacing={2}>\r\n                      {examForm.subjects.map((subject, index) => (\r\n                        <Paper key={subject.subjectId || subject.id || index} elevation={1} sx={{ p: 2, borderRadius: '12px'}}>\r\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                            <Typography variant=\"subtitle1\" sx={{fontWeight: 'medium'}}>科目 {index + 1}</Typography>\r\n                            <Button \r\n                                size=\"small\" \r\n                                color=\"error\" \r\n                                onClick={() => handleRemoveSubjectFromForm(index)} \r\n                                startIcon={<Delete />} \r\n                            >\r\n                                删除\r\n                            </Button>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', backgroundColor: '#f0f0f5', p:1.5, borderRadius: '8px' }}>\r\n                            <Typography>{subject.name}</Typography>\r\n                            <Chip label={`满分: ${subject.score}`} size=\"small\" color=\"primary\" />\r\n                          </Box>\r\n                        </Paper>\r\n                      ))}\r\n                    </Stack>\r\n                  )}\r\n                </Box>\r\n\r\n                <Box sx={{ width: '100%', p: 1.5, display: 'flex', justifyContent: 'center', mt: 1}}>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    onClick={handleAddSubject} \r\n                    startIcon={<Add />} \r\n                    sx={{ borderRadius: '8px', textTransform: 'none'}}\r\n                  >\r\n                    从科目库选择科目\r\n                  </Button>\r\n                </Box>\r\n                {formErrors.subjects && (\r\n                    <Box sx={{ width: '100%', p: 1.5, mt: -1}}>\r\n                        <Alert severity=\"error\" sx={{width: '100%'}}>{formErrors.subjects}</Alert>\r\n                    </Box>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions sx={{ p: '16px 24px'}}>\r\n            <Stack direction=\"row\" spacing={2} sx={{width: '100%', justifyContent: 'center'}}>\r\n              <Button \r\n                variant=\"contained\" \r\n                onClick={handleSubmitForm} \r\n                disabled={submitLoading} \r\n                sx={{flex:1, borderRadius: '12px'}} \r\n              >\r\n                {submitLoading ? <CircularProgress size={24} color=\"inherit\" /> : (isEdit ? '保存修改' : '创建考试')}\r\n              </Button>\r\n              <Button \r\n                variant=\"outlined\" \r\n                onClick={() => setDialogVisible(false)} \r\n                sx={{flex:1, borderRadius: '12px'}} \r\n                // className=\"cancel-button\"\r\n              >\r\n                取消\r\n              </Button>\r\n            </Stack>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* 科目选择对话框 */}\r\n        <Dialog \r\n            open={subjectDialogVisible} \r\n            onClose={() => setSubjectDialogVisible(false)} \r\n            maxWidth=\"sm\" \r\n            fullWidth \r\n            // custom-class=\"apple-dialog subject-dialog\"\r\n        >\r\n          <DialogTitle sx={{ textAlign: 'center', fontSize: '1.5rem', fontWeight: 600 }}>\r\n            选择科目\r\n            <IconButton\r\n                aria-label=\"close\"\r\n                onClick={() => setSubjectDialogVisible(false)}\r\n                sx={{ position: 'absolute', right: 8, top: 8, color: (theme) => theme.palette.grey[500] }}\r\n            >\r\n                <Close />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers /*className=\"subject-select-container\"*/>\r\n            {subjects.length === 0 ? (\r\n              <Paper elevation={0} sx={{ p: 3, textAlign: 'center', border: '1px dashed grey'}} /*className=\"no-subjects-message\"*/>\r\n                <Typography>没有找到科目数据，请先在科目管理中添加科目</Typography>\r\n                <Button variant=\"contained\" onClick={() => routerPush('/home/subjects')} sx={{mt: 2}} /*className=\"empty-actions\"*/>前往科目管理</Button>\r\n              </Paper>\r\n            ) : (\r\n              <Box>\r\n                <TextField\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  placeholder=\"搜索科目名称\"\r\n                  value={subjectSearchQuery}\r\n                  onChange={(e) => setSubjectSearchQuery(e.target.value)}\r\n                  InputProps={{\r\n                    startAdornment: <Search sx={{mr:1, color:'action.active'}}/>,\r\n                    sx: { borderRadius: '12px', mb: 2}\r\n                  }}\r\n                  // className=\"subject-search-input\"\r\n                />\r\n                {filteredSubjects.length === 0 && subjectSearchQuery && (\r\n                    <Typography sx={{textAlign: 'center', my:2}}>未找到匹配的科目</Typography>\r\n                )}\r\n                {filteredSubjects.length > 0 && (\r\n                <TableContainer component={Paper} elevation={0} sx={{maxHeight: 400, border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                  <Table stickyHeader size=\"small\" /*className=\"subject-table apple-table\"*/>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>#</TableCell>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>科目名称</TableCell>\r\n                        <TableCell>满分</TableCell>\r\n                        <TableCell>及格分</TableCell>\r\n                        <TableCell>描述</TableCell>\r\n                        <TableCell>操作</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {filteredSubjects.map((subject, index) => (\r\n                        <TableRow \r\n                            key={subject.id} \r\n                            hover \r\n                            selected={selectedSubjectForTable?.id === subject.id}\r\n                            // onClick={() => setSelectedSubjectForTable(subject)} // 如果需要点击行选中\r\n                        >\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{subject.id}</TableCell>\r\n                          <TableCell>{subject.name}</TableCell>\r\n                          <TableCell>{subject.score}</TableCell>\r\n                          <TableCell>{subject.passScore}</TableCell>\r\n                          <TableCell>{subject.description}</TableCell>\r\n                          <TableCell>\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                size=\"small\" \r\n                                onClick={() => handleSelectAndConfirmSubject(subject)} \r\n                                // className=\"select-btn\"\r\n                            >\r\n                              选择\r\n                            </Button>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                )}\r\n              </Box>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ p: '16px 24px'}} /*className=\"button-group\"*/>\r\n            <Button variant=\"outlined\" onClick={() => setSubjectDialogVisible(false)} sx={{borderRadius: '12px'}} /*className=\"cancel-button\"*/>关闭</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        \r\n        {/* 成绩管理对话框 */}\r\n        <Dialog \r\n            open={scoresDialogVisible} \r\n            onClose={handleScoresDialogClose} \r\n            maxWidth=\"lg\" \r\n            fullWidth \r\n            // custom-class=\"apple-dialog scores-dialog\"\r\n        >\r\n            <DialogTitle sx={{ textAlign: 'center', fontSize: '1.5rem', fontWeight: 600 }}>\r\n                {currentExamForScores ? `${currentExamForScores.name} - 成绩列表` : '成绩列表'}\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleScoresDialogClose}\r\n                    sx={{ position: 'absolute', right: 8, top: 8, color: (theme) => theme.palette.grey[500] }}\r\n                >\r\n                    <Close />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers /*className=\"scores-dialog-content\"*/>\r\n                {scoresLoading && <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}><CircularProgress /></Box>}\r\n                {!scoresLoading && examScores.length === 0 && (\r\n                    <Paper elevation={0} sx={{ p: 3, textAlign: 'center', border: '1px dashed grey'}} /*className=\"no-scores-message\"*/>\r\n                         <Typography>暂无成绩数据</Typography>\r\n                    </Paper>\r\n                )}\r\n                {!scoresLoading && examScores.length > 0 && (\r\n                    <TableContainer component={Paper} elevation={0} sx={{border: '1px solid rgba(224, 224, 224, 1)'}}>\r\n                        <Table stickyHeader /*className=\"scores-table apple-table\"*/>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>学号</TableCell>\r\n                                    <TableCell>姓名</TableCell>\r\n                                    <TableCell>班级</TableCell>\r\n                                    {currentExamForScores?.examSubjects?.map((subject) => (\r\n                                        <TableCell key={subject.id || subject.subjectId}>{(subject.name || subject.subjectName)}成绩</TableCell>\r\n                                    ))}\r\n                                    <TableCell>总分</TableCell>\r\n                                    <TableCell>排名</TableCell>\r\n                                    <TableCell>评语</TableCell>\r\n                                    <TableCell>上传时间</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {examScores.map((score, index) => (\r\n                                    <TableRow \r\n                                        key={index} \r\n                                        sx={(score.rank || 0) <= 3 ? { backgroundColor: 'rgba(76, 175, 80, 0.1)' } : {}}\r\n                                    >\r\n                                        <TableCell>{score.studentNumber}</TableCell>\r\n                                        <TableCell>{score.studentName}</TableCell>\r\n                                        <TableCell>{score.className || '-'}</TableCell>\r\n                                        {currentExamForScores?.examSubjects?.map((subject) => (\r\n                                            <TableCell key={subject.id || subject.subjectId}>\r\n                                                {score.scores && score.scores[subject.id || subject.subjectId || 0] !== undefined ? \r\n                                                    score.scores[subject.id || subject.subjectId || 0] : '-'}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                        <TableCell>{score.totalScore}</TableCell>\r\n                                        <TableCell>\r\n                                            <Chip \r\n                                                label={score.rank || 0} \r\n                                                color={(score.rank || 0) <= 3 ? 'primary' : 'default'} \r\n                                                size=\"small\" \r\n                                            />\r\n                                        </TableCell>\r\n                                        <TableCell>{score.comment || '-'}</TableCell>\r\n                                        <TableCell>{score.createdAt || '-'}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n                {scoresTotal > 0 && (\r\n                    <TablePagination\r\n                        component=\"div\"\r\n                        count={scoresTotal}\r\n                        page={scoresCurrentPage - 1}\r\n                        onPageChange={handleScoresCurrentPageChange}\r\n                        rowsPerPage={scoresPageSize}\r\n                        onRowsPerPageChange={handleScoresSizeChange}\r\n                        rowsPerPageOptions={[5, 10, 25, 50]}\r\n                        labelRowsPerPage=\"每页行数\"\r\n                        labelDisplayedRows={({ from, to, count }) => `${from}-${to} 共 ${count}`}\r\n                    />\r\n                )}\r\n            </DialogContent>\r\n            <DialogActions sx={{ p: '16px 24px'}} /*className=\"button-group\"*/>\r\n                <Button variant=\"outlined\" onClick={handleScoresDialogClose} sx={{borderRadius: '12px'}} /*className=\"cancel-button\"*/>关闭</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* 添加 Snackbar 组件 */}\r\n        <Snackbar\r\n          open={snackbar.open}\r\n          autoHideDuration={3000}\r\n          onClose={handleCloseSnackbar}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        >\r\n          <Alert \r\n            onClose={handleCloseSnackbar} \r\n            severity={snackbar.severity}\r\n            variant=\"filled\"\r\n            sx={{ width: '100%' }}\r\n          >\r\n            {snackbar.message}\r\n          </Alert>\r\n        </Snackbar>\r\n        \r\n        {/* 添加确认对话框 */}\r\n        <Dialog\r\n          open={confirmDialog.open}\r\n          onClose={closeConfirmDialog}\r\n        >\r\n          <DialogTitle>{confirmDialog.title}</DialogTitle>\r\n          <DialogContent>\r\n            <Typography>{confirmDialog.content}</Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={closeConfirmDialog}>取消</Button>\r\n            <Button \r\n              onClick={() => {\r\n                confirmDialog.onConfirm();\r\n                closeConfirmDialog();\r\n              }} \r\n              color=\"error\" \r\n              variant=\"contained\"\r\n              autoFocus\r\n            >\r\n              确定删除\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </LocalizationProvider>\r\n  );\r\n};\r\n\r\nexport default ExamManagement; ","import axiosInstance from './axios';\r\nimport axios from 'axios';\r\n\r\ninterface ClassInfo {\r\n  id?: number;\r\n  name: string;\r\n  className?: string;\r\n  grade: string;\r\n  headTeacher?: any;\r\n  studentCount?: number;\r\n  description?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * 获取所有班级\r\n * @returns Promise\r\n */\r\nexport const getAllClasses = async () => {\r\n  try {\r\n    console.log('开始获取所有班级数据');\r\n    \r\n    // 检查认证令牌\r\n    const token = localStorage.getItem('token');\r\n    console.log('当前认证令牌:', token ? '有效' : '无效或不存在');\r\n\r\n    // 直接请求后端\r\n    console.log('直接请求后端 http://124.70.74.246:8081/api/classes');\r\n    const response = await directAxios.get('/api/classes');\r\n    console.log('获取班级成功:', response);\r\n    return response;\r\n  } catch (error: any) {\r\n    console.error('获取所有班级失败:', error);\r\n    console.error('错误详情:', error.response ? {\r\n      状态码: error.response.status,\r\n      数据: error.response.data,\r\n      请求头: error.response.headers\r\n    } : '无响应详情');\r\n    \r\n    // 如果是认证错误，提示用户\r\n    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n      console.error('认证失败，请确保已登录并有权限访问班级信息');\r\n    }\r\n    \r\n    throw error; // 将错误抛出，由调用方处理\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassById = async (id: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索班级\r\n * @param query 搜索关键词\r\n * @returns Promise\r\n */\r\nexport const searchClasses = async (query: string) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/search?query=${query}`);\r\n  } catch (error) {\r\n    console.error(`搜索班级\"${query}\"失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据班主任ID获取班级\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const getClassesByTeacher = async (teacherId: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/teacher/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`获取班主任ID=${teacherId}的班级失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建班级\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const createClass = async (classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.post('/api/classes', classInfo);\r\n  } catch (error) {\r\n    console.error('创建班级失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新班级信息\r\n * @param id 班级ID\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const updateClass = async (id: number, classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${id}`, classInfo);\r\n  } catch (error) {\r\n    console.error(`更新班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const deleteClass = async (id: number) => {\r\n  try {\r\n    return await directAxios.delete(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`删除班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分配班主任\r\n * @param classId 班级ID\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const assignHeadTeacher = async (classId: number, teacherId: number) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${classId}/assign/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`为班级ID=${classId}分配班主任ID=${teacherId}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生列表\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassStudents = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生列表`);\r\n    return await directAxios.get(`/api/classes/${classId}/students`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生列表失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生下拉选项\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getStudentSelectOptions = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生下拉选项`);\r\n    return await directAxios.get(`/api/students/class/${classId}/select`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生下拉选项失败:`, error);\r\n    throw error;\r\n  }\r\n}; ","import axios from 'axios';\n\n// 不设置baseURL，使用相对路径以便代理可以正常工作\nconst axiosInstance = axios.create({\n  timeout: 30000, // 30秒超时\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器 - 添加认证令牌\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    \n    // 确保所有请求URL都有正确的前缀\n    if (config.url && !config.url.startsWith('/')) {\n      config.url = '/' + config.url;\n    }\n    \n    // 添加详细请求日志\n    console.log(`发送请求: ${config.method?.toUpperCase()} ${config.url}`);\n    console.log(`请求头:`, config.headers);\n    if (config.data) {\n      console.log(`请求数据:`, typeof config.data === 'object' ? { ...config.data, password: config.data.password ? '***' : undefined, newPassword: config.data.newPassword ? '***' : undefined } : config.data);\n    }\n    \n    // 添加认证头\n    if (token) {\n      console.log('添加认证头: Bearer Token');\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('请求错误:', error);\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器 - 处理错误\naxiosInstance.interceptors.response.use(\n  (response) => {\n    // 添加响应日志\n    console.log(`响应: ${response.status} ${response.config.url}`);\n    console.log('响应数据:', response.data);\n    \n    // 返回完整的响应对象\n    return response;\n  },\n  (error) => {\n    if (error.code === 'ECONNABORTED' && error.message && error.message.includes('timeout')) {\n      console.error('请求超时:', error.config.url);\n      // 可以在这里添加重试逻辑\n    } \n    else if (error.response) {\n      console.error('响应错误:', error.response.status, error.response.data);\n      \n      // 处理401未授权错误或403权限不足错误\n      if ((error.response.status === 401 || error.response.status === 403)) {\n        // 检查是否是修改密码的请求\n        const isChangePasswordRequest = error.config.url && \n          (error.config.url.includes('/auth/change-password') || \n           error.config.url.includes('/api/auth/change-password') ||\n           error.config.url.includes('/auth/reset-password-with-code') ||\n           error.config.url.includes('/api/auth/reset-password-with-code'));\n        \n        if (isChangePasswordRequest) {\n          console.log('密码相关请求失败，但不重定向');\n          // 对于密码相关的请求，不进行重定向，让组件自己处理错误\n          return Promise.reject(error);\n        }\n        \n        console.error('认证错误:', error.response.data);\n        \n        // 清除令牌并重定向到登录页面\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        \n        // 避免在登录页面再次触发重定向\n        if (!window.location.pathname.includes('/login')) {\n          // 跳转到登录页\n          window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);\n        }\n      }\n    } \n    else {\n      console.error('网络错误:', error.message);\n    }\n    \n    // 处理其他错误\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance; ","import axios from './axios';\r\nimport { Subject, SubjectResponse, ApiError } from '../types/subject';\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 获取所有科目（不分页）\r\nexport const getAllSubjects = async () => {\r\n  console.log('获取所有科目，直接请求后端');\r\n  return directAxios.get<Subject[]>(`/api/subjects`);\r\n};\r\n\r\n// 获取分页科目列表\r\nexport const getSubjectsPaged = async (page: number, size: number) => {\r\n  return directAxios.get<SubjectResponse>(`/api/subjects/paged`, {\r\n    params: {\r\n      page,\r\n      size,\r\n      sortBy: 'id',\r\n      direction: 'asc'\r\n    }\r\n  });\r\n};\r\n\r\n// 创建科目\r\nexport const createSubject = async (subject: Omit<Subject, 'id'>) => {\r\n  return directAxios.post<Subject>(`/api/subjects`, subject);\r\n};\r\n\r\n// 更新科目\r\nexport const updateSubject = async (id: string | number, subject: Subject) => {\r\n  return directAxios.put<Subject>(`/api/subjects/${id}`, subject);\r\n};\r\n\r\n// 删除科目\r\nexport const deleteSubject = async (id: string | number) => {\r\n  return directAxios.delete(`/api/subjects/${id}`);\r\n}; ","import React, { useState, forwardRef } from 'react';\r\nimport { \r\n  TextField, \r\n  InputAdornment, \r\n  IconButton, \r\n  TextFieldProps,\r\n  styled\r\n} from '@mui/material';\r\nimport { \r\n  Visibility, \r\n  VisibilityOff, \r\n  Person, \r\n  Lock, \r\n  Email, \r\n  Phone,\r\n  Search\r\n} from '@mui/icons-material';\r\n\r\n// 样式化的TextField组件\r\nconst StyledTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-root': {\r\n    borderRadius: '12px',\r\n    transition: 'all 0.3s',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&.Mui-focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: '0 0 0 2px rgba(0, 113, 227, 0.2)',\r\n    },\r\n  },\r\n  '& .MuiOutlinedInput-notchedOutline': {\r\n    borderColor: 'rgba(0, 0, 0, 0.1)',\r\n  },\r\n  '& .MuiOutlinedInput-input': {\r\n    padding: '14px 16px',\r\n  },\r\n  '& .MuiInputLabel-outlined': {\r\n    transform: 'translate(16px, 15px) scale(1)',\r\n  },\r\n  '& .MuiInputLabel-outlined.MuiInputLabel-shrink': {\r\n    transform: 'translate(16px, -6px) scale(0.75)',\r\n  },\r\n}));\r\n\r\n// 图标映射\r\nconst iconMap: { [key: string]: React.ReactElement } = {\r\n  'person': <Person />,\r\n  'lock': <Lock />,\r\n  'email': <Email />,\r\n  'phone': <Phone />,\r\n  'search': <Search />\r\n};\r\n\r\n// 自定义输入组件属性\r\ninterface CustomInputProps extends Omit<TextFieldProps, 'variant'> {\r\n  prefixIcon?: string;\r\n  showPassword?: boolean;\r\n  onEnter?: () => void;\r\n}\r\n\r\n// 自定义输入组件\r\nconst CustomInput = forwardRef<HTMLDivElement, CustomInputProps>(\r\n  ({ prefixIcon, showPassword, onEnter, onChange, ...props }, ref) => {\r\n    const [showPasswordValue, setShowPasswordValue] = useState(false);\r\n\r\n    // 处理回车键按下事件\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n      if (e.key === 'Enter' && onEnter) {\r\n        onEnter();\r\n      }\r\n      // 确保原始的onKeyDown事件也被调用\r\n      if (props.onKeyDown) {\r\n        props.onKeyDown(e as any);\r\n      }\r\n    };\r\n\r\n    // 处理密码可见性切换\r\n    const handleClickShowPassword = () => {\r\n      setShowPasswordValue(!showPasswordValue);\r\n    };\r\n\r\n    // 获取密码输入类型\r\n    const getType = () => {\r\n      if (props.type === 'password') {\r\n        return showPasswordValue ? 'text' : 'password';\r\n      }\r\n      return props.type;\r\n    };\r\n\r\n    // 获取前缀图标\r\n    const getPrefixIcon = () => {\r\n      if (!prefixIcon) return null;\r\n      return iconMap[prefixIcon] || null;\r\n    };\r\n\r\n    // 确保onChange事件被正确处理\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (onChange) {\r\n        onChange(e as any);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <StyledTextField\r\n        ref={ref}\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        {...props}\r\n        type={getType()}\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleChange}\r\n        InputProps={{\r\n          ...props.InputProps,\r\n          startAdornment: prefixIcon ? (\r\n            <InputAdornment position=\"start\">\r\n              {getPrefixIcon()}\r\n            </InputAdornment>\r\n          ) : props.InputProps?.startAdornment,\r\n          endAdornment: props.type === 'password' && showPassword ? (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                edge=\"end\"\r\n                size=\"large\"\r\n              >\r\n                {showPasswordValue ? <VisibilityOff /> : <Visibility />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ) : props.InputProps?.endAdornment,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomInput; ","import axios from './axios';\r\nimport { Score, ScoreSaveRequest, PaginatedResponse } from '../types/score';\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 获取考试的成绩列表\r\nexport const getScoresByExamId = async (examId: number, page: number = 0, size: number = 10, subjectId?: number) => {\r\n  const params: any = { page, size };\r\n  if (subjectId) {\r\n    params.subjectId = subjectId;\r\n  }\r\n  \r\n  console.log(`正在请求成绩数据: /api/scores/student-scores/exam/${examId}?page=${page}&size=${size}${subjectId ? '&subjectId=' + subjectId : ''}`);\r\n  return directAxios.get<PaginatedResponse<any>>(`/api/scores/student-scores/exam/${examId}`, {\r\n    params\r\n  });\r\n};\r\n\r\n// 保存学生成绩\r\nexport const saveStudentScore = async (scoreData: ScoreSaveRequest) => {\r\n  console.log('保存学生成绩:', scoreData);\r\n  return directAxios.post(`/api/scores/manual`, scoreData);\r\n};\r\n\r\n// 导出考试成绩\r\nexport const exportExamScores = async (examId: number) => {\r\n  const response = await directAxios.get(`/api/scores/export`, {\r\n    params: { examId },\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  // 创建下载链接\r\n  const url = window.URL.createObjectURL(new Blob([response.data]));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  \r\n  // 从响应头获取文件名\r\n  const contentDisposition = response.headers['content-disposition'];\r\n  let filename = `成绩表_${examId}.xlsx`;\r\n  \r\n  if (contentDisposition) {\r\n    const filenameMatch = contentDisposition.match(/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/);\r\n    if (filenameMatch && filenameMatch[1]) {\r\n      filename = filenameMatch[1].replace(/['\"]/g, '');\r\n    }\r\n  }\r\n  \r\n  link.setAttribute('download', filename);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\n// 下载成绩导入模板\r\nexport const downloadScoreTemplate = async (examId: number) => {\r\n  const response = await directAxios.get(`/api/scores/template/download`, {\r\n    params: { examId },\r\n    responseType: 'blob'\r\n  });\r\n  \r\n  // 创建下载链接\r\n  const url = window.URL.createObjectURL(new Blob([response.data]));\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.setAttribute('download', `成绩导入模板_${examId}.xlsx`);\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\n// 从Excel导入成绩\r\nexport const importScoresFromExcel = async (examId: number, file: File) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('examId', examId.toString());\r\n  \r\n  console.log(`正在导入成绩数据: examId=${examId}, fileName=${file.name}`);\r\n  return directAxios.post(`/api/scores/import`, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n}; ","import axios from 'axios';\r\nimport { Exam } from '../types/score';\r\nimport axiosInstance from './axios';\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface ExamSubjectDTO {\r\n  subject: {\r\n    id: number;\r\n  };\r\n  subjectName: string;\r\n  fullScore: number;\r\n}\r\n\r\ninterface ExamForm {\r\n  id?: number | null;\r\n  examName: string;\r\n  examDate: string;\r\n  description?: string;\r\n  classInfo?: {\r\n    id: number;\r\n  } | null;\r\n  examSubjects: ExamSubjectDTO[];\r\n}\r\n\r\n// 获取所有考试\r\nexport const getAllExams = async () => {\r\n  console.log('获取所有考试，直接请求后端');\r\n  return directAxios.get<Exam[]>('/api/exams');\r\n};\r\n\r\n// 根据ID获取考试详情\r\nexport const getExamById = async (examId: number) => {\r\n  return directAxios.get<Exam>(`/api/exams/${examId}`);\r\n};\r\n\r\n// 根据班级获取考试\r\nexport const getExamsByClass = (classId: string) => {\r\n  return directAxios.get(`/api/exams/class/${classId}`);\r\n};\r\n\r\n// 根据状态获取考试\r\nexport const getExamsByStatus = (status: string) => {\r\n  return directAxios.get(`/api/exams/status/${status}`);\r\n};\r\n\r\n// 创建新考试\r\nexport const createExam = async (examData: Partial<Exam>) => {\r\n  return directAxios.post('/api/exams', examData);\r\n};\r\n\r\n// 更新考试信息\r\nexport const updateExam = async (examId: number, examData: Partial<Exam>) => {\r\n  return directAxios.put(`/api/exams/${examId}`, examData);\r\n};\r\n\r\n// 删除考试\r\nexport const deleteExam = async (examId: number) => {\r\n  return directAxios.delete(`/api/exams/${examId}`);\r\n};\r\n\r\n// 更新考试状态\r\nexport const updateExamStatus = async (examId: number, status: Exam['status']) => {\r\n  return directAxios.patch(`/api/exams/${examId}/status`, { status });\r\n}; "],"names":["_ref","value","onChange","onSearch","placeholder","_jsx","TextField","variant","size","e","target","onKeyPress","event","key","InputProps","endAdornment","InputAdornment","position","children","IconButton","onClick","edge","SearchIcon","sx","minWidth","borderRadius","props","_objectWithoutProperties","_excluded","Button","_objectSpread","color","startIcon","AddIcon","options","prefixIcon","label","_jsxs","select","fullWidth","startAdornment","style","marginRight","display","alignItems","MenuItem","disabled","map","option","ExamManagement","_currentExamForScores","exams","setExams","useState","classes","setClasses","subjects","setSubjects","loading","setLoading","selectedStatus","setSelectedStatus","selectedClass","setSelectedClass","searchQuery","setSearchQuery","totalExams","setTotalExams","examPage","setExamPage","examRowsPerPage","setExamRowsPerPage","dialogVisible","setDialogVisible","isEdit","setIsEdit","submitLoading","setSubmitLoading","examForm","setExamForm","id","name","examDate","Date","classId","description","subjectDialogVisible","setSubjectDialogVisible","subjectSearchQuery","setSubjectSearchQuery","filteredSubjects","setFilteredSubjects","selectedSubjectForTable","setSelectedSubjectForTable","scoresDialogVisible","setScoresDialogVisible","scoresLoading","setScoresLoading","currentExamForScores","setCurrentExamForScores","examScores","setExamScores","scoresTotal","setScoresTotal","scoresPageSize","setScoresPageSize","scoresCurrentPage","setScoresCurrentPage","formErrors","setFormErrors","snackbar","setSnackbar","open","message","severity","confirmDialog","setConfirmDialog","title","content","onConfirm","formatDate","dateString","includes","date","isNaN","getTime","formatDateToYYYYMMDD","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","getTodayDate","today","getStatusType","status","getStatusLabel","fetchExams","useCallback","async","response","examAPI","filtered","data","exam","_exam$classInfo","examName","className","classInfo","examSubjects","totalScore","filter","toLowerCase","length","error","console","showSnackbar","fetchClasses","classAPI","fetchSubjects","processedSubjects","subjectAPI","subject","subjectName","score","fullScore","passScore","Math","floor","useEffect","openConfirmDialog","closeConfirmDialog","prev","handleUpdateStatus","newStatus","statusText","_error$response2","_error$response2$data","handleFormInputChange","filterSubjectOptions","query","s","fetchExamScores","examId","page","idToFetch","scoreAPI","processedScores","scoreValue","studentNumber","studentName","examSubjectId","studentId","rank","comment","createdAt","scores","totalElements","handleScoresDialogClose","paginatedExams","slice","arguments","undefined","handleCloseSnackbar","LocalizationProvider","dateAdapter","AdapterDateFns","adapterLocale","zhCN","Box","p","Card","elevation","CardHeader","action","Stack","direction","xs","sm","spacing","FormControl","InputLabel","Select","cls","SearchBox","handleSearch","AddButton","handleAddExam","mt","ml","CardContent","justifyContent","my","CircularProgress","Typography","textAlign","TableContainer","component","Paper","border","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","Chip","flexWrap","sub","idx","_sub$subject","Edit","_exam$classInfo2","toString","_subject$subject","_subject$subject2","Number","subjectId","handleEdit","PlayArrow","Stop","Grading","handleManageScores","Delete","_error$response","_error$response$data","handleDelete","TablePagination","count","onPageChange","handleChangePage","newPage","rowsPerPage","onRowsPerPageChange","parseInt","rowsPerPageOptions","labelRowsPerPage","labelDisplayedRows","from","to","Dialog","onClose","maxWidth","DialogTitle","fontSize","fontWeight","right","top","theme","palette","grey","Close","DialogContent","dividers","noValidate","autoComplete","margin","width","CustomInput","required","helperText","DatePicker","minDate","enableAccessibleFieldDOMStructure","slots","textField","params","CustomSelect","val","handleClassIdChangeInForm","c","multiline","rows","gutterBottom","mb","flex","height","background","backgroundColor","index","_","i","handleRemoveSubjectFromForm","handleAddSubject","Add","textTransform","Alert","DialogActions","_examForm$examDate","validateForm","errors","trim","Object","keys","examDateString","toISOString","split","find","formDataToSubmit","_error$response3","_error$response3$data","routerPush","path","log","Search","mr","maxHeight","hover","selected","newSubjectEntry","handleSelectAndConfirmSubject","_currentExamForScores2","handleScoresCurrentPageChange","newSize","_ref2","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","autoFocus","directAxios","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Promise","reject","getAllClasses","get","状态码","数据","请求头","searchClasses","createClass","post","updateClass","put","deleteClass","delete","assignHeadTeacher","teacherId","getStudentSelectOptions","axiosInstance","_config$method","url","startsWith","method","toUpperCase","password","newPassword","code","removeItem","window","location","pathname","href","encodeURIComponent","getAllSubjects","getSubjectsPaged","sortBy","createSubject","updateSubject","deleteSubject","StyledTextField","styled","transition","boxShadow","borderColor","padding","transform","iconMap","Person","Lock","Email","Phone","forwardRef","ref","_props$InputProps","_props$InputProps2","showPassword","onEnter","showPasswordValue","setShowPasswordValue","type","onKeyDown","handleClickShowPassword","VisibilityOff","Visibility","getScoresByExamId","saveStudentScore","scoreData","exportExamScores","responseType","URL","createObjectURL","Blob","link","document","createElement","contentDisposition","filename","filenameMatch","match","replace","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","downloadScoreTemplate","importScoresFromExcel","file","formData","FormData","append","getAllExams","getExamById","getExamsByClass","getExamsByStatus","createExam","examData","updateExam","deleteExam","updateExamStatus","patch"],"sourceRoot":""}