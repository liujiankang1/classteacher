{"version":3,"file":"static/js/322.42683243.chunk.js","mappings":"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","sources":["api/class.ts","../node_modules/@mui/icons-material/esm/Download.js","../node_modules/@mui/material/esm/MenuItem/menuItemClasses.js","../node_modules/@mui/material/esm/MenuItem/MenuItem.js","utils/dateUtils.ts","../node_modules/@mui/icons-material/esm/Refresh.js","../node_modules/@mui/material/esm/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/esm/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/icons-material/esm/LocalFlorist.js","api/rewardAPI.ts","views/RewardManagement.tsx"],"sourcesContent":["import axiosInstance from './axios';\r\nimport axios from 'axios';\r\n\r\ninterface ClassInfo {\r\n  id?: number;\r\n  name: string;\r\n  className?: string;\r\n  grade: string;\r\n  headTeacher?: any;\r\n  studentCount?: number;\r\n  description?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * 获取所有班级\r\n * @returns Promise\r\n */\r\nexport const getAllClasses = async () => {\r\n  try {\r\n    console.log('开始获取所有班级数据');\r\n    \r\n    // 检查认证令牌\r\n    const token = localStorage.getItem('token');\r\n    console.log('当前认证令牌:', token ? '有效' : '无效或不存在');\r\n\r\n    // 直接请求后端\r\n    console.log('直接请求后端 http://124.70.74.246:8081/api/classes');\r\n    const response = await directAxios.get('/api/classes');\r\n    console.log('获取班级成功:', response);\r\n    return response;\r\n  } catch (error: any) {\r\n    console.error('获取所有班级失败:', error);\r\n    console.error('错误详情:', error.response ? {\r\n      状态码: error.response.status,\r\n      数据: error.response.data,\r\n      请求头: error.response.headers\r\n    } : '无响应详情');\r\n    \r\n    // 如果是认证错误，提示用户\r\n    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n      console.error('认证失败，请确保已登录并有权限访问班级信息');\r\n    }\r\n    \r\n    throw error; // 将错误抛出，由调用方处理\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassById = async (id: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索班级\r\n * @param query 搜索关键词\r\n * @returns Promise\r\n */\r\nexport const searchClasses = async (query: string) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/search?query=${query}`);\r\n  } catch (error) {\r\n    console.error(`搜索班级\"${query}\"失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据班主任ID获取班级\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const getClassesByTeacher = async (teacherId: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/teacher/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`获取班主任ID=${teacherId}的班级失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建班级\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const createClass = async (classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.post('/api/classes', classInfo);\r\n  } catch (error) {\r\n    console.error('创建班级失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新班级信息\r\n * @param id 班级ID\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const updateClass = async (id: number, classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${id}`, classInfo);\r\n  } catch (error) {\r\n    console.error(`更新班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const deleteClass = async (id: number) => {\r\n  try {\r\n    return await directAxios.delete(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`删除班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分配班主任\r\n * @param classId 班级ID\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const assignHeadTeacher = async (classId: number, teacherId: number) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${classId}/assign/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`为班级ID=${classId}分配班主任ID=${teacherId}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生列表\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassStudents = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生列表`);\r\n    return await directAxios.get(`/api/classes/${classId}/students`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生列表失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生下拉选项\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getStudentSelectOptions = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生下拉选项`);\r\n    return await directAxios.get(`/api/students/class/${classId}/select`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生下拉选项失败:`, error);\r\n    throw error;\r\n  }\r\n}; ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","/**\r\n * 格式化日期时间\r\n * @param dateTime 日期时间字符串或Date对象\r\n * @returns 格式化后的日期时间字符串\r\n */\r\nexport const formatDateTime = (dateTime: string | Date | undefined | any): string => {\r\n  if (!dateTime) return '';\r\n  \r\n  try {\r\n    // 处理数组格式的日期 [年, 月, 日, 时, 分, 秒]\r\n    if (Array.isArray(dateTime)) {\r\n      const [year, month, day, hour = 0, minute = 0] = dateTime;\r\n      return `${year}-${String(month).padStart(2, '0')}-${String(day).padStart(2, '0')} ${String(hour).padStart(2, '0')}:${String(minute).padStart(2, '0')}`;\r\n    }\r\n    \r\n    // 处理普通日期对象或字符串\r\n    const date = new Date(dateTime);\r\n    \r\n    // 检查日期是否有效\r\n    if (isNaN(date.getTime())) {\r\n      return String(dateTime);\r\n    }\r\n    \r\n    // 获取年、月、日、时、分\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0');\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    \r\n    // 返回格式化后的日期时间字符串\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n  } catch (error) {\r\n    console.error('日期格式化错误:', error, dateTime);\r\n    return String(dateTime);\r\n  }\r\n};\r\n\r\n/**\r\n * 格式化日期\r\n * @param date 日期字符串或Date对象\r\n * @returns 格式化后的日期字符串\r\n */\r\nexport const formatDate = (date: string | Date | undefined): string => {\r\n  if (!date) return '';\r\n  \r\n  const dateObj = new Date(date);\r\n  \r\n  // 获取年、月、日\r\n  const year = dateObj.getFullYear();\r\n  const month = String(dateObj.getMonth() + 1).padStart(2, '0');\r\n  const day = String(dateObj.getDate()).padStart(2, '0');\r\n  \r\n  // 返回格式化后的日期字符串\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\n/**\r\n * 格式化时间\r\n * @param time 时间字符串或Date对象\r\n * @returns 格式化后的时间字符串\r\n */\r\nexport const formatTime = (time: string | Date | undefined): string => {\r\n  if (!time) return '';\r\n  \r\n  const timeObj = new Date(time);\r\n  \r\n  // 获取时、分、秒\r\n  const hours = String(timeObj.getHours()).padStart(2, '0');\r\n  const minutes = String(timeObj.getMinutes()).padStart(2, '0');\r\n  const seconds = String(timeObj.getSeconds()).padStart(2, '0');\r\n  \r\n  // 返回格式化后的时间字符串\r\n  return `${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\n/**\r\n * 获取当前周的日期范围\r\n * @returns [开始日期, 结束日期]\r\n */\r\nexport const getCurrentWeekRange = (): [Date, Date] => {\r\n  const now = new Date();\r\n  const dayOfWeek = now.getDay() || 7; // 周日为0，转换为7\r\n  \r\n  // 计算本周的第一天 (周一)\r\n  const firstDay = new Date(now);\r\n  firstDay.setDate(now.getDate() - dayOfWeek + 1);\r\n  firstDay.setHours(0, 0, 0, 0);\r\n  \r\n  // 计算本周的最后一天 (周日)\r\n  const lastDay = new Date(now);\r\n  lastDay.setDate(now.getDate() + (7 - dayOfWeek));\r\n  lastDay.setHours(23, 59, 59, 999);\r\n  \r\n  return [firstDay, lastDay];\r\n};\r\n\r\n/**\r\n * 获取当前月的日期范围\r\n * @returns [开始日期, 结束日期]\r\n */\r\nexport const getCurrentMonthRange = (): [Date, Date] => {\r\n  const now = new Date();\r\n  \r\n  // 计算本月的第一天\r\n  const firstDay = new Date(now.getFullYear(), now.getMonth(), 1);\r\n  firstDay.setHours(0, 0, 0, 0);\r\n  \r\n  // 计算本月的最后一天\r\n  const lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0);\r\n  lastDay.setHours(23, 59, 59, 999);\r\n  \r\n  return [firstDay, lastDay];\r\n};\r\n\r\n/**\r\n * 获取当前学期的日期范围\r\n * @returns [开始日期, 结束日期]\r\n */\r\nexport const getCurrentSemesterRange = (): [Date, Date] => {\r\n  const now = new Date();\r\n  let firstDay: Date;\r\n  let lastDay: Date;\r\n  \r\n  // 上半年为第一学期，下半年为第二学期\r\n  if (now.getMonth() < 6) { // 1月-6月\r\n    firstDay = new Date(now.getFullYear(), 0, 1); // 1月1日\r\n    lastDay = new Date(now.getFullYear(), 5, 30); // 6月30日\r\n  } else { // 7月-12月\r\n    firstDay = new Date(now.getFullYear(), 6, 1); // 7月1日\r\n    lastDay = new Date(now.getFullYear(), 11, 31); // 12月31日\r\n  }\r\n  \r\n  firstDay.setHours(0, 0, 0, 0);\r\n  lastDay.setHours(23, 59, 59, 999);\r\n  \r\n  return [firstDay, lastDay];\r\n}; ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c4.97 0 9-4.03 9-9-4.97 0-9 4.03-9 9M5.6 10.25c0 1.38 1.12 2.5 2.5 2.5.53 0 1.01-.16 1.42-.44l-.02.19c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5l-.02-.19c.4.28.89.44 1.42.44 1.38 0 2.5-1.12 2.5-2.5 0-1-.59-1.85-1.43-2.25.84-.4 1.43-1.25 1.43-2.25 0-1.38-1.12-2.5-2.5-2.5-.53 0-1.01.16-1.42.44l.02-.19C14.5 2.12 13.38 1 12 1S9.5 2.12 9.5 3.5l.02.19c-.4-.28-.89-.44-1.42-.44-1.38 0-2.5 1.12-2.5 2.5 0 1 .59 1.85 1.43 2.25-.84.4-1.43 1.25-1.43 2.25M12 5.5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8s1.12-2.5 2.5-2.5M3 13c0 4.97 4.03 9 9 9 0-4.97-4.03-9-9-9\"\n}), 'LocalFlorist');","import axiosInstance from './axios';\nimport axios from 'axios';\n\n// 创建一个专用于直接请求后端的axios实例\nconst directAxios = axios.create({\n  baseURL: 'http://124.70.74.246:8081',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器 - 添加认证令牌\ndirectAxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 添加/api前缀以适配后端context-path配置\nconst API_URL = `/api/rewards`;\nconst STATISTICS_API_URL = `/api/statistics/rewards`;\n\n// 创建奖励记录\nexport const createReward = async (rewardData: any) => {\n  return directAxios.post(API_URL, rewardData);\n};\n\n// 更新奖励记录\nexport const updateReward = async (id: string, rewardData: any) => {\n  return directAxios.put(`${API_URL}/${id}`, rewardData);\n};\n\n// 删除奖励记录\nexport const deleteReward = async (id: string) => {\n  return directAxios.delete(`${API_URL}/${id}`);\n};\n\n// 获取奖励记录详情\nexport const getRewardById = async (id: string) => {\n  return directAxios.get(`${API_URL}/${id}`);\n};\n\n// 获取学生的奖励记录\nexport const getRewardsByStudentId = async (\n  studentId: string,\n  page: number = 0,\n  size: number = 10\n) => {\n  return directAxios.get(`${API_URL}/student/${studentId}?page=${page}&size=${size}`);\n};\n\n// 获取班级的奖励记录\nexport const getRewardsByClassId = async (\n  classId: string,\n  page: number = 0,\n  size: number = 10\n) => {\n  return directAxios.get(`${API_URL}/class/${classId}?page=${page}&size=${size}`);\n};\n\n// 获取班级奖励统计数据\nexport const getClassRewardStatistics = async (params: {\n  classId: string;\n  period?: string;\n  startDate?: string;\n  endDate?: string;\n}) => {\n  const { classId, period, startDate, endDate } = params;\n  \n  let url = `${STATISTICS_API_URL}/classes`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}&endDate=${endDate}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  return directAxios.get(url);\n};\n\n// 获取学生奖励排名\nexport const getStudentRanking = async (params: {\n  classId: string;\n  period?: string;\n  startDate?: string;\n  endDate?: string;\n  page?: number;\n  size?: number;\n}) => {\n  const { classId, period, startDate, endDate, page = 0, size = 10 } = params;\n  \n  let url = `${STATISTICS_API_URL}/students/ranking`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}`);\n    queryParams.push(`endDate=${endDate}`);\n  }\n  \n  if (page !== undefined) {\n    queryParams.push(`page=${page}`);\n  }\n  \n  if (size !== undefined) {\n    queryParams.push(`size=${size}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  console.log('请求学生排名URL:', url);\n  console.log('排名请求参数详情:', {classId, period, startDate, endDate, page, size});\n  return directAxios.get(url);\n};\n\n// 获取奖励原因分布\nexport const getReasonDistribution = async (classId: string) => {\n  // 注意：后端可能没有对应的接口，需要确认是否存在\n  return directAxios.get(`${STATISTICS_API_URL}/reason-distribution?classId=${classId}`);\n};\n\n// 获取奖励时间趋势\nexport const getTrendData = async (params: {\n  classId: string;\n  startDate: string;\n  endDate: string;\n  period?: string;\n}) => {\n  const { classId, startDate, endDate, period = 'MONTH' } = params;\n  \n  let url = `${STATISTICS_API_URL}/trend`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}`);\n    queryParams.push(`endDate=${endDate}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  console.log('请求趋势数据URL:', url);\n  console.log('趋势请求参数详情:', {classId, period, startDate, endDate});\n  return directAxios.get(url);\n};\n\n// 使用统计控制器的API\n\n// 获取奖励统计概览\nexport const getRewardStatistics = async (params: {\n  classId: string;\n  period?: string;\n  startDate?: string;\n  endDate?: string;\n}) => {\n  const { classId, period, startDate, endDate } = params;\n  \n  let url = `${STATISTICS_API_URL}`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}`);\n    queryParams.push(`endDate=${endDate}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  console.log('请求统计数据URL:', url);\n  console.log('请求参数详情:', {classId, period, startDate, endDate});\n  \n  return directAxios.get(url);\n};\n\n// 获取小红花趋势数据\nexport const getRewardTrend = async (params: {\n  classId: string;\n  period?: string;\n  startDate?: string;\n  endDate?: string;\n}) => {\n  const { classId, period, startDate, endDate } = params;\n  \n  // 使用正确的API路径 - 统一使用RewardStatisticsController的接口\n  let url = `${STATISTICS_API_URL}/trend`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}`);\n    queryParams.push(`endDate=${endDate}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  console.log('请求趋势数据URL:', url);\n  console.log('趋势请求参数详情:', {classId, period, startDate, endDate});\n  return directAxios.get(url);\n};\n\n// 导出小红花统计数据\nexport const exportRewardStatistics = async (params: {\n  classId: string;\n  period?: string;\n  startDate?: string;\n  endDate?: string;\n}) => {\n  const { classId, period, startDate, endDate } = params;\n  \n  // 使用RewardStatisticsController的导出接口\n  let url = `${STATISTICS_API_URL}/export`;\n  const queryParams: string[] = [];\n  \n  if (classId) {\n    queryParams.push(`classId=${classId}`);\n  }\n  \n  if (period) {\n    queryParams.push(`period=${period}`);\n  }\n  \n  if (startDate && endDate) {\n    queryParams.push(`startDate=${startDate}`);\n    queryParams.push(`endDate=${endDate}`);\n  }\n  \n  if (queryParams.length > 0) {\n    url += `?${queryParams.join('&')}`;\n  }\n  \n  console.log('请求导出数据URL:', url);\n  console.log('导出请求参数详情:', {classId, period, startDate, endDate});\n  return directAxios.get(url, { responseType: 'blob' });\n}; ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Button,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Stack,\n  FormHelperText,\n  IconButton,\n  Tooltip,\n  CircularProgress,\n  Alert,\n  Grid,\n  Card,\n  CardContent,\n  Divider,\n  Tab,\n  Tabs,\n  Snackbar\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { \n  Search as SearchIcon, \n  Add as AddIcon, \n  Refresh as RefreshIcon, \n  Download as DownloadIcon,\n  FilterList as FilterListIcon,\n  LocalFlorist as LocalFloristIcon\n} from '@mui/icons-material';\nimport * as echarts from 'echarts';\nimport type { EChartsType } from 'echarts';\nimport dayjs from 'dayjs';\nimport { zhCN } from 'date-fns/locale';\n// 导入API服务\nimport * as classAPI from '../api/class';\nimport * as rewardAPI from '../api/rewardAPI';\nimport { formatDate, getCurrentMonthRange, getCurrentWeekRange, getCurrentSemesterRange } from '../utils/dateUtils';\n\n// 定义班级对象类型\ninterface ClassItem {\n  id: number | string;\n  name?: string;\n  className?: string;\n  [key: string]: any;\n}\n\n// 定义统计数据类型\ninterface StatisticsData {\n  studentCount?: number;\n  totalFlowers?: number;\n  todayFlowers?: number;\n  averageFlowers?: number;\n  maxFlowers?: number;\n  studentRankings?: any[];\n  reasonDistribution?: Record<string, number>;\n  [key: string]: any;\n}\n\n// 在组件顶部添加接口定义\ninterface ClassOption { \n  label: string; \n  value: string; \n}\n\ninterface StudentOption { \n  label: string; \n  value: string; \n}\n\ninterface StudentRank {\n  id: number;\n  studentId: number;\n  name: string;\n  className: string;\n  flowerCount: number;\n  lastRewardDate: string;\n}\n\nconst RewardManagement = () => {\n  const [loading, setLoading] = useState(false);\n  const [isClassLoading, setIsClassLoading] = useState(false);\n  const [isStudentLoading, setIsStudentLoading] = useState(false);\n  const [isStudentSelectReady, setIsStudentSelectReady] = useState(false);\n  const [currentClass, setCurrentClass] = useState<string>('');\n  const [currentClassId, setCurrentClassId] = useState<string>('');\n  const [studentCount, setStudentCount] = useState<number>(0);\n  const [classOptions, setClassOptions] = useState<ClassOption[]>([]);\n  const [statistics, setStatistics] = useState({\n    totalFlowers: 0,\n    todayFlowers: 0,\n    averageFlowers: 0,\n    maxFlowers: 0\n  });\n  const [currentPeriod, setCurrentPeriod] = useState<string>('WEEK');\n  const [studentRankList, setStudentRankList] = useState<StudentRank[]>([]);\n  const [studentOptions, setStudentOptions] = useState<StudentOption[]>([]);\n  const [selectedStudent, setSelectedStudent] = useState<string>('');\n  const [flowerCount, setFlowerCount] = useState<number>(1);\n  const [rewardReason, setRewardReason] = useState<string>('课堂表现优秀');\n  const [rewardDate, setRewardDate] = useState<Date | null>(new Date());\n  const [isRewardModalVisible, setIsRewardModalVisible] = useState(false);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\n  const [tabValue, setTabValue] = useState<string>('WEEK');\n  const [rewardRemark, setRewardRemark] = useState<string>('');\n  \n  // 添加Snackbar状态\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'success' as 'success' | 'info' | 'warning' | 'error'\n  });\n\n  // 使用useRef来跟踪是否已经初始化和表单引用\n  const initializedRef = useRef(false);\n  const formRef = useRef<HTMLFormElement>(null);\n  const chartRef = useRef<HTMLDivElement>(null);\n  const chartInstance = useRef<EChartsType | null>(null);\n\n  // 在组件状态声明区域添加日期范围状态\n  const [dateRange, setDateRange] = useState<[Date | null, Date | null]>([null, null]);\n  const [isCustomDateRange, setIsCustomDateRange] = useState<boolean>(false);\n\n  // 用于跟踪下载操作是否正在进行中\n  const [isExporting, setIsExporting] = useState(false);\n\n  // 显示消息提示\n  const showSnackbar = (message: string, severity: 'success' | 'info' | 'warning' | 'error' = 'success') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n\n  // 关闭消息提示\n  const handleCloseSnackbar = () => {\n    setSnackbar(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n\n  // 渲染图表函数\n  const renderChart = useCallback((reasonDistribution: Record<string, number>) => {\n    // 安全检查：确保组件尚未卸载\n    if (!chartRef.current) {\n      console.warn('图表容器引用为空，无法渲染图表');\n      return;\n    }\n\n    // 检查容器是否已连接到DOM\n    if (!document.body.contains(chartRef.current)) {\n      console.warn('图表容器不在DOM中，可能组件已卸载，取消渲染');\n      return;\n    }\n\n    // 检查容器大小\n    const containerWidth = chartRef.current.clientWidth;\n    const containerHeight = chartRef.current.clientHeight;\n    if (containerWidth === 0 || containerHeight === 0) {\n      console.warn('图表容器尺寸为0，无法正常渲染图表:', containerWidth, containerHeight);\n      return; // 确保在此处返回，防止在0尺寸容器上初始化ECharts\n    }\n\n    try {\n      console.log('开始渲染图表，数据:', reasonDistribution);\n      \n      // 确保在创建新图表前销毁旧图表\n      if (chartInstance.current) {\n        console.log('销毁旧图表实例');\n        try {\n        chartInstance.current.dispose();\n        } catch (disposeError) {\n          console.error('销毁旧图表实例失败:', disposeError);\n        } finally {\n          chartInstance.current = null;\n        }\n      }\n\n      // 创建新图表\n      console.log('图表容器尺寸:', containerWidth, containerHeight);\n      try {\n      const chart = echarts.init(chartRef.current);\n      chartInstance.current = chart;\n\n        // 转换数据格式 - 添加默认空对象防止reasonDistribution为undefined\n        const pieData = Object.entries(reasonDistribution || {}).map(([name, value]) => ({\n        name,\n        value\n      }));\n        \n        console.log('转换后的图表数据:', pieData);\n\n      // 图表配置\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          top: '5%',\n          left: 'center'\n        },\n        series: [\n          {\n            name: '小红花发放原因',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: pieData.length > 0 ? pieData : [\n              { value: 0, name: '暂无数据' }\n            ]\n          }\n        ]\n      };\n\n        console.log('设置图表配置:', option);\n      chart.setOption(option);\n        console.log('图表渲染完成');\n      } catch (initError) {\n        console.error('创建或初始化图表失败:', initError);\n        if (chartInstance.current) {\n          try {\n            chartInstance.current.dispose();\n          } catch (e) {\n            // 忽略清理错误\n          }\n          chartInstance.current = null;\n        }\n      }\n    } catch (error) {\n      console.error('渲染图表过程中出错:', error);\n      // 确保在出错时清理图表实例\n      if (chartInstance.current) {\n        try {\n          chartInstance.current.dispose();\n        } catch (e) {\n          // 忽略清理错误\n        }\n        chartInstance.current = null;\n      }\n    }\n  }, []);\n\n  // 获取班级学生列表的专用函数\n  const fetchClassStudents = useCallback(async (classId: string) => {\n    if (!classId || isStudentLoading) {\n      console.warn('无效的班级ID或正在加载中，无法获取学生列表');\n      setIsStudentSelectReady(false);\n      return;\n    }\n    \n    console.log(`开始获取班级ID=${classId}的学生列表`);\n    try {\n      setIsStudentLoading(true);\n      const studentsResponse = await classAPI.getStudentSelectOptions(classId);\n      console.log('班级学生下拉选项原始响应:', studentsResponse);\n      \n      if (!studentsResponse || !studentsResponse.data) {\n        throw new Error('获取学生列表响应无效');\n      }\n      \n      const students = Array.isArray(studentsResponse.data) ? studentsResponse.data : [];\n      console.log('解析后的学生列表数据:', students);\n      \n      if (students.length === 0) {\n        console.warn('班级学生列表为空');\n        setStudentOptions([]);\n        setIsStudentSelectReady(false);\n        return;\n      }\n      \n      const studentOpts: StudentOption[] = students\n        .filter((student: any): student is { id: number | string; name: string; studentNumber: string } => \n          Boolean(student.id && student.name && student.studentNumber))\n        .map((student) => ({\n          label: `${student.name} (${student.studentNumber})`,\n          value: student.id.toString()\n        }));\n      \n      console.log('最终生成的学生选项列表:', studentOpts);\n      if (studentOpts.length > 0) {\n        setStudentOptions(studentOpts);\n        setIsStudentSelectReady(true);\n        console.log('studentOptions 已更新，当前值:', studentOpts);\n      } else {\n        console.warn('没有生成有效的学生选项');\n        setStudentOptions([]);\n        setIsStudentSelectReady(false);\n      }\n    } catch (err) {\n      console.error('获取班级学生列表出错:', err);\n      showSnackbar('获取学生列表失败，请稍后重试', 'error');\n      setStudentOptions([]);\n      setIsStudentSelectReady(false);\n    } finally {\n      setIsStudentLoading(false);\n    }\n  }, [isStudentLoading]);\n\n  // 获取班级统计数据的函数\n  const getClassStatistics = useCallback(async (classId: string, overridePeriod?: string) => {\n    if (!classId) {\n      console.warn('无效的班级ID，无法获取统计数据');\n      return;\n    }\n    \n    // 如果是自定义日期范围但没有选择日期，提示用户\n    if (overridePeriod === 'CUSTOM' && (!dateRange[0] || !dateRange[1])) {\n      showSnackbar('请先选择自定义日期范围', 'warning');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      // 使用覆盖的period值或当前状态中的值\n      const periodToUse = overridePeriod || tabValue || currentPeriod;\n      console.log(`开始获取班级ID=${classId}的统计数据，时间段=${periodToUse}`);\n      \n      // 获取日期范围\n      let startDate, endDate;\n      switch (periodToUse) {\n        case 'WEEK':\n          [startDate, endDate] = getCurrentWeekRange();\n          break;\n        case 'MONTH':\n          [startDate, endDate] = getCurrentMonthRange();\n          break;\n        case 'CUSTOM':\n          // 对于自定义日期范围，我们使用dateRange状态的值\n          if (dateRange[0] && dateRange[1]) {\n            [startDate, endDate] = [dateRange[0], dateRange[1]];\n          } else {\n            [startDate, endDate] = getCurrentWeekRange();\n          }\n          break;\n        default:\n          [startDate, endDate] = getCurrentWeekRange();\n      }\n\n      const formattedStartDate = formatDate(startDate);\n      const formattedEndDate = formatDate(endDate);\n      \n      // 构建请求参数\n      const requestParams = {\n        classId,\n        period: periodToUse,\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      };\n      \n      console.log('统计数据请求参数:', requestParams);\n\n      // 获取班级奖励统计数据\n      const response = await rewardAPI.getRewardStatistics(requestParams);\n\n      console.log('班级统计数据响应:', response);\n      \n      let statisticsData: StatisticsData = {};\n      if (response && response.data) {\n        if (response.data.data) {\n          statisticsData = response.data.data as StatisticsData;\n        } else if (response.data.success !== undefined) {\n          statisticsData = response.data as StatisticsData;\n        }\n      }\n      \n      if (statisticsData) {\n        console.log('解析后的统计数据:', statisticsData);\n        \n        // 更新学生数量\n        setStudentCount(statisticsData.studentCount || 0);\n        \n        // 更新统计数据\n        setStatistics({\n          totalFlowers: statisticsData.totalFlowers || 0,\n          todayFlowers: statisticsData.todayFlowers || 0,\n          averageFlowers: typeof statisticsData.averageFlowers === 'number' ? statisticsData.averageFlowers : 0,\n          maxFlowers: statisticsData.maxFlowers || 0\n        });\n        \n        // 更新学生排名列表\n        if (statisticsData.studentRankings && Array.isArray(statisticsData.studentRankings)) {\n          const rankings = statisticsData.studentRankings.map((student: any, index: number) => ({\n            id: index + 1,\n            studentId: student.studentId || student.id,\n            name: student.studentName || student.name,\n            className: student.className || currentClass,\n            flowerCount: student.flowerCount || 0,\n            lastRewardDate: student.lastRewardDate || '未知'\n          }));\n          setStudentRankList(rankings);\n        }\n        \n        // 渲染图表\n        if (statisticsData.reasonDistribution) {\n          console.log('获取到原因分布数据，准备渲染图表:', statisticsData.reasonDistribution);\n          renderChart(statisticsData.reasonDistribution);\n        } else {\n          console.warn('未获取到原因分布数据');\n          renderChart({});\n        }\n      } else {\n        console.warn('未获取到有效的统计数据');\n        showSnackbar('未获取到班级统计数据', 'warning');\n        \n        // 重置数据\n        setStudentCount(0);\n        setStatistics({\n          totalFlowers: 0,\n          todayFlowers: 0,\n          averageFlowers: 0,\n          maxFlowers: 0\n        });\n        setStudentRankList([]);\n        renderChart({});\n      }\n    } catch (error) {\n      console.error('获取班级统计数据失败:', error);\n      showSnackbar('获取班级统计数据失败，请稍后重试', 'error');\n      \n      // 重置数据\n      setStudentCount(0);\n      setStatistics({\n        totalFlowers: 0,\n        todayFlowers: 0,\n        averageFlowers: 0,\n        maxFlowers: 0\n      });\n      setStudentRankList([]);\n      renderChart({});\n    } finally {\n      setLoading(false);\n    }\n  }, [renderChart, currentClass, dateRange, showSnackbar, tabValue, currentPeriod]);\n\n  // 获取班级列表函数\n  const getClassList = useCallback(async () => {\n    if (isClassLoading || initializedRef.current) {\n      console.log('班级列表正在加载中或已初始化，跳过重复请求');\n      return;\n    }\n    \n    try {\n      setIsClassLoading(true);\n      const response = await classAPI.getAllClasses();\n      console.log('班级API响应:', response);\n      \n      // 处理不同的响应数据结构\n      let classes: ClassItem[] = [];\n      if (response && response.data) {\n        if (Array.isArray(response.data)) {\n          classes = response.data as ClassItem[];\n        } else if (response.data.data && Array.isArray(response.data.data)) {\n          classes = response.data.data as ClassItem[];\n        } else if (response.data.content && Array.isArray(response.data.content)) {\n          classes = response.data.content as ClassItem[];\n        } else if (typeof response.data === 'object') {\n          console.log('响应结构不是预期的数组格式，尝试从对象中提取数据');\n          const possibleArrayFields = Object.values(response.data).filter(val => Array.isArray(val));\n          if (possibleArrayFields.length > 0) {\n            classes = possibleArrayFields[0] as ClassItem[];\n          }\n        }\n      }\n      \n      console.log('解析后的班级数据:', classes);\n      \n      if (classes && classes.length > 0) {\n        // 将班级数据转换为下拉选项格式\n        const classOpts = classes.map((cls: ClassItem) => ({\n          label: cls.name || cls.className || '未命名班级',\n          value: String(cls.id),\n        }));\n        setClassOptions(classOpts);\n        \n        // 只有在没有当前班级时才设置默认班级\n        if (!currentClassId) {\n          const firstClass = classes[0];\n          const firstClassId = String(firstClass.id);\n          const firstClassName = firstClass.name || firstClass.className || '未命名班级';\n          \n          setCurrentClass(firstClassName);\n          setCurrentClassId(firstClassId);\n          \n          // 获取该班级的学生列表和统计数据\n          console.log('初始化时获取第一个班级的学生列表和统计数据');\n          await fetchClassStudents(firstClassId);\n          await getClassStatistics(firstClassId);\n        }\n        \n        // 标记为已初始化\n        initializedRef.current = true;\n      } else {\n        console.warn('未获取到班级数据或班级列表为空');\n        showSnackbar('未找到班级数据，请先创建班级', 'warning');\n      }\n    } catch (error) {\n      console.error('获取班级列表失败:', error);\n      showSnackbar('获取班级列表失败，请检查网络连接或服务器状态', 'error');\n    } finally {\n      setIsClassLoading(false);\n    }\n  }, [currentClassId, getClassStatistics, fetchClassStudents, isClassLoading]);\n\n  // 班级选择变更处理函数\n  const handleClassChange = useCallback(async (value: string) => {\n    if (isClassLoading || isStudentLoading) {\n      console.log('正在加载中，忽略班级切换请求');\n      return;\n    }\n    \n    // 如果选择的是当前班级，不做任何操作\n    if (value === currentClassId) {\n      console.log('选择的是当前班级，无需切换');\n      return;\n    }\n    \n    console.log('开始切换班级:', value);\n    const selectedClass = classOptions.find(c => c.value === value);\n    if (selectedClass) {\n      try {\n        setIsClassLoading(true);\n        setIsStudentLoading(true);\n        \n        // 重置所有相关状态\n        setIsStudentSelectReady(false);\n        setSelectedStudent('');\n        setStudentOptions([]);\n        \n        // 更新班级信息\n        setCurrentClass(selectedClass.label);\n        setCurrentClassId(value);\n        \n        // 获取新班级的学生列表\n        console.log('开始获取新班级的学生列表');\n        await fetchClassStudents(value);\n        \n        // 获取新班级的统计数据\n        console.log('开始获取新班级的统计数据');\n        await getClassStatistics(value);\n      } catch (error) {\n        console.error('切换班级时发生错误:', error);\n        showSnackbar('切换班级失败，请稍后重试', 'error');\n      } finally {\n        setIsClassLoading(false);\n        setIsStudentLoading(false);\n      }\n    }\n  }, [isClassLoading, isStudentLoading, currentClassId, classOptions, fetchClassStudents, getClassStatistics]);\n\n  // 组件挂载和卸载的清理\n  useEffect(() => {\n    console.log('组件挂载 - 设置全局清理');\n    \n    // 组件卸载时的清理函数\n    return () => {\n      console.log('组件卸载 - 执行全局清理');\n      \n      // 确保清理图表实例\n      if (chartInstance.current) {\n        try {\n          console.log('组件卸载 - 清理图表实例');\n          chartInstance.current.dispose();\n          chartInstance.current = null;\n        } catch (error) {\n          console.error('图表实例清理失败:', error);\n        }\n      }\n      \n      // 清理任何可能的定时器\n      const timers = [];\n      // 可以在这里添加其他定时器...\n      \n      // 清理所有定时器\n      timers.forEach(timer => clearTimeout(timer));\n    };\n  }, []);\n\n  // 窗口大小变化时重新渲染图表\n  useEffect(() => {\n    const initializeData = async () => {\n      // 使用 initializedRef 来确保 getClassList 只在必要时调用\n      if (classOptions.length === 0 && !initializedRef.current) {\n        console.log('首次加载班级列表');\n        await getClassList(); // getClassList 内部会设置 initializedRef.current\n      }\n    };\n    initializeData();\n\n    const handleResize = () => {\n      // 确保图表实例存在，图表容器存在于DOM中，可见，并且有有效尺寸\n      if (chartInstance.current && \n          chartRef.current && \n          chartRef.current.offsetParent !== null && // Check for visibility\n          chartRef.current.clientWidth > 0 && \n          chartRef.current.clientHeight > 0) {\n        console.log('窗口大小变化，重新调整图表大小');\n        chartInstance.current.resize();\n      }\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // 添加一个延时调用，确保图表在初始渲染后，容器尺寸稳定时能正确调整大小\n    const timer = setTimeout(() => {\n      // 只有当图表实例已创建时才调用resize\n      if (chartInstance.current) {\n         console.log('延时调整图表大小');\n        handleResize(); // 使用与resize事件相同的处理函数\n      }\n    }, 500);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      clearTimeout(timer);\n      // 不在此处销毁图表实例。\n      // renderChart 函数在需要时会处理旧实例的销毁和新实例的创建。\n      // 组件卸载时的 useEffect (依赖项为空数组的那个) 会负责最终的图表销毁。\n    };\n  }, [getClassList, classOptions.length]); // 依赖 getClassList (用于初始化逻辑) 和 classOptions.length (同样用于初始化逻辑)\n\n  // 获取学生排名数据\n  const getStudentRankList = useCallback(async () => {\n    if (!currentClassId) return;\n    \n    setLoading(true);\n    try {\n      // 获取日期范围\n      let startDate, endDate;\n      switch (currentPeriod) {\n        case 'WEEK':\n          [startDate, endDate] = getCurrentWeekRange();\n          break;\n        case 'MONTH':\n          [startDate, endDate] = getCurrentMonthRange();\n          break;\n        case 'SEMESTER':\n          [startDate, endDate] = getCurrentSemesterRange();\n          break;\n        default:\n          [startDate, endDate] = getCurrentWeekRange();\n      }\n\n      // 获取学生排名\n      const response = await rewardAPI.getStudentRanking({\n        classId: currentClassId,\n        period: currentPeriod,\n        startDate: formatDate(startDate),\n        endDate: formatDate(endDate)\n      });\n\n      if (response && response.data && response.data.data && response.data.data.content) {\n        const rankings = response.data.data.content.map((student: any, index: number) => ({\n          id: index + 1,\n          studentId: student.studentId,\n          name: student.studentName,\n          className: student.className,\n          flowerCount: student.flowerCount,\n          lastRewardDate: student.lastRewardDate\n        }));\n        setStudentRankList(rankings);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error('获取学生排名数据失败:', error);\n      showSnackbar('获取学生排名数据失败', 'error');\n      setLoading(false);\n    }\n  }, [currentClassId, currentPeriod]);\n\n  // 清除表单错误\n  const clearFormErrors = () => {\n    setFormErrors({});\n  };\n\n  // 验证表单\n  const validateForm = (): boolean => {\n    const errors: Record<string, string> = {};\n    \n    if (!selectedStudent) {\n      errors.studentId = '请选择学生';\n    }\n    \n    if (!flowerCount || flowerCount < 1) {\n      errors.flowerCount = '请输入有效的小红花数量';\n    }\n    \n    if (!rewardReason) {\n      errors.reason = '请选择发放原因';\n    }\n    \n    if (!rewardDate) {\n      errors.rewardDate = '请选择发放日期';\n    }\n    \n    // 备注不是必填项，无需验证\n    \n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // 处理发放小红花\n  const handleRewardFlower = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    setSubmitLoading(true);\n    try {\n      // 准备请求数据\n      const rewardData = {\n        studentId: selectedStudent,\n        flowerCount,\n        reason: rewardReason,\n        rewardDate: formatDate(rewardDate || new Date()),\n        description: rewardReason, // 保持使用description存储发放原因\n        remark: rewardRemark // 使用新字段存储备注\n      };\n\n      // 发送请求\n      const response = await rewardAPI.createReward(rewardData);\n      \n      // 增强的响应处理\n      if (response && response.data) {\n        const isSuccess = response.data.success !== undefined ? response.data.success : \n                        (response.data.code >= 200 && response.data.code < 300);\n        \n        if (isSuccess) {\n          showSnackbar(`成功为学生发放 ${flowerCount} 朵小红花`);\n        \n        // 重新加载数据\n        getClassStatistics(currentClassId);\n        \n          // 重置表单并关闭对话框\n        setSelectedStudent('');\n        setFlowerCount(1);\n          setRewardReason('课堂表现优秀');\n          setRewardDate(new Date());\n          setRewardRemark(''); // 重置备注\n          setIsRewardModalVisible(false);\n          clearFormErrors();\n      } else {\n          // 显示后端返回的错误消息\n          const errorMsg = response.data.message || '发放小红花失败';\n          showSnackbar(errorMsg, 'error');\n      }\n      } else {\n        showSnackbar('发放小红花失败', 'error');\n      }\n    } catch (error: any) {\n      console.error('发放小红花失败:', error);\n      // 提取并显示详细错误信息\n      let errorMessage = '发放小红花失败';\n      if (error.response && error.response.data && error.response.data.message) {\n        errorMessage = error.response.data.message;\n      }\n      showSnackbar(errorMessage, 'error');\n    } finally {\n      setSubmitLoading(false);\n    }\n  };\n\n  // 打开发放小红花对话框\n  const showRewardModal = () => {\n    clearFormErrors();\n    formRef.current?.resetFields();\n    setSelectedStudent('');\n    setFlowerCount(1);\n    setRewardReason('课堂表现优秀');\n    setRewardDate(new Date());\n    setRewardRemark(''); // 重置备注\n    setIsRewardModalVisible(true);\n  };\n\n  // 关闭发放小红花对话框\n  const handleCancelReward = () => {\n    setIsRewardModalVisible(false);\n    clearFormErrors();\n    formRef.current?.resetFields();\n  };\n\n  // 处理表单字段变化\n  const handleFormChange = (changedValues: any, allValues: any) => {\n    // 清除对应字段的错误\n    Object.keys(changedValues).forEach(key => {\n      if (formErrors[key]) {\n        setFormErrors(prev => {\n          const newErrors = { ...prev };\n          delete newErrors[key];\n          return newErrors;\n        });\n      }\n    });\n  };\n\n  // 处理时间段变更\n  const handlePeriodChange = (period: string) => {\n    console.log(`处理时间段变更: ${period}`);\n    if (currentClassId) {\n      getClassStatistics(currentClassId, period);\n    }\n  };\n\n  // 导出数据\n  const handleExportData = async () => {\n    if (!currentClassId) {\n      showSnackbar('请先选择班级', 'warning');\n      return;\n    }\n\n    // 防止重复点击\n    if (isExporting) {\n      console.log('导出操作正在进行中，忽略重复点击');\n      return;\n    }\n\n    try {\n      setIsExporting(true);\n      setLoading(true);\n      \n      // 构建导出请求参数\n      const exportParams: any = {\n        classId: currentClassId,\n        period: tabValue // 使用tabValue代替currentPeriod\n      };\n      \n      // 如果是自定义日期范围，添加日期参数\n      if (tabValue === 'CUSTOM' && dateRange[0] && dateRange[1]) {\n        exportParams.startDate = formatDate(dateRange[0]);\n        exportParams.endDate = formatDate(dateRange[1]);\n      }\n      \n      console.log('导出数据请求参数:', exportParams);\n      \n      const response = await rewardAPI.exportRewardStatistics(exportParams);\n      \n      // 处理文件下载 - 使用更安全的方式\n      const blob = response.data; // response.data已经是blob\n      const url = window.URL.createObjectURL(blob);\n      const fileName = `小红花统计数据_${currentClass}_${dayjs().format('YYYYMMDD')}.xlsx`;\n      \n      // 使用一个独立的函数处理下载，确保即使组件卸载也能完成操作\n      const performDownload = () => {\n        try {\n          // 创建一个新的a元素，而不是重用变量\n          const downloadLink = document.createElement('a');\n          downloadLink.href = url;\n          downloadLink.download = fileName;\n          downloadLink.style.display = 'none'; // 隐藏元素\n          \n          // 添加到DOM前检查document是否可用\n          if (document && document.body) {\n            document.body.appendChild(downloadLink);\n            \n            // 触发点击并立即移除\n            try {\n              downloadLink.click();\n              // 延迟一点时间再移除元素和释放URL，防止下载未开始就清理资源\n              setTimeout(() => {\n                try {\n                  // 检查元素是否仍然存在于DOM中\n                  if (document && document.body && document.body.contains(downloadLink)) {\n                    document.body.removeChild(downloadLink);\n                  }\n                } catch (removeError) {\n                  console.error('移除下载链接元素失败:', removeError);\n                }\n                \n                try {\n      window.URL.revokeObjectURL(url);\n                } catch (revokeError) {\n                  console.error('释放Blob URL失败:', revokeError);\n                }\n              }, 300);\n            } catch (clickError) {\n              console.error('下载点击操作失败:', clickError);\n              // 确保即使点击失败也能清理资源\n              try {\n                if (document && document.body && document.body.contains(downloadLink)) {\n                  document.body.removeChild(downloadLink);\n                }\n              } catch (e) {\n                console.error('移除下载链接元素失败:', e);\n              }\n              \n              try {\n                window.URL.revokeObjectURL(url);\n              } catch (e) {\n                console.error('释放Blob URL失败:', e);\n              }\n            }\n          } else {\n            console.error('无法添加下载链接到DOM，document.body不可用');\n            window.URL.revokeObjectURL(url);\n          }\n        } catch (downloadError) {\n          console.error('执行下载操作失败:', downloadError);\n          try {\n            window.URL.revokeObjectURL(url);\n          } catch (e) {\n            // 忽略\n          }\n        }\n      };\n      \n      // 执行下载\n      performDownload();\n      \n      showSnackbar('导出成功');\n    } catch (error) {\n      console.error('导出数据失败:', error);\n      showSnackbar('导出数据失败', 'error');\n    } finally {\n      setLoading(false);\n      setIsExporting(false);\n    }\n  };\n\n  // 处理自定义日期范围查询\n  const getCustomRangeStatistics = useCallback(async (classId: string, startDate: Date, endDate: Date) => {\n    if (!classId) {\n      console.warn('无效的班级ID，无法获取统计数据');\n      return;\n    }\n    \n    setLoading(true);\n    try {\n      console.log(`开始获取班级ID=${classId}的自定义日期范围统计数据:`, {\n        startDate: formatDate(startDate),\n        endDate: formatDate(endDate)\n      });\n      \n      const formattedStartDate = formatDate(startDate);\n      const formattedEndDate = formatDate(endDate);\n      \n      // 构建请求参数\n      const requestParams = {\n        classId,\n        period: 'CUSTOM', // 使用CUSTOM表示自定义日期范围\n        startDate: formattedStartDate,\n        endDate: formattedEndDate\n      };\n      \n      console.log('自定义日期范围统计数据请求参数:', requestParams);\n\n      // 获取班级奖励统计数据\n      const response = await rewardAPI.getRewardStatistics(requestParams);\n\n      console.log('班级统计数据响应:', response);\n      \n      let statisticsData: StatisticsData = {};\n      if (response && response.data) {\n        if (response.data.data) {\n          statisticsData = response.data.data as StatisticsData;\n        } else if (response.data.success !== undefined) {\n          statisticsData = response.data as StatisticsData;\n        }\n      }\n      \n      if (statisticsData) {\n        console.log('解析后的统计数据:', statisticsData);\n        \n        // 更新学生数量\n        setStudentCount(statisticsData.studentCount || 0);\n        \n        // 更新统计数据\n        setStatistics({\n          totalFlowers: statisticsData.totalFlowers || 0,\n          todayFlowers: statisticsData.todayFlowers || 0,\n          averageFlowers: typeof statisticsData.averageFlowers === 'number' ? statisticsData.averageFlowers : 0,\n          maxFlowers: statisticsData.maxFlowers || 0\n        });\n        \n        // 更新学生排名列表\n        if (statisticsData.studentRankings && Array.isArray(statisticsData.studentRankings)) {\n          const rankings = statisticsData.studentRankings.map((student: any, index: number) => ({\n            id: index + 1,\n            studentId: student.studentId || student.id,\n            name: student.studentName || student.name,\n            className: student.className || currentClass,\n            flowerCount: student.flowerCount || 0,\n            lastRewardDate: student.lastRewardDate || '未知'\n          }));\n          setStudentRankList(rankings);\n        }\n        \n        // 渲染图表\n        if (statisticsData.reasonDistribution) {\n          renderChart(statisticsData.reasonDistribution);\n        } else {\n          console.warn('未获取到原因分布数据');\n          renderChart({});\n        }\n      } else {\n        console.warn('未获取到有效的统计数据');\n        showSnackbar('未获取到班级统计数据', 'warning');\n        \n        // 重置数据\n        setStudentCount(0);\n        setStatistics({\n          totalFlowers: 0,\n          todayFlowers: 0,\n          averageFlowers: 0,\n          maxFlowers: 0\n        });\n        setStudentRankList([]);\n        renderChart({});\n      }\n    } catch (error) {\n      console.error('获取自定义日期范围统计数据失败:', error);\n      showSnackbar('获取统计数据失败，请稍后重试', 'error');\n      \n      // 重置数据\n      setStudentCount(0);\n      setStatistics({\n        totalFlowers: 0,\n        todayFlowers: 0,\n        averageFlowers: 0,\n        maxFlowers: 0\n      });\n      setStudentRankList([]);\n      renderChart({});\n    } finally {\n      setLoading(false);\n    }\n  }, [renderChart, currentClass, showSnackbar]);\n\n  // 发放小红花对话框\n  const renderRewardModal = () => {\n  return (\n      <Dialog\n        open={isRewardModalVisible}\n        onClose={handleCancelReward}\n        maxWidth=\"md\"\n        fullWidth\n        aria-labelledby=\"reward-dialog-title\"\n      >\n        <DialogTitle id=\"reward-dialog-title\">\n          <Typography variant=\"h5\">发放小红花</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" ref={formRef} sx={{ mt: 2 }}>\n            <Stack spacing={3}>\n              <FormControl fullWidth error={!!formErrors.studentId}>\n                <InputLabel id=\"student-select-label\">学生姓名</InputLabel>\n                {isStudentSelectReady ? (\n              <Select\n                    labelId=\"student-select-label\"\n                    value={selectedStudent || ''}\n                    onChange={(e) => {\n                      const value = e.target.value as string;\n                      console.log('选择学生:', value);\n                      setSelectedStudent(value);\n                      if (formErrors.studentId) {\n                        setFormErrors(prev => {\n                          const newErrors = { ...prev };\n                          delete newErrors.studentId;\n                          return newErrors;\n                        });\n                      }\n                    }}\n                    label=\"学生姓名\"\n                  >\n                    {studentOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                ) : (\n                <Select\n                    labelId=\"student-select-label\"\n                    value=\"\"\n                    label=\"学生姓名\"\n                    disabled\n                  >\n                    <MenuItem value=\"\">加载中...</MenuItem>\n                  </Select>\n                )}\n                {formErrors.studentId && <FormHelperText>{formErrors.studentId}</FormHelperText>}\n              </FormControl>\n\n              <FormControl fullWidth error={!!formErrors.flowerCount}>\n                <TextField\n                  label=\"小红花数量\"\n                  type=\"number\"\n                  value={flowerCount}\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value);\n                    setFlowerCount(isNaN(value) ? 1 : Math.max(1, value));\n                    if (formErrors.flowerCount) {\n                      setFormErrors(prev => {\n                        const newErrors = { ...prev };\n                        delete newErrors.flowerCount;\n                        return newErrors;\n                      });\n                    }\n                  }}\n                  InputProps={{\n                    inputProps: { min: 1, max: 100 }\n                  }}\n                  variant=\"outlined\"\n                />\n                {formErrors.flowerCount && <FormHelperText>{formErrors.flowerCount}</FormHelperText>}\n              </FormControl>\n\n              <FormControl fullWidth error={!!formErrors.reason}>\n                <InputLabel id=\"reason-select-label\">发放原因</InputLabel>\n                <Select\n                  labelId=\"reason-select-label\"\n                  value={rewardReason}\n                  onChange={(e) => {\n                    setRewardReason(e.target.value);\n                    if (formErrors.reason) {\n                      setFormErrors(prev => {\n                        const newErrors = { ...prev };\n                        delete newErrors.reason;\n                        return newErrors;\n                      });\n                    }\n                  }}\n                  label=\"发放原因\"\n                >\n                  <MenuItem value=\"课堂表现优秀\">课堂表现优秀</MenuItem>\n                  <MenuItem value=\"作业完成出色\">作业完成出色</MenuItem>\n                  <MenuItem value=\"积极参与活动\">积极参与活动</MenuItem>\n                  <MenuItem value=\"其他表现\">其他表现</MenuItem>\n                </Select>\n                {formErrors.reason && <FormHelperText>{formErrors.reason}</FormHelperText>}\n              </FormControl>\n\n              {/* 添加备注输入框 */}\n              <FormControl fullWidth>\n                <TextField\n                  label=\"备注说明\"\n                  multiline\n                  rows={3}\n                  value={rewardRemark}\n                  onChange={(e) => setRewardRemark(e.target.value)}\n                  placeholder=\"请输入更详细的奖励说明（选填）\"\n                  variant=\"outlined\"\n                  helperText=\"最多200字\"\n                  inputProps={{ maxLength: 200 }}\n                />\n              </FormControl>\n\n              <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={zhCN}>\n                <FormControl fullWidth error={!!formErrors.rewardDate}>\n                <DatePicker\n                    label=\"发放日期\"\n                    value={rewardDate}\n                    onChange={(date) => {\n                      setRewardDate(date);\n                      if (formErrors.rewardDate) {\n                        setFormErrors(prev => {\n                          const newErrors = { ...prev };\n                          delete newErrors.rewardDate;\n                          return newErrors;\n                        });\n                      }\n                    }}\n                    slotProps={{\n                      textField: {\n                        fullWidth: true,\n                        variant: 'outlined',\n                        error: !!formErrors.rewardDate,\n                        helperText: formErrors.rewardDate\n                      }\n                    }}\n                  />\n                </FormControl>\n              </LocalizationProvider>\n            </Stack>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCancelReward} color=\"inherit\">\n            取消\n          </Button>\n              <Button \n                onClick={handleRewardFlower}\n            variant=\"contained\" \n            color=\"primary\"\n            disabled={submitLoading}\n            startIcon={submitLoading ? <CircularProgress size={24} /> : null}\n          >\n            发放\n              </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n\n  return (\n    <Box sx={{ padding: 3 }}>\n      {/* Snackbar消息提示 */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n      \n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      )}\n      \n      {/* 顶部班级选择和学生数量 */}\n      <Paper sx={{ p: 2, mb: 2 }} elevation={1}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <FormControl sx={{ width: 200 }}>\n            <InputLabel id=\"class-select-label\">选择班级</InputLabel>\n            <Select\n              labelId=\"class-select-label\"\n              value={currentClassId}\n              onChange={(e) => handleClassChange(e.target.value as string)}\n              label=\"选择班级\"\n              disabled={isClassLoading}\n            >\n              {classOptions.map((option) => (\n                <MenuItem key={option.value} value={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <Typography>\n            当前班级：{currentClass} | 学生人数：{studentCount}\n          </Typography>\n        </Box>\n      </Paper>\n\n      {/* 统计卡片 */}\n      <Box sx={{ display: 'grid', gridTemplateColumns: 'repeat(12, 1fr)', gap: 2, mb: 2 }}>\n        <Box sx={{ gridColumn: { xs: 'span 12', sm: 'span 6', md: 'span 3' } }}>\n          <Paper elevation={1}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">本班级小红花总数</Typography>\n              <Typography variant=\"h4\" sx={{ color: '#3f8600', mt: 1 }}>{statistics.totalFlowers}</Typography>\n            </Box>\n          </Paper>\n        </Box>\n        <Box sx={{ gridColumn: { xs: 'span 12', sm: 'span 6', md: 'span 3' } }}>\n          <Paper elevation={1}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">今日发放小红花数</Typography>\n              <Typography variant=\"h4\" sx={{ color: '#cf1322', mt: 1 }}>{statistics.todayFlowers}</Typography>\n            </Box>\n          </Paper>\n        </Box>\n        <Box sx={{ gridColumn: { xs: 'span 12', sm: 'span 6', md: 'span 3' } }}>\n          <Paper elevation={1}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">平均每人小红花数</Typography>\n              <Typography variant=\"h4\" sx={{ color: '#1890ff', mt: 1 }}>{statistics.averageFlowers.toFixed(1)}</Typography>\n            </Box>\n          </Paper>\n        </Box>\n        <Box sx={{ gridColumn: { xs: 'span 12', sm: 'span 6', md: 'span 3' } }}>\n          <Paper elevation={1}>\n            <Box sx={{ p: 2 }}>\n              <Typography variant=\"subtitle2\" color=\"textSecondary\">最多小红花数(学生)</Typography>\n              <Typography variant=\"h4\" sx={{ color: '#fa8c16', mt: 1 }}>{statistics.maxFlowers}</Typography>\n            </Box>\n          </Paper>\n        </Box>\n      </Box>\n\n        {/* 学生小红花排行榜 */}\n      <Paper sx={{ p: 2, mb: 2 }} elevation={1}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h6\">学生小红花排行榜</Typography>\n          <Box>\n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              onClick={showRewardModal}\n              startIcon={<LocalFloristIcon />}\n              sx={{ mr: 1 }}\n            >\n              发放小红花\n            </Button>\n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              onClick={handleExportData}\n              startIcon={<DownloadIcon />}\n              sx={{ mr: 1 }}\n            >\n              导出数据\n            </Button>\n            <Button \n              variant=\"outlined\" \n              onClick={() => {\n                if (currentClassId) {\n                  if (tabValue === 'CUSTOM' && dateRange[0] && dateRange[1]) {\n                    // 自定义日期范围查询\n                    console.log('刷新：使用自定义日期范围查询');\n                    getCustomRangeStatistics(currentClassId, dateRange[0], dateRange[1]);\n                  } else {\n                    // 使用标准时间段查询\n                    console.log('刷新：使用标准时间段查询:', tabValue);\n                    getClassStatistics(currentClassId, tabValue);\n                  }\n                } else {\n                  showSnackbar('请先选择班级', 'warning');\n                }\n              }}\n              startIcon={<RefreshIcon />}\n            >\n              刷新\n            </Button>\n          </Box>\n        </Box>\n        \n          <Tabs \n          value={tabValue} \n          onChange={(e, newValue) => {\n            console.log(`切换到时间段: ${newValue}`);\n            // 如果选择了自定义日期范围，设置标志位\n            if (newValue === 'CUSTOM') {\n              setIsCustomDateRange(true);\n              setTabValue(newValue);\n              setCurrentPeriod(newValue);\n              // 如果已经选择了日期范围，则执行查询\n              if (dateRange[0] && dateRange[1] && currentClassId) {\n                getCustomRangeStatistics(currentClassId, dateRange[0], dateRange[1]);\n              }\n            } else {\n              setIsCustomDateRange(false);\n              // 先更新UI状态\n              setTabValue(newValue);\n              // 使用新值直接获取数据，而不是先更新currentPeriod状态\n              if (currentClassId) {\n                getClassStatistics(currentClassId, newValue);\n              }\n              // 最后更新currentPeriod状态以供其他地方使用\n              setCurrentPeriod(newValue);\n            }\n          }}\n          sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}\n        >\n          <Tab value=\"WEEK\" label=\"本周\" />\n          <Tab value=\"MONTH\" label=\"本月\" />\n          <Tab value=\"CUSTOM\" label=\"自定义日期\" />\n        </Tabs>\n        \n        {/* 添加自定义日期范围选择器 */}\n        {isCustomDateRange && (\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2, mt: 2 }}>\n            <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={zhCN}>\n              <DatePicker\n                label=\"开始日期\"\n                value={dateRange[0]}\n                onChange={(date) => {\n                  setDateRange([date, dateRange[1]]);\n                }}\n                slotProps={{ textField: { size: 'small', sx: { mr: 2 } } }}\n              />\n              <DatePicker\n                label=\"结束日期\"\n                value={dateRange[1]}\n                onChange={(date) => {\n                  setDateRange([dateRange[0], date]);\n                }}\n                slotProps={{ textField: { size: 'small', sx: { mr: 2 } } }}\n              />\n              <Button \n                variant=\"contained\" \n                color=\"primary\"\n                disabled={!dateRange[0] || !dateRange[1]}\n                onClick={() => {\n                  if (dateRange[0] && dateRange[1] && currentClassId) {\n                    // 设置Tab值和当前周期为CUSTOM\n                    setTabValue('CUSTOM');\n                    setCurrentPeriod('CUSTOM');\n                    // 使用自定义日期范围获取数据\n                    getCustomRangeStatistics(currentClassId, dateRange[0], dateRange[1]);\n                  } else {\n                    showSnackbar('请选择完整的日期范围', 'warning');\n                  }\n                }}\n              >\n                查询\n              </Button>\n            </LocalizationProvider>\n          </Box>\n        )}\n        \n        <TableContainer>\n          <Table stickyHeader aria-label=\"学生排名表格\">\n            <TableHead>\n              <TableRow>\n                <TableCell>排名</TableCell>\n                <TableCell>学生姓名</TableCell>\n                <TableCell>班级</TableCell>\n                <TableCell>小红花数量</TableCell>\n                <TableCell>最近获得日期</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {studentRankList.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={5} align=\"center\">\n                    暂无数据\n                  </TableCell>\n                </TableRow>\n              ) : (\n                studentRankList.map((student) => (\n                  <TableRow key={student.id}>\n                    <TableCell>{student.id}</TableCell>\n                    <TableCell>{student.name}</TableCell>\n                    <TableCell>{student.className}</TableCell>\n                    <TableCell>\n                      <Typography sx={{ color: '#1890ff', fontWeight: 'bold' }}>\n                        {student.flowerCount}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{student.lastRewardDate}</TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n\n        {/* 小红花统计分析 */}\n      <Paper sx={{ p: 2 }} elevation={1}>\n        <Typography variant=\"h6\" sx={{ mb: 2 }}>小红花统计分析</Typography>\n        <Box\n          sx={{ // Outer container for positioning\n            position: 'relative', // For absolute positioning of loader\n            height: 400,\n            width: '100%',\n          }}\n        >\n          {/* Loader: absolutely positioned on top */}\n          {loading && (\n            <Box\n              sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: 'rgba(255, 255, 255, 0.7)', // Optional: semi-transparent overlay for better UX\n                zIndex: 10, // Ensure it's on top\n              }}\n            >\n              <CircularProgress />\n            </Box>\n          )}\n          {/* ECharts container: always present, loader is overlaid */}\n          <Box\n            ref={chartRef}\n            sx={{\n              height: '100%', // Takes full height of parent\n              width: '100%',  // Takes full width of parent\n            }}\n          />\n        </Box>\n      </Paper>\n\n      {/* 渲染发放小红花对话框 */}\n      {renderRewardModal()}\n    </Box>\n  );\n};\n\nexport default RewardManagement; "],"names":["directAxios","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","concat","error","Promise","reject","getAllClasses","async","console","log","response","get","状态码","status","数据","data","请求头","searchClasses","query","createClass","post","classInfo","updateClass","id","put","deleteClass","delete","assignHeadTeacher","classId","teacherId","getStudentSelectOptions","createSvgIcon","_jsx","d","getMenuItemUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","memoTheme","_ref","theme","_objectSpread","typography","body1","display","justifyContent","alignItems","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","backgroundColor","vars","palette","action","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","disabled","opacity","disabledOpacity","dividerClasses","marginTop","spacing","marginBottom","inset","marginLeft","listItemTextClasses","paddingLeft","listItemIconClasses","minWidth","variants","_ref2","style","paddingRight","_ref3","borderBottom","backgroundClip","_ref4","breakpoints","up","_ref5","body2","fontSize","React","inProps","ref","useDefaultProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","_objectWithoutProperties","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","undefined","Provider","value","children","clsx","formatDateTime","dateTime","Array","isArray","year","month","day","hour","minute","String","padStart","date","Date","isNaN","getTime","getFullYear","getMonth","getDate","hours","getHours","minutes","getMinutes","formatDate","dateObj","getCurrentWeekRange","now","dayOfWeek","getDay","firstDay","setDate","setHours","lastDay","getCurrentMonthRange","getCurrentSemesterRange","getListItemTextUtilityClass","getListItemIconUtilityClass","API_URL","STATISTICS_API_URL","getRewardStatistics","period","startDate","endDate","params","url","queryParams","push","length","join","RewardManagement","loading","setLoading","useState","isClassLoading","setIsClassLoading","isStudentLoading","setIsStudentLoading","isStudentSelectReady","setIsStudentSelectReady","currentClass","setCurrentClass","currentClassId","setCurrentClassId","studentCount","setStudentCount","classOptions","setClassOptions","statistics","setStatistics","totalFlowers","todayFlowers","averageFlowers","maxFlowers","currentPeriod","setCurrentPeriod","studentRankList","setStudentRankList","studentOptions","setStudentOptions","selectedStudent","setSelectedStudent","flowerCount","setFlowerCount","rewardReason","setRewardReason","rewardDate","setRewardDate","isRewardModalVisible","setIsRewardModalVisible","submitLoading","setSubmitLoading","formErrors","setFormErrors","tabValue","setTabValue","rewardRemark","setRewardRemark","snackbar","setSnackbar","open","message","severity","initializedRef","useRef","formRef","chartRef","chartInstance","dateRange","setDateRange","isCustomDateRange","setIsCustomDateRange","isExporting","setIsExporting","showSnackbar","arguments","handleCloseSnackbar","prev","renderChart","useCallback","reasonDistribution","warn","document","body","contains","containerWidth","clientWidth","containerHeight","clientHeight","dispose","disposeError","chart","echarts","pieData","Object","entries","map","option","tooltip","trigger","legend","top","left","series","type","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","emphasis","fontWeight","labelLine","setOption","initError","e","fetchClassStudents","studentsResponse","classAPI","Error","students","studentOpts","filter","student","Boolean","studentNumber","toString","err","getClassStatistics","overridePeriod","periodToUse","formattedStartDate","requestParams","rewardAPI","statisticsData","success","studentRankings","rankings","index","studentId","studentName","lastRewardDate","getClassList","content","possibleArrayFields","values","val","classOpts","cls","firstClass","firstClassId","firstClassName","handleClassChange","selectedClass","find","c","useEffect","forEach","timer","clearTimeout","initializeData","handleResize","offsetParent","resize","window","addEventListener","setTimeout","removeEventListener","page","size","clearFormErrors","handleRewardFlower","validateForm","errors","reason","keys","rewardData","description","remark","code","errorMsg","errorMessage","handleCancelReward","_formRef$current2","resetFields","getCustomRangeStatistics","_jsxs","Box","sx","padding","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","width","mt","CircularProgress","Paper","p","mb","elevation","FormControl","InputLabel","Select","labelId","onChange","target","MenuItem","Typography","gridTemplateColumns","gap","gridColumn","xs","sm","md","variant","color","toFixed","Button","onClick","showRewardModal","_formRef$current","startIcon","LocalFloristIcon","mr","exportParams","responseType","blob","URL","createObjectURL","fileName","dayjs","format","performDownload","downloadLink","createElement","href","download","appendChild","click","removeChild","removeError","revokeObjectURL","revokeError","clickError","downloadError","DownloadIcon","RefreshIcon","Tabs","newValue","Tab","LocalizationProvider","dateAdapter","AdapterDateFns","adapterLocale","zhCN","DatePicker","slotProps","textField","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","colSpan","align","height","right","bottom","zIndex","Dialog","maxWidth","fullWidth","DialogTitle","DialogContent","Stack","newErrors","FormHelperText","TextField","parseInt","Math","max","InputProps","inputProps","min","multiline","rows","placeholder","helperText","maxLength","DialogActions"],"sourceRoot":""}