{"version":3,"file":"static/js/489.2dd8baf2.chunk.js","mappings":"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","sources":["api/student.ts","api/class.ts","views/StudentManagement.tsx"],"sourcesContent":["import axiosInstance from './axios';\r\nimport axios from 'axios';\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface Student {\r\n  id?: number;\r\n  name: string;\r\n  studentNumber: string;\r\n  gender: string;\r\n  birthday?: string;\r\n  birthDate?: string;\r\n  parentName?: string;\r\n  parentPhone?: string;\r\n  address?: string;\r\n  notes?: string;\r\n  classInfo?: any;\r\n  classId?: number;\r\n  className?: string;\r\n}\r\n\r\ninterface PagedResponse<T> {\r\n  content: T[];\r\n  page: number;\r\n  size: number;\r\n  totalElements: number;\r\n  totalPages: number;\r\n  last: boolean;\r\n  number: number;\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * 获取所有学生\r\n * @returns Promise\r\n */\r\nexport const getAllStudents = async () => {\r\n  return await directAxios.get('/api/students');\r\n};\r\n\r\n/**\r\n * 分页获取所有学生\r\n * @param page 页码\r\n * @param size 每页大小\r\n * @returns Promise\r\n */\r\nexport const getAllStudentsPaged = async (page: number = 0, size: number = 10) => {\r\n  console.log('开始获取学生分页数据，直接请求后端');\r\n  return await directAxios.get(`/api/students/paged?page=${page}&size=${size}`);\r\n};\r\n\r\n/**\r\n * 根据班级ID获取学生\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getStudentsByClass = async (classId: number) => {\r\n  return await directAxios.get(`/api/students/class/${classId}`);\r\n};\r\n\r\n/**\r\n * 分页获取班级学生\r\n * @param classId 班级ID\r\n * @param page 页码\r\n * @param size 每页大小\r\n * @returns Promise\r\n */\r\nexport const getStudentsByClassPaged = async (classId: number, page: number = 0, size: number = 10) => {\r\n  return await directAxios.get(`/api/students/class/${classId}/paged?page=${page}&size=${size}`);\r\n};\r\n\r\n/**\r\n * 根据姓名搜索学生\r\n * @param name 学生姓名\r\n * @returns Promise\r\n */\r\nexport const searchStudents = async (name: string) => {\r\n  return await directAxios.get(`/api/students/search?name=${name}`);\r\n};\r\n\r\n/**\r\n * 分页搜索学生\r\n * @param name 学生姓名\r\n * @param page 页码\r\n * @param size 每页大小\r\n * @returns Promise\r\n */\r\nexport const searchStudentsPaged = async (name: string, page: number = 0, size: number = 10) => {\r\n  return await directAxios.get(`/api/students/search/paged?name=${name}&page=${page}&size=${size}`);\r\n};\r\n\r\n/**\r\n * 根据ID获取学生\r\n * @param id 学生ID\r\n * @returns Promise\r\n */\r\nexport const getStudentById = async (id: number) => {\r\n  return await directAxios.get(`/api/students/${id}`);\r\n};\r\n\r\n/**\r\n * 根据学号获取学生\r\n * @param studentNumber 学号\r\n * @returns Promise\r\n */\r\nexport const getStudentByNumber = async (studentNumber: string) => {\r\n  return await directAxios.get(`/api/students/number/${studentNumber}`);\r\n};\r\n\r\n/**\r\n * 创建学生\r\n * @param student 学生信息\r\n * @returns Promise\r\n */\r\nexport const createStudent = async (student: Student) => {\r\n  return await directAxios.post('/api/students', student);\r\n};\r\n\r\n/**\r\n * 更新学生信息\r\n * @param id 学生ID\r\n * @param student 学生信息\r\n * @returns Promise\r\n */\r\nexport const updateStudent = async (id: number, student: Student) => {\r\n  return await directAxios.put(`/api/students/${id}`, student);\r\n};\r\n\r\n/**\r\n * 删除学生\r\n * @param id 学生ID\r\n * @returns Promise\r\n */\r\nexport const deleteStudent = async (id: number) => {\r\n  return await directAxios.delete(`/api/students/${id}`);\r\n};\r\n\r\n/**\r\n * 分配学生到班级\r\n * @param studentId 学生ID\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const assignStudentToClass = async (studentId: number, classId: number) => {\r\n  return await directAxios.put(`/api/students/${studentId}/assign/${classId}`);\r\n};\r\n\r\n/**\r\n * 批量导入学生\r\n * @param formData 包含文件和班级ID的表单数据\r\n * @returns Promise\r\n */\r\nexport const batchImportStudents = async (formData: FormData) => {\r\n  return await directAxios.post('/api/students/batch', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  });\r\n}; ","import axiosInstance from './axios';\r\nimport axios from 'axios';\r\n\r\ninterface ClassInfo {\r\n  id?: number;\r\n  name: string;\r\n  className?: string;\r\n  grade: string;\r\n  headTeacher?: any;\r\n  studentCount?: number;\r\n  description?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n}\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * 获取所有班级\r\n * @returns Promise\r\n */\r\nexport const getAllClasses = async () => {\r\n  try {\r\n    console.log('开始获取所有班级数据');\r\n    \r\n    // 检查认证令牌\r\n    const token = localStorage.getItem('token');\r\n    console.log('当前认证令牌:', token ? '有效' : '无效或不存在');\r\n\r\n    // 直接请求后端\r\n    console.log('直接请求后端 http://124.70.74.246:8081/api/classes');\r\n    const response = await directAxios.get('/api/classes');\r\n    console.log('获取班级成功:', response);\r\n    return response;\r\n  } catch (error: any) {\r\n    console.error('获取所有班级失败:', error);\r\n    console.error('错误详情:', error.response ? {\r\n      状态码: error.response.status,\r\n      数据: error.response.data,\r\n      请求头: error.response.headers\r\n    } : '无响应详情');\r\n    \r\n    // 如果是认证错误，提示用户\r\n    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n      console.error('认证失败，请确保已登录并有权限访问班级信息');\r\n    }\r\n    \r\n    throw error; // 将错误抛出，由调用方处理\r\n  }\r\n};\r\n\r\n/**\r\n * 根据ID获取班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassById = async (id: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 搜索班级\r\n * @param query 搜索关键词\r\n * @returns Promise\r\n */\r\nexport const searchClasses = async (query: string) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/search?query=${query}`);\r\n  } catch (error) {\r\n    console.error(`搜索班级\"${query}\"失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 根据班主任ID获取班级\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const getClassesByTeacher = async (teacherId: number) => {\r\n  try {\r\n    return await directAxios.get(`/api/classes/teacher/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`获取班主任ID=${teacherId}的班级失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 创建班级\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const createClass = async (classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.post('/api/classes', classInfo);\r\n  } catch (error) {\r\n    console.error('创建班级失败:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 更新班级信息\r\n * @param id 班级ID\r\n * @param classInfo 班级信息\r\n * @returns Promise\r\n */\r\nexport const updateClass = async (id: number, classInfo: ClassInfo) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${id}`, classInfo);\r\n  } catch (error) {\r\n    console.error(`更新班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 删除班级\r\n * @param id 班级ID\r\n * @returns Promise\r\n */\r\nexport const deleteClass = async (id: number) => {\r\n  try {\r\n    return await directAxios.delete(`/api/classes/${id}`);\r\n  } catch (error) {\r\n    console.error(`删除班级ID=${id}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 分配班主任\r\n * @param classId 班级ID\r\n * @param teacherId 班主任ID\r\n * @returns Promise\r\n */\r\nexport const assignHeadTeacher = async (classId: number, teacherId: number) => {\r\n  try {\r\n    return await directAxios.put(`/api/classes/${classId}/assign/${teacherId}`);\r\n  } catch (error) {\r\n    console.error(`为班级ID=${classId}分配班主任ID=${teacherId}失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生列表\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getClassStudents = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生列表`);\r\n    return await directAxios.get(`/api/classes/${classId}/students`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生列表失败:`, error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取班级学生下拉选项\r\n * @param classId 班级ID\r\n * @returns Promise\r\n */\r\nexport const getStudentSelectOptions = async (classId: string | number) => {\r\n  try {\r\n    console.log(`开始获取班级ID=${classId}的学生下拉选项`);\r\n    return await directAxios.get(`/api/students/class/${classId}/select`);\r\n  } catch (error) {\r\n    console.error(`获取班级ID=${classId}的学生下拉选项失败:`, error);\r\n    throw error;\r\n  }\r\n}; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  GridLegacy as Grid,\r\n  Tooltip,\r\n  InputAdornment,\r\n  Alert,\r\n  Snackbar,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  styled,\r\n  FormHelperText,\r\n  CircularProgress,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormLabel,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Search as SearchIcon,\r\n  Clear as ClearIcon,\r\n  Refresh as RefreshIcon,\r\n  CloudUpload as CloudUploadIcon,\r\n  Download as DownloadIcon\r\n} from '@mui/icons-material';\r\nimport * as studentAPI from '../api/student';\r\nimport * as classAPI from '../api/class';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// 样式化组件\r\nconst PageHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  marginBottom: theme.spacing(3),\r\n}));\r\n\r\nconst ActionButtonsContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  gap: theme.spacing(1),\r\n}));\r\n\r\nconst UploadArea = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  border: `2px dashed ${theme.palette.primary.main}`,\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(3),\r\n  marginTop: theme.spacing(2),\r\n  backgroundColor: theme.palette.background.default,\r\n  cursor: 'pointer',\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  }\r\n}));\r\n\r\n// 学生类型定义\r\ninterface Student {\r\n  id: number;\r\n  name: string;\r\n  studentNumber: string;\r\n  gender: string;\r\n  birthDate: string;\r\n  classInfo: any;\r\n  classId?: number;\r\n  className?: string;\r\n  parentName?: string;\r\n  parentPhone?: string;\r\n  address?: string;\r\n  notes?: string;\r\n}\r\n\r\n// 班级类型定义\r\ninterface Class {\r\n  id: number;\r\n  name: string;\r\n  grade?: string;\r\n}\r\n\r\n// 添加一个统一的高度样式\r\nconst commonHeight = '40px';\r\n\r\n// 学生管理组件\r\nconst StudentManagement: React.FC = () => {\r\n  // 状态\r\n  const { user } = useAuth();\r\n  // 判断用户是否为教师角色（只读权限）\r\n  const isTeacherRole = user?.role === 'ROLE_TEACHER';\r\n  \r\n  const [students, setStudents] = useState<Student[]>([]);\r\n  const [classes, setClasses] = useState<Class[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedClass, setSelectedClass] = useState<number | ''>('');\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogMode, setDialogMode] = useState<'add' | 'edit'>('add');\r\n  const [currentStudent, setCurrentStudent] = useState<Student | null>(null);\r\n  const [formData, setFormData] = useState<any>({\r\n    name: '',\r\n    studentNumber: '',\r\n    gender: 'MALE',\r\n    birthday: '',\r\n    classId: '',\r\n    parentName: '',\r\n    parentPhone: '',\r\n    address: '',\r\n    notes: '',\r\n  });\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success' as 'success' | 'info' | 'warning' | 'error'\r\n  });\r\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({});\r\n  \r\n  // 删除确认对话框状态\r\n  const [confirmDialog, setConfirmDialog] = useState({\r\n    open: false,\r\n    title: '',\r\n    content: '',\r\n    onConfirm: () => {}\r\n  });\r\n  \r\n  // 批量导入相关状态\r\n  const [importDialogVisible, setImportDialogVisible] = useState(false);\r\n  const [importLoading, setImportLoading] = useState(false);\r\n  const [uploadFile, setUploadFile] = useState<File | null>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // 获取学生列表\r\n  const fetchStudents = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response;\r\n      \r\n      if (selectedClass) {\r\n        response = await studentAPI.getStudentsByClassPaged(Number(selectedClass), page, rowsPerPage);\r\n      } else if (searchTerm) {\r\n        response = await studentAPI.searchStudentsPaged(searchTerm, page, rowsPerPage);\r\n      } else {\r\n        response = await studentAPI.getAllStudentsPaged(page, rowsPerPage);\r\n      }\r\n      \r\n      // 处理返回的分页数据\r\n      const pagedData = response?.data;\r\n      \r\n      if (!pagedData || !pagedData.content) {\r\n        setSnackbar({\r\n          open: true,\r\n          message: '服务器返回的数据格式不正确',\r\n          severity: 'error',\r\n        });\r\n        setStudents([]);\r\n        setTotalCount(0);\r\n        return;\r\n      }\r\n      \r\n      // 处理学生数据，确保班级信息正确\r\n      const processedStudents = pagedData.content.map((student: any) => {\r\n        // 处理班级信息\r\n        let className = '无班级';\r\n        let classId: number | undefined = undefined;\r\n        \r\n        if (student.classInfo) {\r\n          if (typeof student.classInfo === 'object') {\r\n            className = student.classInfo.name || '未知班级';\r\n            classId = student.classInfo.id;\r\n          } else if (typeof student.classInfo === 'number') {\r\n            const foundClass = Array.isArray(classes) ? classes.find(cls => cls.id === student.classInfo) : null;\r\n            if (foundClass) {\r\n              className = foundClass.name;\r\n              classId = foundClass.id;\r\n            } else {\r\n              className = `班级ID: ${student.classInfo}`;\r\n              classId = student.classInfo;\r\n            }\r\n          }\r\n        }\r\n        \r\n        return {\r\n          ...student,\r\n          className,\r\n          classId\r\n        };\r\n      });\r\n      \r\n      setStudents(processedStudents);\r\n      setTotalCount(pagedData.totalElements || 0);\r\n    } catch (error: any) {\r\n      console.error('获取学生列表失败:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: error.response?.data?.message || '获取学生列表失败',\r\n        severity: 'error',\r\n      });\r\n      setStudents([]);\r\n      setTotalCount(0);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 获取班级列表\r\n  const fetchClasses = async () => {\r\n    try {\r\n      const response = await classAPI.getAllClasses();\r\n      if (response && response.data) {\r\n        setClasses(response.data || []);\r\n      } else {\r\n        console.error('获取班级列表返回空数据');\r\n        setClasses([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('获取班级列表失败:', error);\r\n      setClasses([]);\r\n    }\r\n  };\r\n\r\n  // 初始加载\r\n  useEffect(() => {\r\n    fetchClasses();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, [page, rowsPerPage, selectedClass]);\r\n\r\n  // 处理搜索\r\n  const handleSearch = () => {\r\n    setPage(0);\r\n    fetchStudents();\r\n  };\r\n\r\n  // 清除搜索\r\n  const handleClearSearch = () => {\r\n    setSearchTerm('');\r\n    setPage(0);\r\n    fetchStudents();\r\n  };\r\n  \r\n  // 处理班级筛选变化\r\n  const handleClassChange = (event: any) => {\r\n    setSelectedClass(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  // 处理页面变化\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // 处理每页行数变化\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // 打开添加学生对话框\r\n  const handleAddStudent = () => {\r\n    if (isTeacherRole) {\r\n      showSnackbar('教师角色无权限添加学生', 'warning');\r\n      return;\r\n    }\r\n    \r\n    setDialogMode('add');\r\n    setFormData({\r\n      name: '',\r\n      studentNumber: '',\r\n      gender: 'MALE',\r\n      birthday: '',\r\n      classId: '',\r\n      parentName: '',\r\n      parentPhone: '',\r\n      address: '',\r\n      notes: '',\r\n    });\r\n    setFormErrors({});\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  // 打开编辑学生对话框\r\n  const handleEdit = (student: Student) => {\r\n    if (isTeacherRole) {\r\n      showSnackbar('教师角色无权限编辑学生', 'warning');\r\n      return;\r\n    }\r\n    \r\n    setDialogMode('edit');\r\n    setCurrentStudent(student);\r\n    \r\n    // 填充表单数据\r\n    setFormData({\r\n      name: student.name || '',\r\n      studentNumber: student.studentNumber || '',\r\n      gender: student.gender || 'MALE',\r\n      birthday: student.birthDate || '',\r\n      classId: student.classId || '',\r\n      parentName: student.parentName || '',\r\n      parentPhone: student.parentPhone || '',\r\n      address: student.address || '',\r\n      notes: student.notes || '',\r\n    });\r\n    \r\n    setFormErrors({});\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  // 关闭对话框\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  // 处理表单输入变化\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (name) {\r\n      setFormData((prev: any) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 表单验证\r\n  const validateForm = () => {\r\n    const errors: Record<string, string> = {};\r\n    \r\n    if (!formData.name?.trim()) {\r\n      errors.name = '请输入学生姓名';\r\n    }\r\n    \r\n    if (!formData.studentNumber?.trim()) {\r\n      errors.studentNumber = '请输入学号';\r\n    }\r\n    \r\n    if (!formData.gender) {\r\n      errors.gender = '请选择性别';\r\n    }\r\n    \r\n    if (!formData.birthday) {\r\n      errors.birthday = '请选择出生日期';\r\n    }\r\n    \r\n    if (!formData.classId) {\r\n      errors.classId = '请选择班级';\r\n    }\r\n    \r\n    if (formData.parentPhone && !/^1[3-9]\\d{9}$/.test(formData.parentPhone)) {\r\n      errors.parentPhone = '请输入有效的手机号码';\r\n    }\r\n    \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  // 显示提示信息\r\n  const showSnackbar = (message: string, severity: 'success' | 'info' | 'warning' | 'error' = 'success') => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n\r\n  // 关闭提示信息\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(prev => ({\r\n      ...prev,\r\n      open: false\r\n    }));\r\n  };\r\n\r\n  // 保存学生\r\n  const handleSaveStudent = async () => {\r\n    if (!validateForm()) return;\r\n    setLoading(true);\r\n    try {\r\n      // 创建要发送的数据对象\r\n      const studentData = {\r\n        ...formData,\r\n        birthDate: formData.birthday, // 将birthday字段映射为birthDate\r\n      };\r\n      \r\n      // 如果选择了班级，添加classInfo对象\r\n      if (formData.classId) {\r\n        studentData.classInfo = { id: formData.classId };\r\n      }\r\n      \r\n      if (dialogMode === 'add') {\r\n        await studentAPI.createStudent(studentData);\r\n        showSnackbar('添加学生成功', 'success');\r\n      } else if (dialogMode === 'edit' && currentStudent) {\r\n        await studentAPI.updateStudent(currentStudent.id, studentData);\r\n        showSnackbar('更新学生信息成功', 'success');\r\n      }\r\n      \r\n      handleCloseDialog();\r\n      fetchStudents();\r\n    } catch (error: any) {\r\n      showSnackbar(error.response?.data?.message || '保存学生信息失败', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 打开确认对话框\r\n  const openConfirmDialog = (title: string, content: string, onConfirm: () => void) => {\r\n    setConfirmDialog({\r\n      open: true,\r\n      title,\r\n      content,\r\n      onConfirm\r\n    });\r\n  };\r\n\r\n  // 关闭确认对话框\r\n  const closeConfirmDialog = () => {\r\n    setConfirmDialog(prev => ({\r\n      ...prev,\r\n      open: false\r\n    }));\r\n  };\r\n\r\n  // 删除学生\r\n  const handleDelete = async (id: number) => {\r\n    if (isTeacherRole) {\r\n      showSnackbar('教师角色无权限删除学生', 'warning');\r\n      return;\r\n    }\r\n    \r\n    // 查找要删除的学生\r\n    const studentToDelete = students.find(student => student.id === id);\r\n    if (!studentToDelete) return;\r\n    \r\n    openConfirmDialog(\r\n      '删除学生',\r\n      `确定要删除学生\"${studentToDelete.name}\"吗？此操作不可撤销。`,\r\n      async () => {\r\n        setLoading(true);\r\n        try {\r\n          await studentAPI.deleteStudent(id);\r\n          showSnackbar('删除学生成功', 'success');\r\n          fetchStudents();\r\n        } catch (error: any) {\r\n          showSnackbar(error.response?.data?.message || '删除学生失败', 'error');\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  // 批量导入相关函数\r\n  const handleBatchImport = () => {\r\n    if (isTeacherRole) {\r\n      showSnackbar('教师角色无权限批量导入学生', 'warning');\r\n      return;\r\n    }\r\n    \r\n    setImportDialogVisible(true);\r\n    setUploadFile(null);\r\n  };\r\n  \r\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (files && files.length > 0) {\r\n      setUploadFile(files[0]);\r\n    }\r\n  };\r\n  \r\n  const handleFileDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    const files = event.dataTransfer.files;\r\n    if (files && files.length > 0) {\r\n      // 检查文件类型\r\n      if (files[0].type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n        setUploadFile(files[0]);\r\n      } else {\r\n        showSnackbar('只能上传.xlsx格式的Excel文件', 'warning');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  };\r\n  \r\n  const confirmImport = async () => {\r\n    if (!uploadFile) {\r\n      showSnackbar('请先选择文件', 'warning');\r\n      return;\r\n    }\r\n    \r\n    setImportLoading(true);\r\n    \r\n    try {\r\n      // 创建表单数据\r\n      const formData = new FormData();\r\n      formData.append('file', uploadFile);\r\n      \r\n      // 添加班级ID\r\n      if (selectedClass) {\r\n        formData.append('classId', selectedClass.toString());\r\n      }\r\n      \r\n      const response = await studentAPI.batchImportStudents(formData);\r\n      \r\n      showSnackbar(`导入成功，共导入 ${response.data.length || 0} 名学生`, 'success');\r\n      \r\n      setImportDialogVisible(false);\r\n      fetchStudents();\r\n    } catch (error: any) {\r\n      showSnackbar(error.response?.data?.message || '导入失败', 'error');\r\n    } finally {\r\n      setImportLoading(false);\r\n    }\r\n  };\r\n  \r\n  const downloadTemplate = () => {\r\n    // 创建一个临时链接用于下载\r\n    const link = document.createElement('a');\r\n    link.href = '/templates/学生导入模版.xlsx'; // 修正模板文件路径\r\n    link.download = '学生导入模版.xlsx';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ padding: 3 }}>\r\n      <PageHeader>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          学生管理\r\n        </Typography>\r\n        {!isTeacherRole && (\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={<AddIcon />}\r\n              onClick={handleAddStudent}\r\n            >\r\n              添加学生\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              startIcon={<CloudUploadIcon />}\r\n              onClick={handleBatchImport}\r\n            >\r\n              批量导入\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </PageHeader>\r\n\r\n      <Box sx={{ display: 'flex', gap: 2, mb: 3, flexWrap: 'wrap', alignItems: 'center' }}>\r\n        <FormControl sx={{ minWidth: 200 }} size=\"small\">\r\n          <InputLabel id=\"class-select-label\">按班级筛选</InputLabel>\r\n          <Select\r\n            labelId=\"class-select-label\"\r\n            value={selectedClass}\r\n            label=\"按班级筛选\"\r\n            onChange={handleClassChange}\r\n            sx={{ height: commonHeight }}\r\n          >\r\n            <MenuItem value=\"\">全部班级</MenuItem>\r\n            {Array.isArray(classes) && classes.map((classItem: Class) => (\r\n              <MenuItem key={classItem.id} value={classItem.id}>\r\n                {classItem.name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        \r\n        <TextField\r\n          label=\"搜索学生姓名\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\r\n          sx={{ minWidth: 250 }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n            endAdornment: searchTerm && (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton size=\"small\" onClick={handleClearSearch}>\r\n                  <ClearIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n            style: { height: commonHeight }\r\n          }}\r\n        />\r\n        \r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<SearchIcon />}\r\n          onClick={handleSearch}\r\n          sx={{ height: commonHeight }}\r\n        >\r\n          搜索\r\n        </Button>\r\n        \r\n        <Button\r\n          variant=\"outlined\"\r\n          startIcon={<RefreshIcon />}\r\n          onClick={() => fetchStudents()}\r\n          sx={{ height: commonHeight }}\r\n        >\r\n          刷新\r\n        </Button>\r\n      </Box>\r\n\r\n      <TableContainer component={Paper} sx={{ mb: 3 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>学号</TableCell>\r\n              <TableCell>姓名</TableCell>\r\n              <TableCell>性别</TableCell>\r\n              <TableCell>班级</TableCell>\r\n              <TableCell>出生日期</TableCell>\r\n              <TableCell>家庭住址</TableCell>\r\n              <TableCell>家长姓名</TableCell>\r\n              <TableCell>家长电话</TableCell>\r\n              <TableCell>备注</TableCell>\r\n              <TableCell align=\"center\">操作</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loading && (\r\n              <TableRow>\r\n                <TableCell colSpan={10} align=\"center\">\r\n                  <CircularProgress size={24} sx={{ my: 2 }} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {!loading && students.length === 0 && (\r\n              <TableRow>\r\n                <TableCell colSpan={10} align=\"center\">\r\n                  暂无学生数据\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {!loading &&\r\n              students.map((student) => (\r\n                <TableRow key={student.id}>\r\n                  <TableCell>{student.studentNumber}</TableCell>\r\n                  <TableCell>{student.name}</TableCell>\r\n                  <TableCell>{student.gender === 'MALE' ? '男' : '女'}</TableCell>\r\n                  <TableCell>{student.className}</TableCell>\r\n                  <TableCell>{student.birthDate}</TableCell>\r\n                  <TableCell>{student.address}</TableCell>\r\n                  <TableCell>{student.parentName}</TableCell>\r\n                  <TableCell>{student.parentPhone}</TableCell>\r\n                  <TableCell>{student.notes}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {!isTeacherRole && (\r\n                      <ActionButtonsContainer>\r\n                        <Tooltip title=\"编辑\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            onClick={() => handleEdit(student)}\r\n                          >\r\n                            <EditIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"删除\">\r\n                          <IconButton\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => handleDelete(student.id)}\r\n                          >\r\n                            <DeleteIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </ActionButtonsContainer>\r\n                    )}\r\n                    {isTeacherRole && (\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        无权限操作\r\n                      </Typography>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={totalCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          labelRowsPerPage=\"每页行数\"\r\n          labelDisplayedRows={({ from, to, count }) =>\r\n            `${from}-${to} 共 ${count !== -1 ? count : `超过 ${to}`}`\r\n          }\r\n        />\r\n      </TableContainer>\r\n\r\n      {/* 添加/编辑学生对话框 */}\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          {dialogMode === 'add' ? '添加学生' : '编辑学生信息'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={2} style={{ marginTop: 16 }}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"studentNumber\"\r\n                label=\"学号\"\r\n                fullWidth\r\n                value={formData.studentNumber || ''}\r\n                onChange={handleInputChange}\r\n                error={!!formErrors.studentNumber}\r\n                helperText={formErrors.studentNumber}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"name\"\r\n                label=\"姓名\"\r\n                fullWidth\r\n                value={formData.name || ''}\r\n                onChange={handleInputChange}\r\n                error={!!formErrors.name}\r\n                helperText={formErrors.name}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth error={!!formErrors.gender} required>\r\n                <FormLabel id=\"gender-radio-group-label\">性别</FormLabel>\r\n                <RadioGroup\r\n                  row\r\n                  name=\"gender\"\r\n                  value={formData.gender || 'MALE'}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <FormControlLabel value=\"MALE\" control={<Radio />} label=\"男\" />\r\n                  <FormControlLabel value=\"FEMALE\" control={<Radio />} label=\"女\" />\r\n                </RadioGroup>\r\n                {formErrors.gender && (\r\n                  <FormHelperText error>{formErrors.gender}</FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth error={!!formErrors.classId} required>\r\n                <InputLabel>班级</InputLabel>\r\n                <Select\r\n                  name=\"classId\"\r\n                  value={formData.classId || ''}\r\n                  label=\"班级\"\r\n                  onChange={handleInputChange}\r\n                >\r\n                  {Array.isArray(classes) && classes.map((classItem: Class) => (\r\n                    <MenuItem key={classItem.id} value={classItem.id}>\r\n                      {classItem.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {formErrors.classId && (\r\n                  <FormHelperText error>{formErrors.classId}</FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"birthday\"\r\n                label=\"出生日期\"\r\n                type=\"date\"\r\n                fullWidth\r\n                InputLabelProps={{ shrink: true }}\r\n                value={formData.birthday || ''}\r\n                onChange={handleInputChange}\r\n                error={!!formErrors.birthday}\r\n                helperText={formErrors.birthday}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"parentName\"\r\n                label=\"家长姓名\"\r\n                fullWidth\r\n                value={formData.parentName || ''}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"parentPhone\"\r\n                label=\"家长电话\"\r\n                fullWidth\r\n                value={formData.parentPhone || ''}\r\n                onChange={handleInputChange}\r\n                error={!!formErrors.parentPhone}\r\n                helperText={formErrors.parentPhone}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                name=\"address\"\r\n                label=\"家庭住址\"\r\n                fullWidth\r\n                value={formData.address || ''}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"notes\"\r\n                label=\"备注\"\r\n                fullWidth\r\n                multiline\r\n                rows={2}\r\n                value={formData.notes || ''}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>取消</Button>\r\n          <Button\r\n            onClick={handleSaveStudent}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n            startIcon={loading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            {loading ? '保存中...' : '保存'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* 批量导入对话框 */}\r\n      <Dialog open={importDialogVisible} onClose={() => setImportDialogVisible(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>批量导入学生</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ p: 2 }}>\r\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n              请上传Excel文件(.xlsx格式)，模板格式包含以下字段：学号、姓名、性别、出生日期、家长姓名、家长电话、家庭住址、备注\r\n            </Typography>\r\n            \r\n            <input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              style={{ display: 'none' }}\r\n              accept=\".xlsx\"\r\n              onChange={handleFileUpload}\r\n            />\r\n            \r\n            <UploadArea\r\n              onDrop={handleFileDrop}\r\n              onDragOver={handleDragOver}\r\n              onClick={() => fileInputRef.current?.click()}\r\n            >\r\n              <CloudUploadIcon color=\"primary\" sx={{ fontSize: 48, mb: 2 }} />\r\n              <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                {uploadFile ? `已选择文件: ${uploadFile.name}` : '将文件拖到此处，或点击上传'}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                只能上传.xlsx格式的Excel文件\r\n              </Typography>\r\n            </UploadArea>\r\n            \r\n            <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                startIcon={<DownloadIcon />}\r\n                onClick={downloadTemplate}\r\n              >\r\n                下载模板\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setImportDialogVisible(false)}>取消</Button>\r\n          <Button\r\n            onClick={confirmImport}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={importLoading || !uploadFile}\r\n            startIcon={importLoading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            {importLoading ? '导入中...' : '上传并导入'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 提示框 */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={3000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseSnackbar} \r\n          severity={snackbar.severity}\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      \r\n      {/* 确认对话框 */}\r\n      <Dialog\r\n        open={confirmDialog.open}\r\n        onClose={closeConfirmDialog}\r\n      >\r\n        <DialogTitle>{confirmDialog.title}</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>{confirmDialog.content}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeConfirmDialog}>取消</Button>\r\n          <Button \r\n            onClick={() => {\r\n              confirmDialog.onConfirm();\r\n              closeConfirmDialog();\r\n            }} \r\n            color=\"error\" \r\n            variant=\"contained\"\r\n            autoFocus\r\n          >\r\n            确定删除\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StudentManagement; "],"names":["directAxios","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","concat","error","Promise","reject","getAllStudents","async","get","getAllStudentsPaged","page","arguments","length","undefined","size","console","log","getStudentsByClass","classId","getStudentsByClassPaged","searchStudentsPaged","name","createStudent","post","student","updateStudent","id","put","deleteStudent","delete","batchImportStudents","formData","getAllClasses","response","状态码","status","数据","data","请求头","searchClasses","query","createClass","classInfo","updateClass","deleteClass","assignHeadTeacher","teacherId","getStudentSelectOptions","PageHeader","styled","Box","_ref","theme","display","justifyContent","alignItems","marginBottom","spacing","ActionButtonsContainer","_ref2","gap","UploadArea","_ref3","flexDirection","border","palette","primary","main","borderRadius","shape","padding","marginTop","backgroundColor","background","default","cursor","action","hover","commonHeight","StudentManagement","user","useAuth","isTeacherRole","role","students","setStudents","useState","classes","setClasses","loading","setLoading","setPage","rowsPerPage","setRowsPerPage","totalCount","setTotalCount","searchTerm","setSearchTerm","selectedClass","setSelectedClass","openDialog","setOpenDialog","dialogMode","setDialogMode","currentStudent","setCurrentStudent","setFormData","studentNumber","gender","birthday","parentName","parentPhone","address","notes","snackbar","setSnackbar","open","message","severity","formErrors","setFormErrors","confirmDialog","setConfirmDialog","title","content","onConfirm","importDialogVisible","setImportDialogVisible","importLoading","setImportLoading","uploadFile","setUploadFile","fileInputRef","useRef","fetchStudents","_response","studentAPI","Number","pagedData","processedStudents","map","className","foundClass","Array","isArray","find","cls","_objectSpread","totalElements","_error$response","_error$response$data","useEffect","classAPI","fetchClasses","handleSearch","handleCloseDialog","handleInputChange","e","value","target","prev","showSnackbar","handleCloseSnackbar","closeConfirmDialog","handleDelete","studentToDelete","openConfirmDialog","_error$response3","_error$response3$data","_jsxs","sx","children","_jsx","Typography","variant","component","Button","color","startIcon","AddIcon","onClick","handleAddStudent","CloudUploadIcon","handleBatchImport","mb","flexWrap","FormControl","minWidth","InputLabel","Select","labelId","label","onChange","event","height","MenuItem","classItem","TextField","onKeyPress","key","InputProps","startAdornment","InputAdornment","position","SearchIcon","endAdornment","IconButton","handleClearSearch","ClearIcon","fontSize","style","RefreshIcon","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","CircularProgress","my","birthDate","Tooltip","handleEdit","EditIcon","DeleteIcon","TablePagination","rowsPerPageOptions","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt","labelRowsPerPage","labelDisplayedRows","_ref4","from","to","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","Grid","container","item","xs","sm","helperText","required","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","FormHelperText","type","InputLabelProps","shrink","multiline","rows","DialogActions","validateForm","_formData$name","_formData$studentNumb","errors","trim","test","Object","keys","studentData","_error$response2","_error$response2$data","disabled","p","ref","accept","files","onDrop","preventDefault","stopPropagation","dataTransfer","onDragOver","_fileInputRef$current","current","click","mt","DownloadIcon","downloadTemplate","link","document","createElement","href","download","body","appendChild","removeChild","FormData","append","toString","_error$response4","_error$response4$data","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","width","autoFocus"],"sourceRoot":""}