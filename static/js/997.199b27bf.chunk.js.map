{"version":3,"file":"static/js/997.199b27bf.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","../node_modules/@mui/icons-material/esm/Save.js","../node_modules/@mui/icons-material/esm/People.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Assessment.js","api/dashboard.ts","views/Dashboard.tsx","../node_modules/@mui/icons-material/esm/School.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root'\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5s-3 1.34-3 3 1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'People');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2M9 17H7v-7h2zm4 0h-2V7h2zm4 0h-2v-4h2z\"\n}), 'Assessment');","import axiosInstance from './axios';\r\nimport axios from 'axios';\r\n\r\n// 创建一个专用于直接请求后端的axios实例\r\nconst directAxios = axios.create({\r\n  baseURL: 'http://124.70.74.246:8081',\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 请求拦截器 - 添加认证令牌\r\ndirectAxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninterface DashboardStats {\r\n  teacherCount: number;\r\n  studentCount: number;\r\n  classCount: number;\r\n  recentLeaves?: any[];\r\n  classDistribution?: any[];\r\n  genderDistribution?: any;\r\n  attendanceRate?: number;\r\n}\r\n\r\ninterface TeacherScheduleResponse {\r\n  scheduleData: string;\r\n}\r\n\r\n/**\r\n * 获取仪表盘统计数据\r\n * @returns Promise\r\n */\r\nexport const getDashboardStats = async (): Promise<{data: DashboardStats}> => {\r\n  console.log('获取仪表盘统计数据，直接请求后端');\r\n  return await directAxios.get('/api/dashboard/statistics');\r\n};\r\n\r\n/**\r\n * 获取班级学生分布\r\n * @returns Promise\r\n */\r\nexport const getClassDistribution = async () => {\r\n  return await directAxios.get('/api/dashboard/class-distribution');\r\n};\r\n\r\n/**\r\n * 获取性别分布\r\n * @returns Promise\r\n */\r\nexport const getGenderDistribution = async () => {\r\n  return await directAxios.get('/api/dashboard/gender-distribution');\r\n};\r\n\r\n/**\r\n * 获取最近请假记录\r\n * @param limit 限制数量\r\n * @returns Promise\r\n */\r\nexport const getRecentLeaves = async (limit: number = 5) => {\r\n  return await directAxios.get(`/api/dashboard/recent-leaves?limit=${limit}`);\r\n};\r\n\r\n/**\r\n * 获取教师课程表\r\n * @returns Promise\r\n */\r\nexport const getTeacherSchedule = async (): Promise<{data: TeacherScheduleResponse}> => {\r\n  console.log('获取教师课程表，直接请求后端');\r\n  return await directAxios.get('/api/dashboard/schedule');\r\n};\r\n\r\n/**\r\n * 保存教师课程表\r\n * @param scheduleData 课程表数据\r\n * @returns Promise\r\n */\r\nexport const saveTeacherSchedule = async (scheduleData: any) => {\r\n  const jsonScheduleData = JSON.stringify(scheduleData);\r\n  return await directAxios.post('/api/dashboard/schedule', { scheduleData: jsonScheduleData });\r\n}; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  GridLegacy as Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Divider,\r\n  Avatar,\r\n  Button,\r\n  styled,\r\n  TextField,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Tooltip,\r\n  Popover,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Dashboard as DashboardIcon,\r\n  People as PeopleIcon,\r\n  School as SchoolIcon,\r\n  Assessment as AssessmentIcon,\r\n  Edit as EditIcon,\r\n  Save as SaveIcon\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getDashboardStats, getTeacherSchedule, saveTeacherSchedule } from '../api/dashboard';\r\n\r\n// 定义类型\r\ninterface TimeSlot {\r\n  startTime: string;\r\n  endTime: string;\r\n  periodName: string;\r\n}\r\n\r\ninterface ScheduleRow {\r\n  id: number;\r\n  time: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  periodName: string;\r\n  [key: string]: any; // 用于存储周一到周五的课程内容\r\n}\r\n\r\ninterface WeekDay {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\ninterface Statistics {\r\n  teacherCount: number;\r\n  studentCount: number;\r\n  classCount: number;\r\n}\r\n\r\n// 样式化组件\r\nconst StatsCard = styled(Card)(({ theme }) => ({\r\n  borderRadius: '16px',\r\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\r\n  height: '100%',\r\n  transition: 'transform 0.3s, box-shadow 0.3s',\r\n  '&:hover': {\r\n    transform: 'translateY(-5px)',\r\n    boxShadow: '0 8px 25px rgba(0, 0, 0, 0.15)',\r\n  },\r\n}));\r\n\r\nconst ScheduleCard = styled(Card)(({ theme }) => ({\r\n  borderRadius: '16px',\r\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\r\n  marginTop: theme.spacing(4),\r\n  overflow: 'visible',\r\n}));\r\n\r\nconst ScheduleHeader = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 3),\r\n  borderBottom: `1px solid ${theme.palette.divider}`,\r\n}));\r\n\r\nconst ScheduleTextField = styled(TextField)(({ theme }) => ({\r\n  '& .MuiOutlinedInput-root': {\r\n    '&:hover fieldset': {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\n\r\nconst TimeCell = styled(TableCell)(({ theme }) => ({\r\n  position: 'relative',\r\n  whiteSpace: 'pre-line',\r\n  minWidth: '150px',\r\n  maxWidth: '150px',\r\n  width: '150px',\r\n}));\r\n\r\nconst EditTimeButton = styled(IconButton)(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: '50%',\r\n  transform: 'translateY(-50%)',\r\n  right: '24px',\r\n  padding: '4px',\r\n  opacity: 0.5,\r\n  '&:hover': {\r\n    opacity: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.04)',\r\n  },\r\n}));\r\n\r\n// 仪表盘组件\r\nconst Dashboard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [statistics, setStatistics] = useState<Statistics>({\r\n    teacherCount: 0,\r\n    studentCount: 0,\r\n    classCount: 0,\r\n  });\r\n\r\n  // 课程表相关状态\r\n  const [scheduleData, setScheduleData] = useState<ScheduleRow[]>([]);\r\n  const [editableSchedule, setEditableSchedule] = useState<ScheduleRow[]>([]);\r\n  const [scheduleDialogVisible, setScheduleDialogVisible] = useState(false);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [timeEditAnchorEl, setTimeEditAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [currentEditingTime, setCurrentEditingTime] = useState<ScheduleRow | null>(null);\r\n  \r\n  // 周一到周五\r\n  const weekDays: WeekDay[] = [\r\n    { label: '周一', value: 'monday' },\r\n    { label: '周二', value: 'tuesday' },\r\n    { label: '周三', value: 'wednesday' },\r\n    { label: '周四', value: 'thursday' },\r\n    { label: '周五', value: 'friday' },\r\n  ];\r\n\r\n  // 默认时间段配置\r\n  const defaultTimeSlots: TimeSlot[] = [\r\n    { startTime: '08:00', endTime: '08:45', periodName: '第一节' },\r\n    { startTime: '08:55', endTime: '09:40', periodName: '第二节' },\r\n    { startTime: '10:00', endTime: '10:45', periodName: '第三节' },\r\n    { startTime: '10:55', endTime: '11:40', periodName: '第四节' },\r\n    { startTime: '14:00', endTime: '14:45', periodName: '第五节' },\r\n    { startTime: '14:55', endTime: '15:40', periodName: '第六节' },\r\n    { startTime: '16:00', endTime: '16:45', periodName: '第七节' },\r\n    { startTime: '16:55', endTime: '17:40', periodName: '第八节' },\r\n  ];\r\n\r\n  const [snackbar, setSnackbar] = useState<{\r\n    open: boolean;\r\n    message: string;\r\n    severity: 'success' | 'error' | 'info' | 'warning';\r\n  }>({\r\n    open: false,\r\n    message: '',\r\n    severity: 'info'\r\n  });\r\n\r\n  const showSnackbar = (message: string, severity: 'success' | 'error' | 'info' | 'warning' = 'info') => {\r\n    setSnackbar({\r\n      open: true,\r\n      message,\r\n      severity\r\n    });\r\n  };\r\n\r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  // 获取统计数据\r\n  const fetchStatistics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getDashboardStats();\r\n      if (response && response.data) {\r\n        setStatistics({\r\n          teacherCount: response.data.teacherCount || 0,\r\n          studentCount: response.data.studentCount || 0,\r\n          classCount: response.data.classCount || 0,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('获取统计数据失败:', error);\r\n      // 使用默认数据\r\n      setStatistics({\r\n        teacherCount: 0,\r\n        studentCount: 0,\r\n        classCount: 0,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 初始化课程表数据\r\n  const initScheduleData = async () => {\r\n    try {\r\n      const response = await getTeacherSchedule();\r\n      if (response && response.data && response.data.scheduleData) {\r\n        try {\r\n          // 后端返回的是JSON字符串，需要解析\r\n          const parsedSchedule = JSON.parse(response.data.scheduleData);\r\n          \r\n          // 确保每行数据都有完整的时间信息\r\n          setScheduleData(parsedSchedule.map((row: any, index: number) => {\r\n            // 如果没有时间相关属性，则添加\r\n            if (!row.startTime || !row.endTime) {\r\n              const defaultSlot = defaultTimeSlots[index] || {\r\n                startTime: '00:00',\r\n                endTime: '00:00',\r\n                periodName: `第${index + 1}节`\r\n              };\r\n              \r\n              // 从时间字符串中解析\r\n              const timeParts = row.time.split('\\n')[0].split('-');\r\n              \r\n              return {\r\n                ...row,\r\n                id: index + 1,\r\n                startTime: timeParts[0] || defaultSlot.startTime,\r\n                endTime: timeParts[1] || defaultSlot.endTime,\r\n                periodName: row.time.split('\\n')[1] || defaultSlot.periodName,\r\n              };\r\n            }\r\n            \r\n            return { ...row, id: index + 1 };\r\n          }));\r\n        } catch (error) {\r\n          console.error('解析课程表数据失败:', error);\r\n          createDefaultSchedule();\r\n        }\r\n      } else {\r\n        // 没有数据或格式不对，创建默认课程表\r\n        createDefaultSchedule();\r\n      }\r\n    } catch (error) {\r\n      console.error('获取课程表数据失败:', error);\r\n      createDefaultSchedule();\r\n    }\r\n  };\r\n\r\n  // 创建默认课程表\r\n  const createDefaultSchedule = () => {\r\n    // 创建空的课程表\r\n    const newScheduleData = defaultTimeSlots.map((slot, index) => {\r\n      const timeStr = `${slot.startTime}-${slot.endTime}\\n${slot.periodName}`;\r\n      const row: ScheduleRow = { \r\n        id: index + 1,\r\n        time: timeStr,\r\n        startTime: slot.startTime,\r\n        endTime: slot.endTime,\r\n        periodName: slot.periodName,\r\n      };\r\n      \r\n      weekDays.forEach(day => {\r\n        row[day.value] = '';\r\n      });\r\n      \r\n      return row;\r\n    });\r\n    \r\n    setScheduleData(newScheduleData);\r\n  };\r\n\r\n  // 处理编辑课程表\r\n  const handleEditSchedule = () => {\r\n    setEditableSchedule(JSON.parse(JSON.stringify(scheduleData)));\r\n    setScheduleDialogVisible(true);\r\n  };\r\n\r\n  // 打开时间编辑弹出框\r\n  const handleTimeEditClick = (event: React.MouseEvent<HTMLButtonElement>, row: ScheduleRow) => {\r\n    setTimeEditAnchorEl(event.currentTarget);\r\n    setCurrentEditingTime({...row});\r\n  };\r\n\r\n  // 关闭时间编辑弹出框\r\n  const handleTimeEditClose = () => {\r\n    setTimeEditAnchorEl(null);\r\n    setCurrentEditingTime(null);\r\n  };\r\n\r\n  // 更新时间槽\r\n  const updateTimeSlot = () => {\r\n    if (!currentEditingTime) return;\r\n    \r\n    if (currentEditingTime.startTime && currentEditingTime.endTime) {\r\n      const startTime = currentEditingTime.startTime;\r\n      const endTime = currentEditingTime.endTime;\r\n      const periodName = currentEditingTime.periodName || '';\r\n      \r\n      const updatedRow = {\r\n        ...currentEditingTime,\r\n        startTime,\r\n        endTime,\r\n        time: `${startTime}-${endTime}\\n${periodName}`,\r\n      };\r\n      \r\n      // 更新scheduleData中的对应行\r\n      const updatedScheduleData = scheduleData.map(row => \r\n        row.id === updatedRow.id ? updatedRow : row\r\n      );\r\n      \r\n      setScheduleData(updatedScheduleData);\r\n      \r\n      // 检查用户登录状态\r\n      const token = localStorage.getItem('token');\r\n      if (!token || token === 'undefined' || token === 'null') {\r\n        showSnackbar('登录已过期，请重新登录', 'warning');\r\n        window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);\r\n        return;\r\n      }\r\n      \r\n      // 自动保存到服务器\r\n      saveTeacherSchedule(updatedScheduleData)\r\n        .then(() => {\r\n          showSnackbar('时间更新成功并已保存', 'success');\r\n        })\r\n        .catch(error => {\r\n          console.error('保存课程表失败:', error);\r\n          if (error.response?.status === 403 || error.response?.status === 401) {\r\n            showSnackbar('登录已过期或权限不足，请重新登录', 'warning');\r\n            window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);\r\n          } else {\r\n            showSnackbar('保存失败: ' + (error.response?.data?.message || '请稍后重试'), 'error');\r\n          }\r\n        });\r\n      \r\n      handleTimeEditClose();\r\n    }\r\n  };\r\n\r\n  // 保存课程表\r\n  const handleSaveSchedule = async () => {\r\n    setSubmitLoading(true);\r\n    \r\n    // 检查用户登录状态\r\n    const token = localStorage.getItem('token');\r\n    if (!token || token === 'undefined' || token === 'null') {\r\n      showSnackbar('登录已过期，请重新登录', 'warning');\r\n      window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);\r\n      setSubmitLoading(false);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      await saveTeacherSchedule(editableSchedule);\r\n      setScheduleData(JSON.parse(JSON.stringify(editableSchedule)));\r\n      setScheduleDialogVisible(false);\r\n      showSnackbar('课程表保存成功', 'success');\r\n    } catch (error: any) {\r\n      console.error('保存课程表失败:', error);\r\n      if (error.response?.status === 403 || error.response?.status === 401) {\r\n        showSnackbar('登录已过期或权限不足，请重新登录', 'warning');\r\n        window.location.href = '/login?redirect=' + encodeURIComponent(window.location.pathname);\r\n      } else {\r\n        showSnackbar('保存课程表失败: ' + (error.response?.data?.message || '请稍后重试'), 'error');\r\n      }\r\n    } finally {\r\n      setSubmitLoading(false);\r\n    }\r\n  };\r\n\r\n  // 处理课程内容变化\r\n  const handleScheduleChange = (rowIndex: number, dayKey: string, value: string) => {\r\n    const updatedSchedule = [...editableSchedule];\r\n    updatedSchedule[rowIndex][dayKey] = value;\r\n    setEditableSchedule(updatedSchedule);\r\n  };\r\n\r\n  // 处理时间输入变化\r\n  const handleTimeChange = (field: 'startTime' | 'endTime' | 'periodName', value: string) => {\r\n    if (currentEditingTime) {\r\n      setCurrentEditingTime({\r\n        ...currentEditingTime,\r\n        [field]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  // 模拟统计数据\r\n  const statsData = [\r\n    {\r\n      title: '教师总数',\r\n      value: statistics.teacherCount,\r\n      icon: <PeopleIcon color=\"primary\" fontSize=\"large\" />,\r\n      color: 'primary.main',\r\n    },\r\n    {\r\n      title: '学生总数',\r\n      value: statistics.studentCount,\r\n      icon: <SchoolIcon sx={{ color: '#34c759' }} fontSize=\"large\" />,\r\n      color: 'success.main',\r\n    },\r\n    {\r\n      title: '班级总数',\r\n      value: statistics.classCount,\r\n      icon: <AssessmentIcon sx={{ color: '#ff9500' }} fontSize=\"large\" />,\r\n      color: 'warning.main',\r\n    },\r\n  ];\r\n\r\n  // 初始化数据\r\n  useEffect(() => {\r\n    fetchStatistics();\r\n    initScheduleData();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h5\" component=\"h1\" sx={{ mb: 3 }}>\r\n        仪表盘\r\n      </Typography>\r\n\r\n      {/* 统计卡片 */}\r\n      <Grid container spacing={3} sx={{ marginBottom: 4 }}>\r\n        {statsData.map((stat, index) => (\r\n          <Grid item key={index} xs={12} sm={6} md={4} lg={4}>\r\n            <StatsCard>\r\n              <CardContent>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      width: 60,\r\n                      height: 60,\r\n                      borderRadius: '50%',\r\n                      backgroundColor: `${stat.color}15`,\r\n                      mr: 2,\r\n                    }}\r\n                  >\r\n                    {stat.icon}\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {stat.title}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h4\"\r\n                      component=\"div\"\r\n                      sx={{ fontWeight: 600, mt: 0.5 }}\r\n                    >\r\n                      {stat.value}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </StatsCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* 课程表 */}\r\n      <ScheduleCard>\r\n        <ScheduleHeader>\r\n          <Typography variant=\"h6\">我的课程表</Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n            onClick={handleEditSchedule}\r\n          >\r\n            编辑课程表\r\n          </Button>\r\n        </ScheduleHeader>\r\n        <CardContent>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell width=\"150px\">时间</TableCell>\r\n                  {weekDays.map((day) => (\r\n                    <TableCell key={day.value}>{day.label}</TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {scheduleData.map((row, rowIndex) => (\r\n                  <TableRow key={rowIndex} sx={{ '&:nth-of-type(odd)': { backgroundColor: 'rgba(0, 0, 0, 0.02)' } }}>\r\n                    <TimeCell>\r\n                      {row.time}\r\n                      <Tooltip title=\"编辑时间\">\r\n                        <EditTimeButton size=\"small\" onClick={(e) => handleTimeEditClick(e, row)}>\r\n                          <EditIcon fontSize=\"small\" />\r\n                        </EditTimeButton>\r\n                      </Tooltip>\r\n                    </TimeCell>\r\n                    {weekDays.map((day) => (\r\n                      <TableCell key={day.value}>\r\n                        {row[day.value]}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </CardContent>\r\n      </ScheduleCard>\r\n\r\n      {/* 编辑课程表对话框 */}\r\n      <Dialog \r\n        open={scheduleDialogVisible} \r\n        onClose={() => setScheduleDialogVisible(false)}\r\n        maxWidth=\"lg\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>编辑课程表</DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n            请在对应时间段填写课程内容，留空表示没有课程\r\n          </Typography>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell width=\"150px\">时间</TableCell>\r\n                  {weekDays.map((day) => (\r\n                    <TableCell key={day.value}>{day.label}</TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {editableSchedule.map((row, rowIndex) => (\r\n                  <TableRow key={rowIndex}>\r\n                    <TableCell width=\"150px\">{row.time}</TableCell>\r\n                    {weekDays.map((day) => (\r\n                      <TableCell key={day.value}>\r\n                        <ScheduleTextField\r\n                          value={row[day.value] || ''}\r\n                          onChange={(e) => handleScheduleChange(rowIndex, day.value, e.target.value)}\r\n                          placeholder=\"请输入课程\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setScheduleDialogVisible(false)}>取消</Button>\r\n          <Button \r\n            onClick={handleSaveSchedule} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={submitLoading}\r\n            startIcon={submitLoading ? null : <SaveIcon />}\r\n          >\r\n            {submitLoading ? '保存中...' : '保存'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* 时间编辑弹出框 */}\r\n      <Popover\r\n        open={Boolean(timeEditAnchorEl)}\r\n        anchorEl={timeEditAnchorEl}\r\n        onClose={handleTimeEditClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        <Box sx={{ p: 2, width: 250 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>编辑时间</Typography>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>开始时间</Typography>\r\n            <TextField\r\n              type=\"time\"\r\n              value={currentEditingTime?.startTime || ''}\r\n              onChange={(e) => handleTimeChange('startTime', e.target.value)}\r\n              size=\"small\"\r\n              fullWidth\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                step: 300, // 5分钟步长\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>结束时间</Typography>\r\n            <TextField\r\n              type=\"time\"\r\n              value={currentEditingTime?.endTime || ''}\r\n              onChange={(e) => handleTimeChange('endTime', e.target.value)}\r\n              size=\"small\"\r\n              fullWidth\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                step: 300, // 5分钟步长\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ mb: 2 }}>\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>课时名称</Typography>\r\n            <TextField\r\n              value={currentEditingTime?.periodName || ''}\r\n              onChange={(e) => handleTimeChange('periodName', e.target.value)}\r\n              placeholder=\"例如：第一节\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n          </Box>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button onClick={handleTimeEditClose} sx={{ mr: 1 }}>\r\n              取消\r\n            </Button>\r\n            <Button onClick={updateTimeSlot} variant=\"contained\" color=\"primary\">\r\n              确认\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Popover>\r\n\r\n      {/* Snackbar 提示 */}\r\n      <Snackbar\r\n        open={snackbar.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert\r\n          onClose={handleCloseSnackbar}\r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard; ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13.18v4L12 21l7-3.82v-4L12 17zM12 3 1 9l11 6 9-4.91V17h2V9z\"\n}), 'School');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root'\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["getCardContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardContentRoot","styled","name","padding","paddingBottom","React","inProps","ref","props","useDefaultProps","className","component","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","root","useUtilityClasses","_jsx","as","clsx","createSvgIcon","d","directAxios","axios","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","concat","error","Promise","reject","saveTeacherSchedule","async","jsonScheduleData","JSON","stringify","scheduleData","post","StatsCard","Card","_ref","theme","borderRadius","boxShadow","height","transition","transform","ScheduleCard","_ref2","marginTop","spacing","overflow","ScheduleHeader","Box","_ref3","display","justifyContent","alignItems","borderBottom","palette","divider","ScheduleTextField","TextField","_ref4","borderColor","primary","main","TimeCell","TableCell","_ref5","position","whiteSpace","minWidth","maxWidth","width","EditTimeButton","IconButton","_ref6","top","right","opacity","backgroundColor","Dashboard","useNavigate","user","useAuth","loading","setLoading","useState","statistics","setStatistics","teacherCount","studentCount","classCount","setScheduleData","editableSchedule","setEditableSchedule","scheduleDialogVisible","setScheduleDialogVisible","submitLoading","setSubmitLoading","timeEditAnchorEl","setTimeEditAnchorEl","currentEditingTime","setCurrentEditingTime","weekDays","label","value","defaultTimeSlots","startTime","endTime","periodName","snackbar","setSnackbar","open","message","severity","showSnackbar","arguments","length","undefined","handleCloseSnackbar","prev","fetchStatistics","response","console","log","get","getDashboardStats","data","initScheduleData","getTeacherSchedule","parsedSchedule","parse","map","row","index","defaultSlot","timeParts","time","split","id","createDefaultSchedule","newScheduleData","forEach","day","handleTimeEditClose","handleTimeChange","field","statsData","title","icon","PeopleIcon","color","fontSize","SchoolIcon","sx","AssessmentIcon","useEffect","_jsxs","children","Typography","variant","mb","Grid","container","marginBottom","stat","item","xs","sm","md","lg","CardContent","mr","fontWeight","mt","Button","startIcon","EditIcon","onClick","handleEditSchedule","TableContainer","Table","TableHead","TableRow","TableBody","rowIndex","Tooltip","size","e","handleTimeEditClick","event","currentTarget","Dialog","onClose","fullWidth","DialogTitle","DialogContent","onChange","handleScheduleChange","dayKey","updatedSchedule","target","placeholder","DialogActions","window","location","href","encodeURIComponent","pathname","_error$response4","_error$response5","_error$response6","_error$response6$data","status","disabled","SaveIcon","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","p","type","InputLabelProps","shrink","inputProps","step","updateTimeSlot","updatedRow","updatedScheduleData","then","catch","_error$response","_error$response2","_error$response3","_error$response3$data","Snackbar","autoHideDuration","Alert","getCardUtilityClass","CardRoot","Paper","raised","elevation"],"sourceRoot":""}